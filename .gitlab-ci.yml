include: variables.yml

stages:
  - scratch
  - base
  - stacks
  - buildpacks
  - prebuild
  - build

before_script:
  - |
    export INFRA_VERSION=${CI_COMMIT_TAG:-${CI_COMMIT_SHORT_SHA}}
    export KEYCLOAK_THEMES_IMAGE=${DOCKER_HUB}/${DOCKER_NAMESPACE}/keycloak-themes:${INFRA_VERSION}
    export HOST_DOCKER_GID=$(stat -t /var/run/docker.sock | awk '{ print $6 }')
    echo "Infra: ${INFRA_VERSION}"
    source gitlab/env.sh

import-images:
  interruptible: true
  stage: scratch
  script:
    - ./gitlab/${CI_JOB_NAME}.sh

# mirror-homebrew:
#   interruptible: true
#   stage: scratch
#   script:
#     - ./gitlab/${CI_JOB_NAME}.sh

noroutine-ca:
  interruptible: true
  stage: scratch
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION}

keycloak-themes:
  interruptible: true
  stage: prebuild
  script:
    - |
      git clone https://readonly:${INFRA_READONLY_TOKEN}@git.nrtn.dev/infra/keycloak-themes.git
      cd keycloak-themes
      pack build --clear-cache --publish ${KEYCLOAK_THEMES_IMAGE}

grafana-dashboards:
  interruptible: true
  stage: prebuild
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg GRIT_VERSION

ingress-default-backend:
  interruptible: true
  stage: prebuild
  script:
    - |
      git clone --depth 1 https://readonly:${INFRA_READONLY_TOKEN}@git.nrtn.dev/infra/ingress-default-backend.git
      cd ingress-default-backend
      pack build --clear-cache --publish ${DOCKER_HUB}/${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION}

website:
  interruptible: true
  stage: prebuild
  script:
    - |
      git clone --depth 1 --branch ${WEBSITE_VERSION} https://readonly:${INFRA_READONLY_TOKEN}@git.nrtn.dev/infra/noroutine-website.git
      cd noroutine-website
      pack build --clear-cache --publish ${DOCKER_HUB}/${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION}

connect-landing:
  interruptible: true
  stage: prebuild
  script:
    - | 
      git clone --depth 1 --branch ${CONNECT_LANDING_VERSION} https://readonly:${SANDBOX_READONLY_TOKEN}@git.nrtn.dev/sandbox/noroutine-connect-landing.git
      cd noroutine-connect-landing
      pack build --clear-cache --publish ${DOCKER_HUB}/${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION}

debian:
  interruptible: true
  stage: base
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg DEBIAN_VERSION

ubuntu20:
  interruptible: true
  stage: base
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg UBUNTU_FOCAL_VERSION

ubuntu22:
  interruptible: true
  stage: base
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg UBUNTU_JAMMY_VERSION

alpine:
  interruptible: true
  stage: base
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg ALPINE_VERSION

busybox:
  interruptible: true
  stage: base
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg ALPINE_VERSION \
        --build-arg BUSYBOX_VERSION

distroless:
  interruptible: true
  stage: base
  parallel:
    matrix:
      - FLAVOUR: [ "static", "base", "java11", "java17", "cc", "nodejs"]
        DUMMY: [ "dummy" ]
  script:
    - ./gitlab/build-image.sh distroless ${DOCKER_NAMESPACE}/distroless-${FLAVOUR}-${DISTROLESS_VERSION}:${INFRA_VERSION} \
        --build-arg DISTROLESS_VERSION \
        --build-arg FLAVOUR

jdk-zulu:
  interruptible: true
  stage: base
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg JDK_ZULU_VERSION

heroku-20:
  interruptible: true
  stage: stacks
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION}
      ./gitlab/build-image.sh ${CI_JOB_NAME}-build ${DOCKER_NAMESPACE}/${CI_JOB_NAME}-build:${INFRA_VERSION} \
        --build-arg STACK_IMAGE=${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION}

# heroku-22:
#   interruptible: true
#   stage: stacks
#   script:
#     - |
#       ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION}
#       ./gitlab/build-image.sh ${CI_JOB_NAME}-build ${DOCKER_NAMESPACE}/${CI_JOB_NAME}-build:${INFRA_VERSION} \
#         --build-arg STACK_IMAGE=${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION}

builder:
  interruptible: true
  stage: build
  script:
    - ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg BUILDPACKS_VERSION=${INFRA_VERSION} \
        --build-arg GIT_SERVER_HOST=${CI_SERVER_HOST} \
        --build-arg HOST_DOCKER_GID \
        --build-arg ACTIONS_RUNNER_VERSION

shell:
  interruptible: true
  stage: build
  script:
    - ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg BUILDPACKS_VERSION=${INFRA_VERSION} \
        --build-arg GIT_SERVER_HOST=${CI_SERVER_HOST} \
        --build-arg HOST_DOCKER_GID

ocsp-responder:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION}

openvpn:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION}

wireguard:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg WIREGUARD_VERSION

shadowbox:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg SHADOWBOX_VERSION

gitlab-auto-build:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg GITLAB_AUTO_BUILD_VERSION

gitlab-auto-deploy:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg GITLAB_AUTO_DEPLOY_VERSION

gitlab-agentk:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg GITLAB_AGENTK_VERSION

gitlab-cluster-applications:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg GITLAB_CLUSTER_APPLICATIONS_VERSION

heroku-buildpacks:
  interruptible: true
  stage: buildpacks
  script:
    - |
      sudo apt update -yyq
      sudo apt install -yyq musl-tools
      curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y -t x86_64-unknown-linux-musl
      source $HOME/.cargo/env
      cargo install libcnb-cargo

    - cd ${CI_JOB_NAME}
    - |
      # Fetch upstream buildpack sources
      # curl -sLo- https://github.com/noroutine/buildpacks-nodejs/archive/refs/heads/main.tar.gz | tar zx buildpacks-nodejs-main/{common,buildpacks}
      curl -sLo- https://github.com/heroku/buildpacks-nodejs/archive/refs/heads/main.tar.gz | tar zx buildpacks-nodejs-main/{Cargo.lock,Cargo.toml,common,buildpacks}
      # curl -sLo- https://github.com/heroku/buildpacks-jvm/archive/refs/heads/main.tar.gz | tar zx buildpacks-jvm-main/{common,buildpacks}

    - |
      # Release upstream buildpacks
      for buildpack_id in heroku/nodejs-npm heroku/nodejs-typescript heroku/nodejs-yarn heroku/nodejs-engine heroku/nodejs-function-invoker; do \
        REQUESTED_BUILDPACK_ID=${buildpack_id} ./release-buildpack.sh; \
      done

    - |
      # Release meta-buildpacks
      for buildpack_id in heroku/nodejs heroku/nodejs-function; do \
        REQUESTED_BUILDPACK_ID=${buildpack_id} ./release-buildpack.sh; \
      done
    
    - |
      # Release builder
      make publish20 \
        BUILDPACKS_VERSION=${INFRA_VERSION} \
        BUILDPACKS_BASE=infra/heroku-20 \
        BUILDPACKS_BASE_VERSION=${INFRA_VERSION}

      # make publish22 \
      #   BUILDPACKS_VERSION=${INFRA_VERSION} \
      #   BUILDPACKS_BASE=infra/heroku-22 \
      #   BUILDPACKS_BASE_VERSION=${INFRA_VERSION}

buildpacksio-lifecycle:
  interruptible: true
  stage: buildpacks
  script:
    - ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
      --build-arg BUILDPACKSIO_LIFECYCLE_VERSION

gitlab-runner:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg GITLAB_RUNNER_VERSION

gitlab:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg GITLAB_VERSION

actions-runner-controller:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg ACTIONS_RUNNER_CONTROLLER_VERSION

actions-runner:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg HOST_DOCKER_GID \
        --build-arg ACTIONS_RUNNER_IMAGE_VERSION

actions-runner-dind:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg HOST_DOCKER_GID \
        --build-arg ACTIONS_RUNNER_IMAGE_VERSION

kube-rbac-proxy:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg KUBE_RBAC_PROXY_VERSION

kaniko-executor:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg KANIKO_VERSION

nexus:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg NEXUS_VERSION

vaultwarden:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg VAULTWARDEN_VERSION

radius:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg FREERADIUS_VERSION

mkdocs:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg MKDOCS_VERSION

traefik:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg TRAEFIK_VERSION

# latex:
#   stage: build
#   script:
#     - |
#       ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
#         --build-arg LATEX_BASE

powerdns:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION}

unbound:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION}

keycloak:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg KEYCLOAK_VERSION \
        --build-arg KEYCLOAK_THEMES_IMAGE

postgres:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg POSTGRES_VERSION

jira:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg JIRA_VERSION

nextcloud:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg NEXTCLOUD_VERSION

speedtest:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg SPEEDTEST_VERSION \
        --build-arg GOLANG_ALPINE_IMAGE=${DOCKER_HUB}/golang:${GOLANG_ALPINE_VERSION} \
        --build-arg ALPINE_IMAGE=${DOCKER_HUB}/${DOCKER_NAMESPACE}/alpine:${INFRA_VERSION}

haproxy:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg HAPROXY_VERSION

minio:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg MINIO_VERSION

minio-console:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg MINIO_CONSOLE_VERSION

prometheus:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg PROMETHEUS_VERSION

karma:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg KARMA_VERSION

alertmanager:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg ALERTMANAGER_VERSION

pushgateway:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg PUSHGATEWAY_VERSION

blackbox-exporter:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg BLACKBOX_EXPORTER_VERSION

snmp-exporter:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg SNMP_EXPORTER_VERSION

ipmi-exporter:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg IPMI_EXPORTER_VERSION \
        --build-arg GOLANG_VERSION

cadvisor:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg CADVISOR_VERSION

node-exporter:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg NODE_EXPORTER_VERSION

consul-exporter:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg CONSUL_EXPORTER_VERSION

prometheus-es-exporter:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg PROMETHEUS_ES_EXPORTER_VERSION

ssl-exporter:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg SSL_EXPORTER_VERSION

rsyslog:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION}

squid:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg SQUID_VERSION

ioping-exporter:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg GOLANG_VERSION

ldap-exporter:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg LDAP_EXPORTER_VERSION

grafana:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg GRAFANA_VERSION

promtail:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg PROMTAIL_VERSION

loki:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg LOKI_VERSION

m3dbnode:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg M3DBNODE_VERSION

m3coordinator:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg M3COORDINATOR_VERSION

cortex:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg CORTEX_VERSION

elasticsearch:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg ELASTICSEARCH_VERSION

logstash:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg LOGSTASH_VERSION

kibana:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg KIBANA_VERSION
mongo:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg MONGO_VERSION

alerta:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg ALERTA_VERSION

wordpress:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg WORDPRESS_VERSION

pgadmin:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg PGADMIN_VERSION

mysql:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg MYSQL_VERSION

mariadb:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg MARIADB_VERSION

httpbin:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg HTTPBIN_VERSION

oauth2-proxy:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg OAUTH2_PROXY_VERSION

caprover:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg CAPROVER_VERSION

binderhub:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg BINDERHUB_VERSION

binderhub-image-cleaner:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg BINDERHUB_IMAGE_CLEANER_VERSION

jupyterhub:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg JUPYTERHUB_VERSION

repo2docker:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg REPO2DOCKER_VERSION

dind:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg DIND_VERSION

jupyterhub-http-proxy:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg JUPYTERHUB_HTTP_PROXY_VERSION

jupyterhub-secret-sync:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg JUPYTERHUB_SECRET_SYNC_VERSION

jupyterhub-network-tools:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg JUPYTERHUB_NETWORK_TOOLS_VERSION

jupyterhub-singleuser-sample:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg JUPYTERHUB_SINGLEUSER_SAMPLE_VERSION

jupyterhub-image-awaiter:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg JUPYTERHUB_IMAGE_AWAITER_VERSION

jupyter-notebook:
  interruptible: true
  stage: build
  parallel:
    matrix:
      - FLAVOUR: [ "base", "minimal", "r", "scipy", "tensorflow", "datascience", "pyspark", "all-spark" ]
        NOTEBOOK: [ "notebook" ]
  script:
    - ./gitlab/build-image.sh jupyter-notebook ${DOCKER_NAMESPACE}/jupyter-${FLAVOUR}-${NOTEBOOK}:${INFRA_VERSION} \
        --build-arg JUPYTER_VERSION \
        --build-arg FLAVOUR

rshiny:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg RSHINY_VERSION

# rstudio:
#   stage: build
#   script:
#     - |
#       ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
#         --build-arg RSTUDIO_VERSION \
#         --build-arg JUPYTER_VERSION

bitnami-minio:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg BITNAMI_MINIO_VERSION

bitnami-minio-client:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg BITNAMI_MINIO_CLIENT_VERSION

bitnami-shell:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg BITNAMI_SHELL_VERSION

bitnami-metallb-controller:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg BITNAMI_METALLB_CONTROLLER_VERSION

bitnami-metallb-speaker:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg BITNAMI_METALLB_SPEAKER_VERSION

bitnami-grafana:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg BITNAMI_GRAFANA_VERSION

bitnami-grafana-image-renderer:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg BITNAMI_GRAFANA_IMAGE_RENDERER_VERSION

bitnami-consul:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg BITNAMI_CONSUL_VERSION

bitnami-nats:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg BITNAMI_NATS_VERSION

bitnami-kube-state-metrics:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg BITNAMI_KUBE_STATE_METRICS_VERSION

bitnami-metrics-server:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg BITNAMI_METRICS_SERVER_VERSION

bitnami-nginx:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg BITNAMI_NGINX_VERSION

bitnami-nginx-ingress-controller:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg BITNAMI_NGINX_INGRESS_CONTROLLER_VERSION

bitnami-keycloak:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg BITNAMI_KEYCLOAK_VERSION \
        --build-arg KEYCLOAK_THEMES_IMAGE

bitnami-keycloak16:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg BITNAMI_KEYCLOAK16_VERSION \
        --build-arg KEYCLOAK_THEMES_IMAGE

bitnami-spark:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg BITNAMI_SPARK_VERSION

bitnami-prometheus:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg BITNAMI_PROMETHEUS_VERSION

bitnami-prometheus-operator:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg BITNAMI_PROMETHEUS_OPERATOR_VERSION

bitnami-node-exporter:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg BITNAMI_NODE_EXPORTER_VERSION

bitnami-blackbox-exporter:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg BITNAMI_BLACKBOX_EXPORTER_VERSION

bitnami-postgres-exporter:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg BITNAMI_POSTGRES_EXPORTER_VERSION

bitnami-redis:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg BITNAMI_REDIS_VERSION

bitnami-postgresql11:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg BITNAMI_POSTGRESQL11_VERSION

bitnami-postgresql12:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg BITNAMI_POSTGRESQL12_VERSION

bitnami-postgresql13:
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg BITNAMI_POSTGRESQL13_VERSION

bitnami-postgresql14:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg BITNAMI_POSTGRESQL14_VERSION

bitnami-mariadb:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg BITNAMI_MARIADB_VERSION

bitnami-mongodb:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg BITNAMI_MONGODB_VERSION

bitnami-memcached:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg BITNAMI_MEMCACHED_VERSION

bitnami-kubeapps-dashboard:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg BITNAMI_KUBEAPPS_DASHBOARD_VERSION

# Special
bitnami-kubeapps-apprepository-controller:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg BITNAMI_KUBEAPPS_APPREPOSITORY_CONTROLLER_VERSION

# Special
bitnami-kubeapps-asset-syncer:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg BITNAMI_KUBEAPPS_ASSET_SYNCER

# Special
bitnami-kubeapps-kubeops:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg BITNAMI_KUBEAPPS_KUBEOPS_VERSION

bitnami-kubeapps-assetsvc:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg BITNAMI_KUBEAPPS_ASSETSVC_VERSION

bitnami-kubeapps-apis:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg BITNAMI_KUBEAPPS_APIS_VERSION

bitnami-kubeapps-pinniped-proxy:
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg BITNAMI_KUBEAPPS_PINNIPED_PROXY_VERSION

bitnami-kube-rbac-proxy:
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg BITNAMI_KUBE_RBAC_PROXY_VERSION

bitnami-openldap:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg BITNAMI_OPENLDAP_VERSION

bitnami-sealed-secrets-controller:
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg BITNAMI_SEALED_SECRETS_CONTROLLER_VERSION

external-secrets:
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg EXTERNAL_SECRETS_VERSION

hasura-graphql-engine:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg HASURA_GRAPHQL_VERSION

kutt:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg KUTT_VERSION

umami:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg UMAMI_VERSION

pihole:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg PIHOLE_VERSION

clickhouse-server:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg CLICKHOUSE_VERSION

clickhouse-tabix-web-client:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg TABIX_VERSION

plausible-analytics:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg PLAUSIBLE_VERSION

verdaccio:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg VERDACCIO_VERSION

strapi:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg STRAPI_VERSION

ghost:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg GHOST_VERSION

bitnami-ghost:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg BITNAMI_GHOST_VERSION

matomo:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg MATOMO_VERSION

nocodb:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg NOCODB_VERSION

metabase:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg METABASE_VERSION

sftpgo:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg SFTPGO_VERSION

hello:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg HELLO_VERSION

reloader:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg RELOADER_VERSION

configmap-reload:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg CONFIGMAP_RELOAD_VERSION

docker-registry:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg DOCKER_REGISTRY_VERSION

argocd:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg ARGOCD_VERSION \
        --build-arg ARGOCD_VAULT_PLUGIN_VERSION \
        --build-arg ARGOCD_VAULT_PLUGIN_HASH \
        --build-arg YTT_VERSION \
        --build-arg YTT_HASH

argocd-applicationset:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg ARGOCD_APPLICATIONSET_VERSION

boky-postfix:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg BOKY_POSTFIX_VERSION

cryptgeon:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg CRYPTGEON_VERSION

memcached:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg MEMCACHED_VERSION

dex:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg DEX_VERSION

redis:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg REDIS_VERSION

listmonk:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg LISTMONK_VERSION

consul:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg CONSUL_VERSION

consul-k8s-control-plane:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg CONSUL_K8S_CP_VERSION

envoy:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg ENVOY_VERSION

vault:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg VAULT_VERSION

vault-k8s:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg VAULT_K8S_VERSION

vault-csi-provider:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg VAULT_CSI_PROVIDER_VERSION

strimzi-operator:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg STRIMZI_OPERATOR_VERSION

strimzi-kafka:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg STRIMZI_OPERATOR_VERSION \
        --build-arg STRIMZI_KAFKA_VERSION

nats-operator:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg NATS_OPERATOR_VERSION

nats:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg NATS_VERSION

mosquitto:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg MOSQUITTO_VERSION

mosquitto-exporter:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg MOSQUITTO_EXPORTER_VERSION

cert-manager-controller:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg CERT_MANAGER_CONTROLLER_VERSION

cert-manager-webhook:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg CERT_MANAGER_WEBHOOK_VERSION

cert-manager-cainjector:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg CERT_MANAGER_CAINJECTOR_VERSION

cert-manager-ctl:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg CERT_MANAGER_CTL_VERSION

cert-manager-csi-driver:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg CERT_MANAGER_CSI_DRIVER_VERSION

cert-manager-webhook-pdns:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg CERT_MANAGER_WEBHOOK_PDNS_VERSION

caddy:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg CADDY_VERSION

bpftrace:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg BPFTRACE_VERSION

k8s-coredns:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg K8S_COREDNS_VERSION

k8s-pause:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg K8S_PAUSE_VERSION

storage-livenessprobe:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg LIVENESSPROBE_VERSION

storage-csi-node-driver-registrar:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg CSI_NODE_DRIVER_REGISTRAR_VERSION

storage-csi-attacher:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg CSI_ATTACHER_VERSION

storage-csi-resizer:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg CSI_RESIZER_VERSION

storage-csi-snapshotter:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg CSI_SNAPSHOTTER_VERSION

storage-csi-provisioner:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg CSI_PROVISIONER_VERSION

vmware-exporter:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg VMWARE_EXPORTER_VERSION

vsphere-csi-driver:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg VSPHERE_CSI_DRIVER_VERSION

vsphere-csi-syncer:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg VSPHERE_CSI_SYNCER_VERSION

vsphere-cpi-manager:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg VSPHERE_CPI_MANAGER_VERSION

kafdrop:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg KAFDROP_VERSION

akhq:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg AKHQ_VERSION

tigera-operator:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg TIGERA_OPERATOR_VERSION

eck-operator:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg ECK_OPERATOR_VERSION

confluent-operator:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg CONFLUENTINC_OPERATOR_VERSION

confluent-init-container:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg CONFLUENTINC_INIT_CONTAINER_VERSION

confluent-platform:
  interruptible: true
  stage: build
  parallel:
    matrix:
      - CONFLUENTINC_CP_COMPONENT: [ "enterprise-control-center", "enterprise-replicator", "kafka-rest", "ksqldb-server", "schema-registry", "server", "server-connect", "zookeeper" ]
        DUMMY: [ "dummy" ]
  script:
    - ./gitlab/build-image.sh confluent-platform ${DOCKER_NAMESPACE}/confluentinc-cp-${CONFLUENTINC_CP_COMPONENT}:${INFRA_VERSION} \
        --build-arg CONFLUENTINC_CP_VERSION \
        --build-arg CONFLUENTINC_CP_COMPONENT

uptime-kuma:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg UPTIME_KUMA_VERSION
