include: variables.yml

stages:
  - scratch
  - archive
  - base
  - stacks
  - build
  - build2

before_script:
  - |
    docker info
    # try fix permissions for kubeconfig
    chmod go-rwx $KUBECONFIG || true
    export INFRA_VERSION=${CI_COMMIT_TAG:-${CI_COMMIT_SHORT_SHA}}

    if [[ -z ${CI_COMMIT_TAG} ]]; then
      export INFRA_NAMESPACE=${INFRA_NAMESPACE_DEV}
    fi

    export HOST_DOCKER_GID=$(stat -t /var/run/docker.sock | awk '{ print $6 }')

    echo "Infra: ${INFRA_VERSION}"
    [[ -f gitlab/env.sh ]] && source gitlab/env.sh

import-images:
  interruptible: true
  retry: 2
  stage: scratch
  script:
    - ./gitlab/${CI_JOB_NAME}.sh

.archive-images:
  interruptible: true
  rules:
    - if: $CI_COMMIT_TAG
  script:
    - |
      echo "Archiving ${DOCKER_HUB}/${BASE}:${!VERSION}"
      docker pull ${DOCKER_HUB}/${BASE}:${!VERSION}
      archive_image ${DOCKER_HUB}/${BASE}:${!VERSION} ${INFRA_VERSION}

archive-images1:
  extends: .archive-images
  stage: archive
  parallel:
    matrix:
      - BASE:
          - library/debian
        VERSION:
          - DEBIAN_VERSION
      - BASE:
          - library/ubuntu
        VERSION:
          - UBUNTU_NOBLE_VERSION
      - BASE:
          - library/busybox
        VERSION:
          - BUSYBOX_VERSION
      - BASE:
          - library/alpine
        VERSION:
          - ALPINE_VERSION
      - BASE:
          - library/python
        VERSION:
          - PYTHON_VERSION
          - PYTHON_SLIM_VERSION
      - BASE:
          - library/node
        VERSION:
          - NODE_VERSION
          - NODE_ALPINE_VERSION
      - BASE:
          - library/golang
        VERSION:
          - GOLANG_VERSION
          - GOLANG_ALPINE_VERSION
      - BASE:
          - library/traefik
        VERSION:
          - TRAEFIK_VERSION
      - BASE:
          - sonatype/nexus3
        VERSION:
          - NEXUS_VERSION
      - BASE:
          - squidfunk/mkdocs-material
        VERSION:
          - MKDOCS_VERSION
      - BASE:
          - freeradius/freeradius-server
        VERSION:
          - FREERADIUS_VERSION
      - REGISTRY:
          - quay.io
        BASE:
          - keycloak/keycloak
        VERSION:
          - KEYCLOAK_VERSION
      - BASE:
          - library/postgres
        VERSION:
          - POSTGRES_VERSION
      - REGISTRY:
          - quay.io
        BASE:
          - minio/minio
        VERSION:
          - MINIO_VERSION
      - REGISTRY:
          - quay.io
        BASE:
          - minio/mc
        VERSION:
          - MINIO_MC_VERSION
      - REGISTRY:
          - quay.io
        BASE:
          - coreos/etcd
        VERSION:
          - ETCD_VERSION
      - BASE:
          - prometheus-operator/prometheus-operator
          - prometheus-operator/prometheus-config-reloader
        VERSION:
          - PROMETHEUS_OPERATOR_VERSION
      - BASE:
          - prometheus/prometheus
        VERSION:
          - PROMETHEUS_VERSION
      - BASE:
          - prometheus/alertmanager
        VERSION:
          - ALERTMANAGER_VERSION
      - BASE:
          - prometheus/node-exporter
        VERSION:
          - NODE_EXPORTER_VERSION
      - BASE:
          - prometheus/blackbox-exporter
        VERSION:
          - BLACKBOX_EXPORTER_VERSION
      - BASE:
          - prometheus/snmp-exporter
        VERSION:
          - SNMP_EXPORTER_VERSION
      - BASE:
          - prometheus/pushgateway
        VERSION:
          - PUSHGATEWAY_VERSION
      - BASE:
          - grafana/grafana
        VERSION:
          - GRAFANA_VERSION
      - REGISTRY:
          - ghcr.io
        BASE:
          - prymitive/karma
        VERSION:
          - KARMA_VERSION
      - REGISTRY:
          - docker.elastic.co
        BASE:
          - elastic/elasticsearch/elasticsearch
        VERSION:
          - ELASTICSEARCH_VERSION
      - REGISTRY:
          - docker.elastic.co
        BASE:
          - elastic/logstash/logstash
        VERSION:
          - LOGSTASH_VERSION
      - REGISTRY:
          - docker.elastic.co
        BASE:
          - elastic/kibana/kibana
        VERSION:
          - KIBANA_VERSION
      - REGISTRY:
          - docker.elastic.co
        BASE:
          - elastic/apm/apm-server
        VERSION:
          - APMSERVER_VERSION
      - REGISTRY:
          - docker.elastic.co
        BASE:
          - elastic/beats/elastic-agent
        VERSION:
          - ELASTICAGENT_VERSION
      - BASE:
          - library/mongo
        VERSION:
          - MONGO_VERSION
      - BASE:
          - dpage/pgadmin4
        VERSION:
          - PGADMIN_VERSION
      - BASE:
          - mccutchen/go-httpbin
        VERSION:
          - HTTPBIN_VERSION
      - REGISTRY:
          - quay.io
        BASE:
          - oauth2-proxy/oauth2-proxy
        VERSION:
          - OAUTH2_PROXY_VERSION
      - BASE:
          - gitlab/gitlab-runner
        VERSION:
          - GITLAB_RUNNER_VERSION
      - BASE:
          - gitlab-org/gitlab-runner/gitlab-runner-helper
        VERSION:
          - GITLAB_RUNNER_HELPER_VERSION
      - BASE:
          - gitlab/gitlab-ce
        VERSION:
          - GITLAB_VERSION
      - REGISTRY:
          - registry.gitlab.com
        BASE:
          - gitlab-org/cluster-integration/gitlab-agent/agentk
        VERSION:
          - GITLAB_AGENTK_VERSION
      - REGISTRY:
          - quay.io
        BASE:
          - brancz/kube-rbac-proxy
        VERSION:
          - KUBE_RBAC_PROXY_VERSION
      - BASE:
          - pihole/pihole
        VERSION:
          - PIHOLE_VERSION
      - BASE:
          - klutchell/unbound
        VERSION:
          - UNBOUND_VERSION
      - BASE:
          - library/docker
        VERSION:
          - DIND_VERSION
      - BASE:
          - library/nextcloud
        VERSION:
          - NEXTCLOUD_VERSION

archive-images2:
  extends: .archive-images
  stage: archive
  parallel:
    matrix:
      - BASE:
          - bitnami/prometheus
        VERSION:
          - BITNAMI_PROMETHEUS_VERSION
      - BASE:
          - bitnami/prometheus-operator
        VERSION:
          - BITNAMI_PROMETHEUS_OPERATOR_VERSION
      - BASE:
          - bitnami/node-exporter
        VERSION:
          - BITNAMI_NODE_EXPORTER_VERSION
      - BASE:
          - bitnami/blackbox-exporter
        VERSION:
          - BITNAMI_BLACKBOX_EXPORTER_VERSION
      - BASE:
          - bitnami/postgres-exporter
        VERSION:
          - BITNAMI_POSTGRES_EXPORTER_VERSION
      - BASE:
          - bitnami/redis
        VERSION:
          - BITNAMI_REDIS_VERSION
      - BASE:
          - bitnami/redis-exporter
        VERSION:
          - BITNAMI_REDIS_EXPORTER_VERSION
      - BASE:
          - bitnami/postgresql
        VERSION:
          - BITNAMI_POSTGRESQL17_VERSION
          - BITNAMI_POSTGRESQL16_VERSION
          - BITNAMI_POSTGRESQL15_VERSION
      - BASE:
          - bitnami/keycloak
        VERSION:
          - BITNAMI_KEYCLOAK_VERSION
      - BASE:
          - bitnami/keycloak-config-cli
        VERSION:
          - BITNAMI_KEYCLOAK_CONFIG_CLI_VERSION
      - BASE:
          - bitnami/nginx-ingress-controller
        VERSION:
          - BITNAMI_NGINX_INGRESS_CONTROLLER_VERSION
      - BASE:
          - bitnami/nginx
        VERSION:
          - BITNAMI_NGINX_VERSION
      - BASE:
          - bitnami/haproxy
        VERSION:
          - BITNAMI_HAPROXY_VERSION
      - BASE:
          - bitnami/minio
        VERSION:
          - BITNAMI_MINIO_VERSION
      - BASE:
          - bitnami/minio-client
        VERSION:
          - BITNAMI_MINIO_CLIENT_VERSION
      - BASE:
          - bitnami/os-shell
        VERSION:
          - BITNAMI_SHELL_VERSION
      - BASE:
          - bitnami/metallb-controller
        VERSION:
          - BITNAMI_METALLB_CONTROLLER_VERSION
      - BASE:
          - bitnami/metallb-speaker
        VERSION:
          - BITNAMI_METALLB_SPEAKER_VERSION
      - BASE:
          - bitnami/grafana
        VERSION:
          - BITNAMI_GRAFANA_VERSION
      - BASE:
          - bitnami/nats
        VERSION:
          - BITNAMI_NATS_VERSION
      - BASE:
          - bitnami/kube-state-metrics
        VERSION:
          - BITNAMI_KUBE_STATE_METRICS_VERSION
      - BASE:
          - bitnami/metrics-server
        VERSION:
          - BITNAMI_METRICS_SERVER_VERSION
      - BASE:
          - bitnami/kube-rbac-proxy
        VERSION:
          - BITNAMI_KUBE_RBAC_PROXY_VERSION
      - BASE:
          - bitnami/openldap
        VERSION:
          - BITNAMI_OPENLDAP_VERSION
      - BASE:
          - bitnami/kubectl
        VERSION:
          - BITNAMI_KUBECTL_VERSION

archive-images3:
  extends: .archive-images
  stage: archive
  parallel:
    matrix:
      - BASE:
          - haproxytech/haproxy-alpine
        VERSION:
          - HAPROXY_VERSION
      - BASE:
          - haproxytech/kubernetes-ingress
        VERSION:
          - HAPROXY_INGRESS_VERSION
      - BASE:
          - aquasec/trivy
        VERSION:
          - TRIVY_VERSION
      - REGISTRY:
          - registry.k8s.io
        BASE:
          - csi-secrets-store/driver
          - csi-secrets-store/driver-crds
        VERSION:
          - CSI_SECRETS_STORE_VERSION
      - REGISTRY:
          - ghcr.io
        BASE:
          - external-secrets/external-secrets
        VERSION:
          - EXTERNAL_SECRETS_VERSION
      - REGISTRY:
          - quay.io
        BASE:
          - minio/console
        VERSION:
          - MINIO_CONSOLE_VERSION
      - BASE:
          - stakater/reloader
        VERSION:
          - RELOADER_VERSION
      - BASE:
          - jimmidyson/configmap-reload
        VERSION:
          - CONFIGMAP_RELOAD_VERSION
      - BASE:
          - library/registry
        VERSION:
          - DOCKER_REGISTRY_VERSION
      - REGISTRY:
          - ghcr.io
        BASE:
          - dexidp/dex
        VERSION:
          - DEX_VERSION
      - REGISTRY:
          - quay.io
        BASE:
          - argoproj/argocd
        VERSION:
          - ARGOCD_VERSION
      - BASE:
          - library/redis
        VERSION:
          - REDIS_VERSION
      - BASE:
          - boky/postfix
        VERSION:
          - BOKY_POSTFIX_VERSION
      - BASE:
          - connecteverything/nats-operator
        VERSION:
          - NATS_OPERATOR_VERSION
      - BASE:
          - library/nats
        VERSION:
          - NATS_VERSION
      - BASE:
          - natsio/prometheus-nats-exporter
        VERSION:
          - NATS_EXPORTER_VERSION
      - BASE:
          - natsio/nats-server-config-reloader
        VERSION:
          - NATS_SERVER_CONFIG_RELOADER
      - BASE:
          - masipcat/wireguard-go
        VERSION:
          - WIREGUARD_VERSION
      - BASE:
          - library/eclipse-mosquitto
        VERSION:
          - MOSQUITTO_VERSION
      - BASE:
          - sapcc/mosquitto-exporter
        VERSION:
          - MOSQUITTO_EXPORTER_VERSION
      - BASE:
          - library/caddy
        VERSION:
          - CADDY_VERSION
      - BASE:
          - azul/zulu-openjdk
        VERSION:
          - JDK_ZULU_VERSION
      - BASE:
          - library/eclipse-temurin
        VERSION:
          - JDK_TEMURIN_VERSION
      - BASE:
          - elastic/eck-operator
        VERSION:
          - ECK_OPERATOR_VERSION
      - BASE:
          - syncthing/syncthing
          - syncthing/relaysrv
          - syncthing/discosrv
        VERSION:
          - SYNCTHING_VERSION
      - BASE:
          - jellyfin/jellyfin
        VERSION:
          - JELLYFIN_VERSION
      - BASE:
          - haveagitgat/tdarr
          - haveagitgat/tdarr_node
        VERSION:
          - TDARR_VERSION
      - BASE:
          - curlimages/curl
        VERSION:
          - CURL_VERSION
      - BASE:
          - restic/restic
        VERSION:
          - RESTIC_VERSION
      - BASE:
          - coturn/coturn
        VERSION:
          - COTURN_VERSION

archive-images4:
  extends: .archive-images
  stage: archive
  parallel:
    matrix:
      - BASE:
          - netboxcommunity/netbox
        VERSION:
          - NETBOX_VERSION
      - BASE:
          - jenkins/jenkins
        VERSION:
          - JENKINS_VERSION
      - REGISTRY:
          - quay.io
        BASE:
          - kiwigrid/k8s-sidecar
        VERSION:
          - KIWIGRID_K8S_SIDECAR_VERSION
      - BASE:
          - jenkins/agent
        VERSION:
          - JENKINS_AGENT_VERSION
      - BASE:
          - jenkins/inbound-agent
        VERSION:
          - JENKINS_INBOUND_AGENT_VERSION
      - REGISTRY:
          - registry.k8s.io
        BASE:
          - git-sync/git-sync
        VERSION:
          - GIT_SYNC_VERSION
      - REGISTRY:
          - quay.io
        BASE:
          - jetstack/cert-manager-controller
          - jetstack/cert-manager-cainjector
          - jetstack/cert-manager-webhook
        VERSION:
          - CERT_MANAGER_VERSION
      - REGISTRY:
          - quay.io
        BASE:
          - jetstack/cert-manager-csi-driver
        VERSION:
          - CERT_MANAGER_CSI_DRIVER_VERSION
      - BASE:
          - zachomedia/cert-manager-webhook-pdns
        VERSION:
          - CERT_MANAGER_WEBHOOK_PDNS_VERSION
      - BASE:
          - hashicorp/vault
        VERSION:
          - VAULT_VERSION
      - BASE:
          - hashicorp/vault-k8s
        VERSION:
          - VAULT_K8S_VERSION
      - BASE:
          - hashicorp/vault-csi-provider
        VERSION:
          - VAULT_CSI_PROVIDER_VERSION
      - REGISTRY:
          - quay.io
        BASE:
          - tigera/operator
        VERSION:
          - TIGERA_OPERATOR_VERSION
      - REGISTRY:
          - registry.k8s.io
        BASE:
          - nfd/node-feature-discovery
        VERSION:
          - K8S_NFD_VERSION
      - REGISTRY:
          - registry.k8s.io
        BASE:
          - sig-storage/livenessprobe
        VERSION:
          - LIVENESSPROBE_VERSION
      - REGISTRY:
          - registry.k8s.io
        BASE:
          - sig-storage/csi-node-driver-registrar
        VERSION:
          - CSI_NODE_DRIVER_REGISTRAR_VERSION
      - REGISTRY:
          - registry.k8s.io
        BASE:
          - sig-storage/csi-attacher
        VERSION:
          - CSI_ATTACHER_VERSION
      - REGISTRY:
          - registry.k8s.io
        BASE:
          - sig-storage/csi-resizer
        VERSION:
          - CSI_RESIZER_VERSION
      - REGISTRY:
          - registry.k8s.io
        BASE:
          - sig-storage/csi-provisioner
        VERSION:
          - CSI_PROVISIONER_VERSION
      - REGISTRY:
          - registry.k8s.io
        BASE:
          - sig-storage/csi-snapshotter
        VERSION:
          - CSI_SNAPSHOTTER_VERSION
      - REGISTRY:
          - registry.k8s.io
        BASE:
          - sig-storage/snapshot-controller
        VERSION:
          - CSI_SNAPSHOT_CONTROLLER_VERSION
      - REGISTRY:
          - registry.k8s.io
        BASE:
          - sig-storage/snapshot-validation-webhook
        VERSION:
          - CSI_SNAPSHOT_VALIDATION_WEBHOOK_VERSION
      - REGISTRY:
          - registry.k8s.io
        BASE:
          - sig-storage/nfsplugin
        VERSION:
          - CSI_NFSPLUGIN_VERSION
      - BASE:
          - postgrest/postgrest
        VERSION:
          - POSTGREST_VERSION
      - REGISTRY:
          - quay.io
        BASE:
          - cephcsi/cephcsi
        VERSION:
          - CEPHCSI_VERSION
      - REGISTRY:
          - nvcr.io
        BASE:
          - nvidia/cuda
        VERSION:
          - NVIDIA_CUDA_VERSION
      - REGISTRY:
          - nvcr.io
        BASE:
          - nvidia/cloud-native/dcgm
        VERSION:
          - NVIDIA_DCGM_VERSION
      - REGISTRY:
          - nvcr.io
        BASE:
          - nvidia/k8s/dcgm-exporter
        VERSION:
          - NVIDIA_DCGM_EXPORTER_VERSION
      - REGISTRY:
          - nvcr.io
        BASE:
          - nvidia/gpu-feature-discovery
        VERSION:
          - NVIDIA_GPU_FEATURE_DISCOVERY_VERSION
      - REGISTRY:
          - nvcr.io
        BASE:
          - nvidia/gpu-operator
        VERSION:
          - NVIDIA_GPU_OPERATOR_VERSION
      - REGISTRY:
          - nvcr.io
        BASE:
          - nvidia/cloud-native/gpu-operator-validator
        VERSION:
          - NVIDIA_GPU_OPERATOR_VALIDATOR_VERSION
      - REGISTRY:
          - nvcr.io
        BASE:
          - nvidia/k8s/container-toolkit
        VERSION:
          - NVIDIA_K8S_CONTAINER_TOOLKIT_VERSION
      - REGISTRY:
          - nvcr.io
        BASE:
          - nvidia/k8s-device-plugin
        VERSION:
          - NVIDIA_K8S_DEVICE_PLUGIN_VERSION
      - REGISTRY:
          - nvcr.io
        BASE:
          - nvidia/cloud-native/k8s-driver-manager
        VERSION:
          - NVIDIA_K8S_DRIVER_MANAGER_VERSION
      - REGISTRY:
          - nvcr.io
        BASE:
          - nvidia/cloud-native/k8s-mig-manager
        VERSION:
          - NVIDIA_K8S_MIG_MANAGER_VERSION
      - BASE:
          - homeassistant/home-assistant
        VERSION:
          - HOMEASSISTANT_VERSION
      - BASE:
          - koenkk/zigbee2mqtt
        VERSION:
          - ZIGBEE2MQTT_VERSION
      - BASE:
          - gitea/gitea
        VERSION:
          - GITEA_VERSION
      - BASE:
          - cloudflare/cloudflared
        VERSION:
          - CLOUDFLARED_VERSION
      - BASE:
          - sj26/mailcatcher
        VERSION:
          - MAILCATCHER_VERSION
      - BASE:
          - fatedier/frps
          - fatedier/frpc
        VERSION:
          - FRP_VERSION

archive-special:
  extends: .archive-images
  stage: archive
  script:
    - |
      declare -a special_images=(
      )

      for image in "${special_images[@]}"; do
        echo "Archiving ${image}"
        docker pull ${image}
        archive_image ${image} ${INFRA_VERSION}
      done

archive-extra:
  extends: .archive-images
  stage: archive
  parallel:
    matrix:
      - REGISTRY:
          - registry.k8s.io
        BASE:
          - kubernetes/kube-apiserver
          - kubernetes/kube-proxy
          - kubernetes/kube-scheduler
          - kubernetes/kube-controller-manager
        VERSION:
          - K8S_131_VERSION
          - K8S_132_VERSION
      - REGISTRY:
          - registry.k8s.io
        BASE:
          - coredns/coredns
        VERSION:
          - COREDNS_VERSION
      - REGISTRY:
          - registry.k8s.io
        BASE:
          - kubernetes/pause
        VERSION:
          - K8S_PAUSE_VERSION
      - BASE:
          - calico/typha
          - calico/ctl
          - calico/node
          - calico/cni
          - calico/apiserver
          - calico/kube-controllers
          - calico/dikastes
          - calico/pod2daemon-flexvol
          - calico/node-driver-registrar
          - calico/csi
        VERSION:
          - CALICO_VERSION

turbovillains-mirror:
  interruptible: true
  retry: 2
  stage: scratch
  script:
    - |
      git clone ${CI_REPOSITORY_URL} .${CI_JOB_NAME}
      cd .${CI_JOB_NAME}
      git push --mirror --force git@github.com:turbovillains/infra-setup.git

noroutine-ca:
  interruptible: true
  retry: 2
  stage: scratch
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${INFRA_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION}

ingress-default-backend:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      git clone --depth 1 https://readonly:${INFRA_READONLY_TOKEN}@git.nrtn.dev/infra/ingress-default-backend.git
      cd ingress-default-backend

      docker buildx build --builder=mybuilder --platform linux/amd64,linux/arm64 --push \
        -t ${DOCKER_HUB}/${INFRA_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} .

      if [[ ! -z "${CI_COMMIT_TAG:-}" ]]; then
        archive_image ${DOCKER_HUB}/${INFRA_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION}
      fi

# website:
#   interruptible: true
#   retry: 2
#   stage: prebuild
#   script:
#     - |
#       rm -rf ~/.npmrc ~/.yarnrc
#       git clone --depth 1 --branch ${WEBSITE_VERSION} https://readonly:${INFRA_READONLY_TOKEN}@git.nrtn.dev/infra/noroutine-website.git
#       cd noroutine-website

#       docker build

#       if [[ ! -z "${CI_COMMIT_TAG:-}" ]]; then
#         archive_image ${DOCKER_HUB}/${INFRA_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION}
#       fi

tools:
  interruptible: true
  retry: 2
  stage: base
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${INFRA_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg DEBIAN_VERSION
  variables:
    BASE: debian
    VERSION: DEBIAN_VERSION

debian:
  interruptible: true
  retry: 2
  stage: base
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${INFRA_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg DEBIAN_VERSION
  variables:
    BASE: debian
    VERSION: DEBIAN_VERSION

ubuntu24:
  interruptible: true
  retry: 2
  stage: base
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${INFRA_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg UBUNTU_NOBLE_VERSION
  variables:
    BASE: ubuntu
    VERSION: UBUNTU_NOBLE_VERSION

alpine:
  interruptible: true
  retry: 2
  stage: base
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${INFRA_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg ALPINE_VERSION
  variables:
    BASE: alpine
    VERSION: ALPINE_VERSION

noroutine-buoy:
  interruptible: true
  retry: 2
  stage: base
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${INFRA_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg ALPINE_VERSION
  variables:
    BASE: alpine
    VERSION: ALPINE_VERSION

busybox:
  interruptible: true
  retry: 2
  stage: base
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${INFRA_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg ALPINE_VERSION \
        --build-arg BUSYBOX_VERSION
  variables:
    BASE: busybox
    VERSION: BUSYBOX_VERSION

jdk-zulu:
  interruptible: true
  retry: 2
  stage: base
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${INFRA_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg JDK_ZULU_VERSION
  variables:
    BASE: azul/zulu-openjdk
    VERSION: JDK_ZULU_VERSION

jdk-temurin:
  interruptible: true
  retry: 2
  stage: base
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${INFRA_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg JDK_TEMURIN_VERSION
  variables:
    BASE: eclipse-temurin
    VERSION: JDK_TEMURIN_VERSION

golang:
  interruptible: true
  retry: 2
  stage: base
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${INFRA_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg GOLANG_VERSION
  variables:
    BASE: golang
    VERSION: GOLANG_VERSION

python:
  interruptible: true
  retry: 2
  stage: base
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${INFRA_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg PYTHON_VERSION
  variables:
    BASE: python
    VERSION: PYTHON_VERSION

python-slim:
  interruptible: true
  retry: 2
  stage: base
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${INFRA_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg PYTHON_SLIM_VERSION
  variables:
    BASE: python
    VERSION: PYTHON_SLIM_VERSION

node:
  interruptible: true
  retry: 2
  stage: base
  script:
    - |
      ./gitlab/build-image.sh generic ${INFRA_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION}
  variables:
    IMAGE_BASE: library/node
    IMAGE_VERSION: ${NODE_VERSION}

ocsp-responder:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${INFRA_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION}

wireguard:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh generic ${INFRA_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION}
  variables:
    IMAGE_BASE: masipcat/wireguard-go
    IMAGE_VERSION: ${WIREGUARD_VERSION}

wiretraefik:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${INFRA_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg WIREGUARD_VERSION \
        --build-arg TRAEFIK_VERSION
  variables:
    BASE: masipcat/wireguard-go
    VERSION: WIREGUARD_VERSION

gitlab-agentk:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh generic ${INFRA_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION}
  variables:
    IMAGE_BASE: gitlab-org/cluster-integration/gitlab-agent/agentk
    IMAGE_VERSION: ${GITLAB_AGENTK_VERSION}

gitlab-runner:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh generic ${INFRA_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION}
  variables:
    IMAGE_BASE: gitlab/gitlab-runner
    IMAGE_VERSION: ${GITLAB_RUNNER_VERSION}

gitlab:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh generic ${INFRA_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION}
  variables:
    IMAGE_BASE: gitlab/gitlab-ce
    IMAGE_VERSION: ${GITLAB_VERSION}

kube-rbac-proxy:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh generic ${INFRA_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION}
  variables:
    IMAGE_BASE: brancz/kube-rbac-proxy
    IMAGE_VERSION: ${KUBE_RBAC_PROXY_VERSION}

nexus:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh generic ${INFRA_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION}
  variables:
    IMAGE_BASE: sonatype/nexus3
    IMAGE_VERSION: ${NEXUS_VERSION}

radius:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh generic ${INFRA_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION}
  variables:
    IMAGE_BASE: freeradius/freeradius-server
    IMAGE_VERSION: ${FREERADIUS_VERSION}

mkdocs:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh generic ${INFRA_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION}
  variables:
    IMAGE_BASE: squidfunk/mkdocs-material
    IMAGE_VERSION: ${MKDOCS_VERSION}

traefik:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh generic ${INFRA_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION}
  variables:
    IMAGE_BASE: library/traefik
    IMAGE_VERSION: ${TRAEFIK_VERSION}

powerdns:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${INFRA_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION}

powerdns-recursor:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${INFRA_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION}

powerdns-dnsdist:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${INFRA_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION}

unbound:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh generic ${INFRA_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION}
  variables:
    IMAGE_BASE: klutchell/unbound
    IMAGE_VERSION: ${UNBOUND_VERSION}

nextcloud:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${INFRA_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION}
  variables:
    IMAGE_BASE: library/nextcloud
    IMAGE_VERSION: ${NEXTCLOUD_VERSION}

keycloak:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh generic ${INFRA_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION}
  variables:
    IMAGE_BASE: keycloak/keycloak
    IMAGE_VERSION: ${KEYCLOAK_VERSION}

postgres:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh generic ${INFRA_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION}
  variables:
    IMAGE_BASE: library/postgres
    IMAGE_VERSION: ${POSTGRES_VERSION}

minio:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh generic ${INFRA_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION}
  variables:
    IMAGE_BASE: minio/minio
    IMAGE_VERSION: ${MINIO_VERSION}

minio-client:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh generic ${INFRA_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION}
  variables:
    IMAGE_BASE: minio/mc
    IMAGE_VERSION: ${MINIO_MC_VERSION}

minio-console:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${INFRA_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg MINIO_CONSOLE_VERSION
  variables:
    REGSITRY: quay.io
    BASE: minio/console
    VERSION: MINIO_CONSOLE_VERSION

prometheus:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh generic ${INFRA_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION}
  variables:
    IMAGE_BASE: prometheus/prometheus
    IMAGE_VERSION: ${PROMETHEUS_VERSION}

prometheus-operator:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh generic ${INFRA_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION}
  variables:
    IMAGE_BASE: prometheus-operator/prometheus-operator
    IMAGE_VERSION: ${PROMETHEUS_OPERATOR_VERSION}

prometheus-config-reloader:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh generic ${INFRA_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION}
  variables:
    IMAGE_BASE: prometheus-operator/prometheus-config-reloader
    IMAGE_VERSION: ${PROMETHEUS_OPERATOR_VERSION}

karma:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh generic ${INFRA_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION}
  variables:
    IMAGE_BASE: prymitive/karma
    IMAGE_VERSION: ${KARMA_VERSION}

alertmanager:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh generic ${INFRA_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION}
  variables:
    IMAGE_BASE: prometheus/alertmanager
    IMAGE_VERSION: ${ALERTMANAGER_VERSION}

pushgateway:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh generic ${INFRA_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION}
  variables:
    IMAGE_BASE: prometheus/pushgateway
    IMAGE_VERSION: ${PUSHGATEWAY_VERSION}

blackbox-exporter:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${INFRA_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg BLACKBOX_EXPORTER_VERSION
  variables:
    BASE: prometheus/blackbox-exporter
    VERSION: BLACKBOX_EXPORTER_VERSION

snmp-exporter:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh generic ${INFRA_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION}
  variables:
    IMAGE_BASE: prometheus/snmp-exporter
    IMAGE_VERSION: ${SNMP_EXPORTER_VERSION}

ipmi-exporter:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${INFRA_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg IPMI_EXPORTER_VERSION \
        --build-arg GOLANG_VERSION
  variables:
    BASE: golang
    VERSION: GOLANG_VERSION
    DOCKER_BUILDER_TARGET_PLATFORM: linux/amd64

node-exporter:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh generic ${INFRA_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION}
  variables:
    IMAGE_BASE: prometheus/node-exporter
    IMAGE_VERSION: ${NODE_EXPORTER_VERSION}

grafana:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${INFRA_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg GRAFANA_VERSION
  variables:
    BASE: grafana/grafana
    VERSION: GRAFANA_VERSION

elasticsearch:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh generic ${INFRA_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION}
  variables:
    IMAGE_BASE: elastic/elasticsearch/elasticsearch
    IMAGE_VERSION: ${ELASTICSEARCH_VERSION}

logstash:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh generic ${INFRA_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION}
  variables:
    IMAGE_BASE: elastic/logstash/logstash
    IMAGE_VERSION: ${LOGSTASH_VERSION}

kibana:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh generic ${INFRA_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION}
  variables:
    IMAGE_BASE: elastic/kibana/kibana
    IMAGE_VERSION: ${KIBANA_VERSION}

apm-server:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh generic ${INFRA_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION}
  variables:
    IMAGE_BASE: elastic/apm/apm-server
    IMAGE_VERSION: ${APMSERVER_VERSION}

elastic-agent:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh generic ${INFRA_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION}
  variables:
    IMAGE_BASE: elastic/beats/elastic-agent
    IMAGE_VERSION: ${ELASTICAGENT_VERSION}

mongo:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh generic ${INFRA_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION}
  variables:
    IMAGE_BASE: library/mongo
    IMAGE_VERSION: ${MONGO_VERSION}

pgadmin:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh generic ${INFRA_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION}
  variables:
    IMAGE_BASE: dpage/pgadmin4
    IMAGE_VERSION: ${PGADMIN_VERSION}

httpbin:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh generic ${INFRA_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION}
  variables:
    IMAGE_BASE: mccutchen/go-httpbin
    IMAGE_VERSION: ${HTTPBIN_VERSION}

oauth2-proxy:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh generic ${INFRA_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION}
  variables:
    IMAGE_BASE: oauth2-proxy/oauth2-proxy
    IMAGE_VERSION: ${OAUTH2_PROXY_VERSION}

dind:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh generic ${INFRA_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION}
  variables:
    IMAGE_BASE: library/docker
    IMAGE_VERSION: ${DIND_VERSION}

bitnami-minio:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh generic ${INFRA_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION}
  variables:
    IMAGE_BASE: bitnami/minio
    IMAGE_VERSION: ${BITNAMI_MINIO_VERSION}

bitnami-minio-client:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh generic ${INFRA_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION}
  variables:
    IMAGE_BASE: bitnami/minio-client
    IMAGE_VERSION: ${BITNAMI_MINIO_CLIENT_VERSION}

bitnami-shell:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh generic ${INFRA_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION}
  variables:
    IMAGE_BASE: bitnami/os-shell
    IMAGE_VERSION: ${BITNAMI_SHELL_VERSION}

bitnami-metallb-controller:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh generic ${INFRA_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION}
  variables:
    IMAGE_BASE: bitnami/metallb-controller
    IMAGE_VERSION: ${BITNAMI_METALLB_CONTROLLER_VERSION}

bitnami-metallb-speaker:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh generic ${INFRA_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION}
  variables:
    IMAGE_BASE: bitnami/metallb-speaker
    IMAGE_VERSION: ${BITNAMI_METALLB_SPEAKER_VERSION}

bitnami-grafana:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${INFRA_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg BITNAMI_GRAFANA_VERSION
  variables:
    BASE: bitnami/grafana
    VERSION: BITNAMI_GRAFANA_VERSION

bitnami-nats:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh generic ${INFRA_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION}
  variables:
    IMAGE_BASE: bitnami/nats
    IMAGE_VERSION: ${BITNAMI_NATS_VERSION}

bitnami-kube-state-metrics:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh generic ${INFRA_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION}
  variables:
    IMAGE_BASE: bitnami/kube-state-metrics
    IMAGE_VERSION: ${BITNAMI_KUBE_STATE_METRICS_VERSION}

bitnami-metrics-server:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh generic ${INFRA_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION}
  variables:
    IMAGE_BASE: bitnami/metrics-server
    IMAGE_VERSION: ${BITNAMI_METRICS_SERVER_VERSION}

bitnami-kubectl:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh generic ${INFRA_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION}
  variables:
    IMAGE_BASE: bitnami/kubectl
    IMAGE_VERSION: ${BITNAMI_KUBECTL_VERSION}

bitnami-nginx-ingress-controller:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh generic ${INFRA_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION}
  variables:
    IMAGE_BASE: bitnami/nginx-ingress-controller
    IMAGE_VERSION: ${BITNAMI_NGINX_INGRESS_CONTROLLER_VERSION}

bitnami-nginx:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh generic ${INFRA_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION}
  variables:
    IMAGE_BASE: bitnami/nginx
    IMAGE_VERSION: ${BITNAMI_NGINX_VERSION}

bitnami-haproxy:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh generic ${INFRA_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION}
  variables:
    IMAGE_BASE: bitnami/haproxy
    IMAGE_VERSION: ${BITNAMI_HAPROXY_VERSION}

bitnami-keycloak:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh generic ${INFRA_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION}
  variables:
    IMAGE_BASE: bitnami/keycloak
    IMAGE_VERSION: ${BITNAMI_KEYCLOAK_VERSION}

bitnami-keycloak-config-cli:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh generic ${INFRA_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION}
  variables:
    IMAGE_BASE: bitnami/keycloak-config-cli
    IMAGE_VERSION: ${BITNAMI_KEYCLOAK_CONFIG_CLI_VERSION}

bitnami-prometheus:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh generic ${INFRA_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION}
  variables:
    IMAGE_BASE: bitnami/prometheus
    IMAGE_VERSION: ${BITNAMI_PROMETHEUS_VERSION}

bitnami-prometheus-operator:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh generic ${INFRA_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION}
  variables:
    IMAGE_BASE: bitnami/prometheus-operator
    IMAGE_VERSION: ${BITNAMI_PROMETHEUS_OPERATOR_VERSION}

bitnami-node-exporter:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh generic ${INFRA_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION}
  variables:
    IMAGE_BASE: bitnami/node-exporter
    IMAGE_VERSION: ${BITNAMI_NODE_EXPORTER_VERSION}

bitnami-blackbox-exporter:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh generic ${INFRA_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION}
  variables:
    IMAGE_BASE: bitnami/blackbox-exporter
    IMAGE_VERSION: ${BITNAMI_BLACKBOX_EXPORTER_VERSION}

bitnami-postgres-exporter:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh generic ${INFRA_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION}
  variables:
    IMAGE_BASE: bitnami/postgres-exporter
    IMAGE_VERSION: ${BITNAMI_POSTGRES_EXPORTER_VERSION}

bitnami-redis:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh generic ${INFRA_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION}
  variables:
    IMAGE_BASE: bitnami/redis
    IMAGE_VERSION: ${BITNAMI_REDIS_VERSION}

bitnami-redis-exporter:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh generic ${INFRA_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION}
  variables:
    IMAGE_BASE: bitnami/redis-exporter
    IMAGE_VERSION: ${BITNAMI_REDIS_EXPORTER_VERSION}

bitnami-postgresql15:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh generic ${INFRA_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION}
  variables:
    IMAGE_BASE: bitnami/postgresql
    IMAGE_VERSION: ${BITNAMI_POSTGRESQL15_VERSION}

bitnami-postgresql16:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh generic ${INFRA_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION}
  variables:
    IMAGE_BASE: bitnami/postgresql
    IMAGE_VERSION: ${BITNAMI_POSTGRESQL16_VERSION}

bitnami-postgresql17:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh generic ${INFRA_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION}
  variables:
    IMAGE_BASE: bitnami/postgresql
    IMAGE_VERSION: ${BITNAMI_POSTGRESQL17_VERSION}

bitnami-kube-rbac-proxy:
  stage: build
  script:
    - |
      ./gitlab/build-image.sh generic ${INFRA_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION}
  variables:
    IMAGE_BASE: bitnami/kube-rbac-proxy
    IMAGE_VERSION: ${BITNAMI_KUBE_RBAC_PROXY_VERSION}

bitnami-openldap:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh generic ${INFRA_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION}
  variables:
    IMAGE_BASE: bitnami/openldap
    IMAGE_VERSION: ${BITNAMI_OPENLDAP_VERSION}


haproxy:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh generic ${INFRA_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION}
  variables:
    IMAGE_BASE: haproxytech/haproxy-alpine
    IMAGE_VERSION: ${HAPROXY_VERSION}

haproxy-ingress:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh generic ${INFRA_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION}
  variables:
    IMAGE_BASE: haproxytech/kubernetes-ingress
    IMAGE_VERSION: ${HAPROXY_INGRESS_VERSION}

trivy:
  stage: build
  script:
    - |
      ./gitlab/build-image.sh generic ${INFRA_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION}
  variables:
    IMAGE_BASE: aquasec/trivy
    IMAGE_VERSION: ${TRIVY_VERSION}

csi-secrets-store-driver:
  stage: build
  script:
    - |
      ./gitlab/build-image.sh generic ${INFRA_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION}
  variables:
    IMAGE_BASE: csi-secrets-store/driver
    IMAGE_VERSION: ${CSI_SECRETS_STORE_VERSION}

csi-secrets-store-driver-crds:
  stage: build
  script:
    - |
      ./gitlab/build-image.sh generic ${INFRA_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION}
  variables:
    IMAGE_BASE: csi-secrets-store/driver-crds
    IMAGE_VERSION: ${CSI_SECRETS_STORE_VERSION}

external-secrets:
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${INFRA_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg EXTERNAL_SECRETS_VERSION
  variables:
    BASE: external-secrets/external-secrets
    VERSION: EXTERNAL_SECRETS_VERSION

pihole:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh generic ${INFRA_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION}
  variables:
    IMAGE_BASE: pihole/pihole
    IMAGE_VERSION: ${PIHOLE_VERSION}

reloader:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh generic ${INFRA_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION}
  variables:
    IMAGE_BASE: stakater/reloader
    IMAGE_VERSION: ${RELOADER_VERSION}

configmap-reload:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh generic ${INFRA_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION}
  variables:
    IMAGE_BASE: jimmidyson/configmap-reload
    IMAGE_VERSION: ${CONFIGMAP_RELOAD_VERSION}

docker-registry:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh generic ${INFRA_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg DOCKER_REGISTRY_VERSION
  variables:
    IMAGE_BASE: library/registry
    IMAGE_VERSION: ${DOCKER_REGISTRY_VERSION}

argocd:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${INFRA_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg ARGOCD_VERSION \
        --build-arg ARGOCD_VAULT_PLUGIN_VERSION \
        --build-arg YTT_VERSION \
  variables:
    BASE: argoproj/argocd
    VERSION: ARGOCD_VERSION

boky-postfix:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${INFRA_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION}
  variables:
    IMAGE_BASE: boky/postfix
    IMAGE_VERSION: ${BOKY_POSTFIX_VERSION}

dex:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh generic ${INFRA_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION}
  variables:
    IMAGE_BASE: dexidp/dex
    IMAGE_VERSION: ${DEX_VERSION}

redis:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh generic ${INFRA_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION}
  variables:
    IMAGE_BASE: library/redis
    IMAGE_VERSION: ${REDIS_VERSION}

vault:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh generic ${INFRA_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION}
  variables:
    IMAGE_BASE: hashicorp/vault
    IMAGE_VERSION: ${VAULT_VERSION}

vault-k8s:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh generic ${INFRA_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION}
  variables:
    IMAGE_BASE: hashicorp/vault-k8s
    IMAGE_VERSION: ${VAULT_K8S_VERSION}

vault-csi-provider:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh generic ${INFRA_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION}
  variables:
    IMAGE_BASE: hashicorp/vault-csi-provider
    IMAGE_VERSION: ${VAULT_CSI_PROVIDER_VERSION}

nats-operator:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh generic ${INFRA_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION}
  variables:
    IMAGE_BASE: connecteverything/nats-operator
    IMAGE_VERSION: ${NATS_OPERATOR_VERSION}

nats:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh generic ${INFRA_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION}
  variables:
    IMAGE_BASE: library/nats
    IMAGE_VERSION: ${NATS_VERSION}

nats-exporter:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh generic ${INFRA_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION}
  variables:
    IMAGE_BASE: natsio/prometheus-nats-exporter
    IMAGE_VERSION: ${NATS_EXPORTER_VERSION}

nats-server-config-reloader:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh generic ${INFRA_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION}
  variables:
    IMAGE_BASE: natsio/nats-server-config-reloader
    IMAGE_VERSION: ${NATS_SERVER_CONFIG_RELOADER}

mosquitto:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh generic ${INFRA_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION}
  variables:
    IMAGE_BASE: library/eclipse-mosquitto
    IMAGE_VERSION: ${MOSQUITTO_VERSION}

mosquitto-exporter:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh generic ${INFRA_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION}
  variables:
    IMAGE_BASE: sapcc/mosquitto-exporter
    IMAGE_VERSION: ${MOSQUITTO_EXPORTER_VERSION}

cert-manager-controller:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh generic ${INFRA_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION}
  variables:
    IMAGE_BASE: jetstack/cert-manager-controller
    IMAGE_VERSION: ${CERT_MANAGER_VERSION}

cert-manager-webhook:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh generic ${INFRA_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION}
  variables:
    IMAGE_BASE: jetstack/cert-manager-webhook
    IMAGE_VERSION: ${CERT_MANAGER_VERSION}

cert-manager-cainjector:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh generic ${INFRA_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION}
  variables:
    IMAGE_BASE: jetstack/cert-manager-cainjector
    IMAGE_VERSION: ${CERT_MANAGER_VERSION}

cert-manager-csi-driver:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh generic ${INFRA_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION}
  variables:
    IMAGE_BASE: jetstack/cert-manager-csi-driver
    IMAGE_VERSION: ${CERT_MANAGER_CSI_DRIVER_VERSION}

cert-manager-webhook-pdns:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh generic ${INFRA_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION}
  variables:
    IMAGE_BASE: zachomedia/cert-manager-webhook-pdns
    IMAGE_VERSION: ${CERT_MANAGER_WEBHOOK_PDNS_VERSION}

caddy:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh generic ${INFRA_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION}
  variables:
    IMAGE_BASE: library/caddy
    IMAGE_VERSION: ${CADDY_VERSION}

storage-livenessprobe:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh generic ${INFRA_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION}
  variables:
    IMAGE_BASE: sig-storage/livenessprobe
    IMAGE_VERSION: ${LIVENESSPROBE_VERSION}

storage-csi-node-driver-registrar:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh generic ${INFRA_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION}
  variables:
    IMAGE_BASE: sig-storage/csi-node-driver-registrar
    IMAGE_VERSION: ${CSI_NODE_DRIVER_REGISTRAR_VERSION}

storage-csi-attacher:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh generic ${INFRA_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION}
  variables:
    IMAGE_BASE: sig-storage/csi-attacher
    IMAGE_VERSION: ${CSI_ATTACHER_VERSION}

storage-csi-resizer:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh generic ${INFRA_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION}
  variables:
    IMAGE_BASE: sig-storage/csi-resizer
    IMAGE_VERSION: ${CSI_RESIZER_VERSION}

storage-csi-snapshotter:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh generic ${INFRA_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION}
  variables:
    IMAGE_BASE: sig-storage/csi-snapshotter
    IMAGE_VERSION: ${CSI_SNAPSHOTTER_VERSION}

storage-snapshot-controller:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh generic ${INFRA_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION}
  variables:
    IMAGE_BASE: sig-storage/snapshot-controller
    IMAGE_VERSION: ${CSI_SNAPSHOT_CONTROLLER_VERSION}

storage-snapshot-validation-webhook:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh generic ${INFRA_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION}
  variables:
    IMAGE_BASE: sig-storage/snapshot-validation-webhook
    IMAGE_VERSION: ${CSI_SNAPSHOT_VALIDATION_WEBHOOK_VERSION}

storage-csi-provisioner:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh generic ${INFRA_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION}
  variables:
    IMAGE_BASE: sig-storage/csi-provisioner
    IMAGE_VERSION: ${CSI_PROVISIONER_VERSION}

storage-csi-driver-nfs:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh generic ${INFRA_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION}
  variables:
    IMAGE_BASE: sig-storage/nfsplugin
    IMAGE_VERSION: ${CSI_NFSPLUGIN_VERSION}

tigera-operator:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh generic ${INFRA_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION}
  variables:
    IMAGE_BASE: tigera/operator
    IMAGE_VERSION: ${TIGERA_OPERATOR_VERSION}

node-feature-discovery:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh generic ${INFRA_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION}
  variables:
    IMAGE_BASE: nfd/node-feature-discovery
    IMAGE_VERSION: ${K8S_NFD_VERSION}

eck-operator:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh generic ${INFRA_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION}
  variables:
    IMAGE_BASE: elastic/eck-operator
    IMAGE_VERSION: ${ECK_OPERATOR_VERSION}

git-sync:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh generic ${INFRA_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION}
  variables:
    IMAGE_BASE: git-sync/git-sync
    IMAGE_VERSION: ${GIT_SYNC_VERSION}

syncthing:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh generic ${INFRA_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION}
  variables:
    IMAGE_BASE: syncthing/syncthing
    IMAGE_VERSION: ${SYNCTHING_VERSION}

syncthing-discosrv:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh generic ${INFRA_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION}
  variables:
    IMAGE_BASE: syncthing/discosrv
    IMAGE_VERSION: ${SYNCTHING_VERSION}

syncthing-relaysrv:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh generic ${INFRA_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION}
  variables:
    IMAGE_BASE: syncthing/relaysrv
    IMAGE_VERSION: ${SYNCTHING_VERSION}

jellyfin:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh generic ${INFRA_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION}
  variables:
    IMAGE_BASE: jellyfin/jellyfin
    IMAGE_VERSION: ${JELLYFIN_VERSION}

tdarr:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh generic ${INFRA_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION}
  variables:
    IMAGE_BASE: haveagitgat/tdarr
    IMAGE_VERSION: ${TDARR_VERSION}

tdarr-node:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh generic ${INFRA_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION}
  variables:
    IMAGE_BASE: haveagitgat/tdarr_node
    IMAGE_VERSION: ${TDARR_VERSION}

curl:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh generic ${INFRA_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION}
  variables:
    IMAGE_BASE: curlimages/curl
    IMAGE_VERSION: ${CURL_VERSION}

restic:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh generic ${INFRA_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION}
  variables:
    IMAGE_BASE: restic/restic
    IMAGE_VERSION: ${RESTIC_VERSION}

coturn:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh generic ${INFRA_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION}
  variables:
    IMAGE_BASE: coturn/coturn
    IMAGE_VERSION: ${COTURN_VERSION}

jenkins:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh jenkins ${INFRA_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION}
  variables:
    IMAGE_BASE: jenkins/jenkins
    IMAGE_VERSION: ${JENKINS_VERSION}

kiwigrid-k8s-sidecar:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh generic ${INFRA_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION}
  variables:
    IMAGE_BASE: kiwigrid/k8s-sidecar
    IMAGE_VERSION: ${KIWIGRID_K8S_SIDECAR_VERSION}

jenkins-agent:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh generic ${INFRA_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION}
  variables:
    IMAGE_BASE: jenkins/agent
    IMAGE_VERSION: ${JENKINS_AGENT_VERSION}

jenkins-inbound-agent:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh generic ${INFRA_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION}
  variables:
    IMAGE_BASE: jenkins/inbound-agent
    IMAGE_VERSION: ${JENKINS_INBOUND_AGENT_VERSION}

netbox:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${INFRA_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION}
  variables:
    IMAGE_BASE: netboxcommunity/netbox
    IMAGE_VERSION: ${NETBOX_VERSION}

postgrest:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh generic ${INFRA_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION}
  variables:
    IMAGE_BASE: postgrest/postgrest
    IMAGE_VERSION: ${POSTGREST_VERSION}

cephcsi:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh generic ${INFRA_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION}
  variables:
    IMAGE_BASE: cephcsi/cephcsi
    IMAGE_VERSION: ${CEPHCSI_VERSION}

nvidia-cuda:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh generic ${INFRA_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION}
  variables:
    IMAGE_BASE: nvidia/cuda
    IMAGE_VERSION: ${NVIDIA_CUDA_VERSION}

nvidia-dcgm:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh generic ${INFRA_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION}
  variables:
    IMAGE_BASE: nvidia/cloud-native/dcgm
    IMAGE_VERSION: ${NVIDIA_DCGM_VERSION}

nvidia-dcgm-exporter:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh generic ${INFRA_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION}
  variables:
    IMAGE_BASE: nvidia/k8s/dcgm-exporter
    IMAGE_VERSION: ${NVIDIA_DCGM_EXPORTER_VERSION}

nvidia-gpu-feature-discovery:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh generic ${INFRA_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION}
  variables:
    IMAGE_BASE: nvidia/gpu-feature-discovery
    IMAGE_VERSION: ${NVIDIA_GPU_FEATURE_DISCOVERY_VERSION}

nvidia-gpu-operator:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh generic ${INFRA_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION}
  variables:
    IMAGE_BASE: nvidia/gpu-operator
    IMAGE_VERSION: ${NVIDIA_GPU_OPERATOR_VERSION}

nvidia-gpu-operator-validator:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh generic ${INFRA_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION}
  variables:
    IMAGE_BASE: nvidia/cloud-native/gpu-operator-validator
    IMAGE_VERSION: ${NVIDIA_GPU_OPERATOR_VALIDATOR_VERSION}

nvidia-k8s-container-toolkit:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh generic ${INFRA_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION}
  variables:
    IMAGE_BASE: nvidia/k8s/container-toolkit
    IMAGE_VERSION: ${NVIDIA_K8S_CONTAINER_TOOLKIT_VERSION}

nvidia-k8s-device-plugin:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh generic ${INFRA_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION}
  variables:
    IMAGE_BASE: nvidia/k8s-device-plugin
    IMAGE_VERSION: ${NVIDIA_K8S_DEVICE_PLUGIN_VERSION}

nvidia-k8s-driver-manager:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh generic ${INFRA_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION}
  variables:
    IMAGE_BASE: nvidia/cloud-native/k8s-driver-manager
    IMAGE_VERSION: ${NVIDIA_K8S_DRIVER_MANAGER_VERSION}

nvidia-k8s-mig-manager:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh generic ${INFRA_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION}
  variables:
    IMAGE_BASE: nvidia/cloud-native/k8s-mig-manager
    IMAGE_VERSION: ${NVIDIA_K8S_MIG_MANAGER_VERSION}

home-assistant:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh generic ${INFRA_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION}
  variables:
    IMAGE_BASE: homeassistant/home-assistant
    IMAGE_VERSION: ${HOMEASSISTANT_VERSION}

zigbee2mqtt:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh generic ${INFRA_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION}
  variables:
    IMAGE_BASE: koenkk/zigbee2mqtt
    IMAGE_VERSION: ${ZIGBEE2MQTT_VERSION}

gitea:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh generic ${INFRA_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION}
  variables:
    IMAGE_BASE: gitea/gitea
    IMAGE_VERSION: ${GITEA_VERSION}

cloudflared:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh generic ${INFRA_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION}
  variables:
    IMAGE_BASE: cloudflare/cloudflared
    IMAGE_VERSION: ${CLOUDFLARED_VERSION}

mailcatcher:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh generic ${INFRA_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION}
  variables:
    IMAGE_BASE: sj26/mailcatcher
    IMAGE_VERSION: ${MAILCATCHER_VERSION}

frps:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh generic ${INFRA_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION}
  variables:
    IMAGE_BASE: fatedier/frps
    IMAGE_VERSION: ${FRP_VERSION}

frpc:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh generic ${INFRA_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION}
  variables:
    IMAGE_BASE: fatedier/frpc
    IMAGE_VERSION: ${FRP_VERSION}

infra-docs:
  interruptible: true
  retry: 2
  stage: build2
  script:
    - |
      git clone https://readonly:${INFRA_READONLY_TOKEN}@git.nrtn.dev/infra/infra-docs.git

      ( cd infra-docs && git archive --format=tar HEAD ) | ( cd docker/infra-docs/docs && tar xf - )

      ./gitlab/build-image.sh ${CI_JOB_NAME} ${INFRA_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION}

infra-charts:
  interruptible: true
  retry: 2
  stage: build2
  script:
    - |
      ./import-charts.sh import-charts.yml docker/infra-charts/charts

      ./gitlab/build-image.sh ${CI_JOB_NAME} ${INFRA_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION}

      if [[ ! -z "${CI_COMMIT_TAG:-}" ]]; then
          archive_folder docker/infra-charts/charts charts ${INFRA_VERSION}
      fi

builder:
  interruptible: true
  stage: build2
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${INFRA_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg HOST_DOCKER_GID

builder-jenkins-agent:
  interruptible: true
  stage: build2
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${INFRA_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg HOST_DOCKER_GID

shell:
  interruptible: true
  stage: build2
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${INFRA_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg GIT_SERVER_HOST=${CI_SERVER_HOST} \
        --build-arg HOST_DOCKER_GID
