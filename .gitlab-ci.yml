---
variables:
  DOCKER_NAMESPACE: infra
  STACK_BASE: ubuntu:focal-20210416 # https://hub.docker.com/_/ubuntu?tab=tags&page=1&ordering=last_updated&name=focal
  DEPLOYER_BASE: ubuntu:focal-20210416 # https://hub.docker.com/_/ubuntu?tab=tags&page=1&ordering=last_updated&name=focal
  BUILDER_BASE: debian:10.9-slim  # https://hub.docker.com/_/debian?tab=tags&page=1&ordering=last_updated&name=10.8
  DEBIAN_VERSION: 10.9-slim
  ACTIONS_RUNNER_VERSION: 2.278.0 # https://github.com/actions/runner/releases
  GITLAB_RUNNER_VERSION: alpine-v13.12.0-rc1 # https://hub.docker.com/r/gitlab/gitlab-runner/tags?page=1&ordering=last_updated&name=alpine
  FREERADIUS_VERSION: 3.0.21-alpine # https://hub.docker.com/r/freeradius/freeradius-server/tags?page=1&ordering=last_updated&name=3.0.21
  TRAEFIK_VERSION: "v2.4.8" # https://hub.docker.com/_/traefik?tab=tags&page=1&ordering=last_updated&name=2.4
  MKDOCS_VERSION: "7.1.3" # https://hub.docker.com/r/squidfunk/mkdocs-material/tags?page=1&ordering=last_updated
  JEKYLL_VERSION: "4.2.0" # https://hub.docker.com/r/jekyll/jekyll/tags?page=1&ordering=last_updated
  UNBOUND_BASE: debian:10.9-slim # https://hub.docker.com/_/debian?tab=tags&page=1&ordering=last_updated&name=10.8
  POWERDNS_BASE: debian:10.9-slim # https://hub.docker.com/_/debian?tab=tags&page=1&ordering=last_updated&name=10.8
  POWERDNS_VERSION: "4.4.1" # https://www.powerdns.com/downloads.html
  GATSBY_BUILD_BASE: node:15.14.0-buster-slim # https://hub.docker.com/_/node?tab=description&page=1&ordering=last_updated
  GATSBY_VERSION: "3.4.0" # https://www.npmjs.com/package/gatsby
  GATSBY_BASE: alpine:3.12.7 # https://hub.docker.com/_/alpine?tab=tags&page=1&ordering=last_updated&name=3.12.4
  LATEX_BASE: ubuntu:focal-20210416 # https://hub.docker.com/_/ubuntu?tab=tags&page=1&ordering=last_updated&name=focal
  KEYCLOAK_VERSION: "13.0.0" # https://hub.docker.com/r/jboss/keycloak/tags?page=1&ordering=last_updated&name=13.0
  POSTGRES_VERSION: "13.2" # https://hub.docker.com/_/postgres
  JIRA_VERSION: "8.15.1" # https://hub.docker.com/r/atlassian/jira-software/tags?page=1&ordering=last_updated&name=8.15
  MAILSERVER_VERSION: "release-v7.1.0"
  NEXTCLOUD_VERSION: "20.0.9-apache" # https://hub.docker.com/_/nextcloud
  SPEEDTEST_VERSION: v1.1.3 # https://github.com/librespeed/speedtest-go/releases
  HAPROXY_VERSION: "2.3.10" # https://hub.docker.com/_/haproxy?tab=tags&page=1&ordering=last_updated
  MINIO_VERSION: RELEASE.2021-04-22T15-44-28Z # https://github.com/minio/minio/releases
  ETCD_VERSION: v3.4.15 # https://quay.io/repository/coreos/etcd?tag=latest&tab=tags
  PROMETHEUS_VERSION: v2.26.0 # https://prometheus.io/download/
  ALERTMANAGER_VERSION: v0.21.0
  NODE_EXPORTER_VERSION: v1.1.2
  CONSUL_EXPORTER_VERSION: v0.7.1
  BLACKBOX_EXPORTER_VERSION: v0.18.0
  SNMP_EXPORTER_VERSION: v0.20.0 # https://github.com/prometheus/snmp_exporter/releases
  IPMI_EXPORTER_VERSION: v1.3.2 # https://github.com/soundcloud/ipmi_exporter/releases
  GRAFANA_VERSION: "7.5.5" # https://hub.docker.com/r/grafana/grafana/tags?page=1&ordering=last_updated&name=7.4
  M3DBNODE_VERSION: v1.1.0 # https://quay.io/repository/m3db/m3dbnode?tag=latest&tab=tags
  M3COORDINATOR_VERSION: v1.1.0
  PROMETHEUS_ES_EXPORTER_VERSION: "0.14.0"  # https://github.com/braedon/prometheus-es-exporter/releases
  SSL_EXPORTER_VERSION: v2.2.0 # https://github.com/ribbybibby/ssl_exporter/releases
  CADVISOR_VERSION: v0.39.0 # https://github.com/google/cadvisor/releases
  KARMA_VERSION: v0.83 # https://github.com/prymitive/karma/releases
  PUSHGATEWAY_VERSION: v1.4.0
  LDAP_EXPORTER_VERSION: 0.0.3-2-dev
  ELASTICSEARCH_VERSION: "7.12.1"
  LOGSTASH_VERSION: "7.12.1"
  KIBANA_VERSION: "7.12.1"
  CORTEX_VERSION: v1.8.1 # https://github.com/cortexproject/cortex/releases
  ALERTA_VERSION: "8.5.0" # https://hub.docker.com/r/alerta/alerta-web/tags?page=1&ordering=last_updated
  MONGO_VERSION: 4.4.5-bionic # https://hub.docker.com/_/mongo
  WORDPRESS_VERSION: 5.7.1-apache   # https://hub.docker.com/_/wordpress?tab=description&page=1&ordering=last_updated
  PGADMIN_VERSION: "5.2"   # https://hub.docker.com/r/dpage/pgadmin4/tags?page=1&ordering=last_updated
  MYSQL_VERSION: "8.0.24" # https://registry.hub.docker.com/_/mysql/
  MARIADB_VERSION: 10.6.0-focal # https://hub.docker.com/_/mariadb
  HTTPBIN_VERSION: a9f17f0 # https://hub.docker.com/r/mccutchen/go-httpbin/tags?page=1&ordering=last_updated
  KAFKA_ZOOKEEPER_VERSION: 6.1.1
  KAFKA_SERVER_VERSION: 6.1.1
  KAFKA_SCHEMA_REGISTRY_VERSION: 6.1.1
  KAFKA_SERVER_CONNECT_DATAGEN_VERSION: 0.4.0-6.1.0
  KAFKA_ENTERPRISE_CONTROL_CENTER_VERSION: 6.1.1
  KAFKA_KSQLDB_SERVER_VERSION: 6.1.1
  KAFKA_KSQLDB_CLI_VERSION: 6.1.1
  KAFKA_REST_VERSION: 6.1.1
  KAFKA_KSQLDB_EXAMPLES_VERSION: 6.1.1
  OAUTH2_PROXY_VERSION: v7.1.3-amd64 # https://quay.io/repository/oauth2-proxy/oauth2-proxy?tab=tags
  GRAV_VERSION: 1.7.14
  BUILDPACKSIO_LIFECYCLE_VERSION: 0.11.3
  HEROKU_PROCFILE_CNB_VERSION: 0.6.2
  BINDERHUB_VERSION: 0.2.0-n562.h0b4462c
  BINDERHUB_IMAGE_CLEANER_VERSION: 0.2.0-n496.h988aca0
  PIHOLE_VERSION: v5.8.1
  CLICKHOUSE_VERSION: 21.5.6-alpine
  TABIX_VERSION: stable
  PLAUSIBLE_VERSION: v1.1.1
  VERDACCIO_VERSION: 5.0.1
  STRAPI_VERSION: 3.6.3-alpine
  GHOST_VERSION: 4.6.4
  BITNAMI_GHOST_VERSION: 4.6.4-debian-10-r7
  MATOMO_VERSION: 4.3.1
  NOCODB_VERSION: 0.9.24
  JUPYTERHUB_VERSION: 1.0.0-beta.1.n004.h8ae542c7
  JUPYTERHUB_SECRET_SYNC_VERSION: 1.0.0-beta.1
  JUPYTERHUB_NETWORK_TOOLS_VERSION: 1.0.0-beta.1
  JUPYTERHUB_IMAGE_AWAITER_VERSION: 1.0.0-beta.1
  JUPYTERHUB_SINGLEUSER_SAMPLE_VERSION: 1.0.0-beta.1
  JUPYTERHUB_HTTP_PROXY_VERSION: 4.4.0
  REPO2DOCKER_VERSION: 2021.03.0-15.g73ab48a
  DIND_VERSION: 20.10.7-dind


stages:
  - scratch
  - preflight
  - buildpacks
  - build
  - build-kafka

before_script:
  - |
    export INFRA_VERSION=${CI_COMMIT_TAG:-${CI_COMMIT_SHORT_SHA}}
    echo "Infra: ${INFRA_VERSION}"

import-images:
  stage: scratch
  script:
    - ./gitlab/${CI_JOB_NAME}.sh

noroutine-ca:
  stage: scratch
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION}

heroku-20:
  stage: preflight
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg STACK_BASE
      ./gitlab/build-image.sh ${CI_JOB_NAME}-build ${DOCKER_NAMESPACE}/${CI_JOB_NAME}-build:${INFRA_VERSION} \
        --build-arg STACK_IMAGE=${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION}

builder:
  stage: preflight
  script:
    - ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg BUILDER_BASE \
        --build-arg BUILDPACKS_VERSION=${INFRA_VERSION} \
        --build-arg GIT_SERVER_HOST=${CI_SERVER_HOST} \
        --build-arg SSH_PRIVATE_KEY \
        --build-arg HOST_DOCKER_GID=$(stat -t /var/run/docker.sock | awk '{ print $6 }') \
        --build-arg ACTIONS_RUNNER_VERSION

heroku-buildpacks:
  stage: buildpacks
  script:
    - cd ${CI_JOB_NAME}
    - |
      # Fetch upstream buildpack sources
      curl -sLo- https://github.com/heroku/buildpacks-nodejs/archive/refs/heads/main.tar.gz | tar zx buildpacks-nodejs-main/{common,buildpacks}
      curl -sLo- https://github.com/heroku/buildpacks-jvm/archive/refs/heads/main.tar.gz | tar zx buildpacks-jvm-main/{common,buildpacks}
    - |
      # Release upstream buildpacks
      for buildpack_id in heroku/nodejs-engine heroku/nodejs-function-invoker heroku/nodejs-npm heroku/nodejs-typescript heroku/nodejs-yarn; do \
        REQUESTED_BUILDPACK_ID=${buildpack_id} ./release-buildpack.sh; \
      done

    - |
      # Release meta-buildpacks
      for buildpack_id in heroku/nodejs heroku/nodejs-function; do \
        REQUESTED_BUILDPACK_ID=${buildpack_id} ./release-buildpack.sh; \
      done
    
    - |
      # Release builder
      make publish \
        BUILDPACKS_VERSION=${INFRA_VERSION} \
        STACK=infra/heroku-20 \
        STACK_VERSION=${INFRA_VERSION}

buildpacksio-lifecycle:
  stage: buildpacks
  script:
    - ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
      --build-arg BUILDPACKSIO_LIFECYCLE_VERSION \
      --build-arg INFRA_VERSION

gitlab-runner:
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg GITLAB_RUNNER_VERSION

radius:
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg FREERADIUS_VERSION

mkdocs:
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg MKDOCS_VERSION

traefik:
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg TRAEFIK_VERSION

jekyll:
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg JEKYLL_VERSION

gatsby-build:
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg GATSBY_BUILD_BASE --build-arg GATSBY_VERSION

gatsby:
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg GATSBY_BASE

# latex:
#   stage: build-latex
#   script:
#     - |
#       ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
#         --build-arg LATEX_BASE

powerdns:
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg POWERDNS_BASE

unbound:
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg UNBOUND_BASE

keycloak:
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg KEYCLOAK_VERSION

postgres:
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg POSTGRES_VERSION

jira:
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg JIRA_VERSION

mailserver:
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg MAILSERVER_VERSION

nextcloud:
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg NEXTCLOUD_VERSION

speedtest:
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg SPEEDTEST_VERSION

haproxy:
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg HAPROXY_VERSION

minio:
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg MINIO_VERSION

prometheus:
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg PROMETHEUS_VERSION

karma:
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg KARMA_VERSION

alertmanager:
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg ALERTMANAGER_VERSION

pushgateway:
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg PUSHGATEWAY_VERSION

blackbox-exporter:
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg BLACKBOX_EXPORTER_VERSION

snmp-exporter:
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg SNMP_EXPORTER_VERSION

ipmi-exporter:
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg IPMI_EXPORTER_VERSION --build-arg DEBIAN_VERSION

cadvisor:
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg CADVISOR_VERSION

node-exporter:
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg NODE_EXPORTER_VERSION

consul-exporter:
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg CONSUL_EXPORTER_VERSION

prometheus-es-exporter:
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg PROMETHEUS_ES_EXPORTER_VERSION

ssl-exporter:
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg SSL_EXPORTER_VERSION

rsyslog:
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg DEBIAN_VERSION

ioping-exporter:
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION}

ldap-exporter:
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg LDAP_EXPORTER_VERSION

grafana:
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg GRAFANA_VERSION

m3dbnode:
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg M3DBNODE_VERSION

m3coordinator:
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg M3COORDINATOR_VERSION

cortex:
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg CORTEX_VERSION

elasticsearch:
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg ELASTICSEARCH_VERSION

logstash:
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg LOGSTASH_VERSION

kibana:
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg KIBANA_VERSION
mongo:
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg MONGO_VERSION

alerta:
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg ALERTA_VERSION

wordpress:
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg WORDPRESS_VERSION

pgadmin:
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg PGADMIN_VERSION

mysql:
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg MYSQL_VERSION

mariadb:
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg MARIADB_VERSION

httpbin:
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg HTTPBIN_VERSION

oauth2-proxy:
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg OAUTH2_PROXY_VERSION

grav:
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg GRAV_VERSION

binderhub:
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg BINDERHUB_VERSION \
        --build-arg INFRA_VERSION

binderhub-image-cleaner:
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg BINDERHUB_IMAGE_CLEANER_VERSION \
        --build-arg INFRA_VERSION

jupyterhub:
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg JUPYTERHUB_VERSION \
        --build-arg INFRA_VERSION

repo2docker:
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg REPO2DOCKER_VERSION \
        --build-arg INFRA_VERSION

dind:
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg DIND_VERSION \
        --build-arg INFRA_VERSION

jupyterhub-http-proxy:
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg JUPYTERHUB_HTTP_PROXY_VERSION \
        --build-arg INFRA_VERSION

jupyterhub-secret-sync:
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg JUPYTERHUB_SECRET_SYNC_VERSION \
        --build-arg INFRA_VERSION

jupyterhub-network-tools:
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg JUPYTERHUB_NETWORK_TOOLS_VERSION \
        --build-arg INFRA_VERSION

jupyterhub-singleuser-sample:
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg JUPYTERHUB_SINGLEUSER_SAMPLE_VERSION \
        --build-arg INFRA_VERSION

jupyterhub-image-awaiter:
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg JUPYTERHUB_IMAGE_AWAITER_VERSION \
        --build-arg INFRA_VERSION

pihole:
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg PIHOLE_VERSION

clickhouse-server:
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg CLICKHOUSE_VERSION

clickhouse-tabix-web-client:
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg TABIX_VERSION

plausible-analytics:
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg PLAUSIBLE_VERSION

verdaccio:
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg VERDACCIO_VERSION

strapi:
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg STRAPI_VERSION

ghost:
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg GHOST_VERSION \
        --build-arg INFRA_VERSION

bitnami-ghost:
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg BITNAMI_GHOST_VERSION \
        --build-arg INFRA_VERSION

matomo:
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg MATOMO_VERSION

nocodb:
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg NOCODB_VERSION

cp-zookeeper:
  stage: build-kafka
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg KAFKA_ZOOKEEPER_VERSION

cp-server:
  stage: build-kafka
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg KAFKA_SERVER_VERSION

cp-schema-registry:
  stage: build-kafka
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg KAFKA_SCHEMA_REGISTRY_VERSION

cp-server-connect-datagen:
  stage: build-kafka
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg KAFKA_SERVER_CONNECT_DATAGEN_VERSION

cp-enterprise-control-center:
  stage: build-kafka
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg KAFKA_ENTERPRISE_CONTROL_CENTER_VERSION

cp-ksqldb-server:
  stage: build-kafka
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg KAFKA_KSQLDB_SERVER_VERSION

cp-ksqldb-cli:
  stage: build-kafka
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg KAFKA_KSQLDB_CLI_VERSION

cp-ksqldb-examples:
  stage: build-kafka
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg KAFKA_KSQLDB_EXAMPLES_VERSION

cp-kafka-rest:
  stage: build-kafka
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg KAFKA_REST_VERSION