---
variables:
  BUILDER_USER: builder
  DOCKER_NAMESPACE: infra
  DEBIAN_VERSION: "bullseye-20220527-slim"  # https://hub.docker.com/_/debian?tab=tags&page=1&ordering=last_updated&name=10.10
  UBUNTU_FOCAL_VERSION: "focal-20220531" # https://hub.docker.com/_/ubuntu?tab=tags&page=1&ordering=last_updated&name=focal
  UBUNTU_JAMMY_VERSION: "jammy-20220531" # https://hub.docker.com/_/ubuntu?tab=tags&page=1&ordering=last_updated&name=focal
  ALPINE_VERSION: "3.16.0" # https://hub.docker.com/_/alpine?tab=tags&page=1&ordering=last_updated&name=3.14
  BUSYBOX_VERSION: "1.35.0" # https://hub.docker.com/_/busybox
  DISTROLESS_VERSION: debian11 # gcr.io/distroless/
  GOLANG_VERSION: "1.18.3-bullseye" # https://hub.docker.com/_/golang?tab=tags&page=1&ordering=last_updated&name=1.16
  GOLANG_ALPINE_VERSION: "1.18.3-alpine3.15" # https://hub.docker.com/_/golang?tab=tags&page=1&ordering=last_updated&name=1.16
  PHP_VERSION: "8.1.7-apache-bullseye" # https://hub.docker.com/_/php?tab=tags&page=1&name=8.1.4-ap
  ACTIONS_RUNNER_CONTROLLER_VERSION: "v0.23.0" # https://hub.docker.com/r/summerwind/actions-runner-controller/tags
  ACTIONS_RUNNER_VERSION: "2.292.0" # https://github.com/actions/runner/releases
  ACTIONS_RUNNER_IMAGE_VERSION: "v2.292.0-ubuntu-20.04" # https://hub.docker.com/r/summerwind/actions-runner/tags
  KUBE_RBAC_PROXY_VERSION: v0.12.0 # https://quay.io/repository/brancz/kube-rbac-proxy?tab=tags&tag=latest
  GITLAB_RUNNER_VERSION: "alpine-v15.0.0" # https://hub.docker.com/r/gitlab/gitlab-runner/tags?page=1&ordering=last_updated&name=alpine
  GITLAB_VERSION: "15.0.2-ce.0" # https://hub.docker.com/r/gitlab/gitlab-ce/tags?page=1&ordering=last_updated&name=14.1
  GITLAB_AGENTK_VERSION: v15.0.0 # registry.gitlab.com/gitlab-org/cluster-integration/gitlab-agent/agentk:v15.0.0
  GITLAB_CLUSTER_APPLICATIONS_VERSION: v1.6.0 # registry.gitlab.com/gitlab-org/cluster-integration/cluster-applications
  GITLAB_AUTO_BUILD_VERSION: v1.15.0
  GITLAB_AUTO_DEPLOY_VERSION: v2.30.0
  DIND_VERSION: 20.10.17-dind # https://hub.docker.com/_/docker?tab=description&page=1&ordering=last_updated
  ARGOCD_VERSION: v2.4.0 # https://quay.io/repository/argoproj/argocd?tag=latest&tab=tags
  YTT_VERSION: "0.40.1" # https://github.com/vmware-tanzu/carvel-ytt/releases
  YTT_HASH: 11222665c627b8f0a1443534a3dde3c9b3aac08b322d28e91f0e011e3aeb7df5
  ARGOCD_VAULT_PLUGIN_VERSION: "1.11.0" # https://github.com/argoproj-labs/argocd-vault-plugin/releases
  ARGOCD_VAULT_PLUGIN_HASH: 307c5f9de016ee62e0e1dce1f6b6e8f5617f345c20b61eae7d2be2a8a8941d98
  ARGOCD_APPLICATIONSET_VERSION: v0.4.1 # https://quay.io/repository/argoproj/argocd-applicationset?tab=tags&tag=latest
  KANIKO_VERSION: v1.8.1 # https://console.cloud.google.com/gcr/images/kaniko-project/GLOBAL/executor
  NEXUS_VERSION: "3.39.0" # https://hub.docker.com/r/sonatype/nexus3/tags
  FREERADIUS_VERSION: "3.2.0-alpine" # https://hub.docker.com/r/freeradius/freeradius-server/tags?page=1&ordering=last_updated&name=3
  TRAEFIK_VERSION: "v2.7.0" # https://hub.docker.com/_/traefik?tab=tags&page=1&ordering=last_updated&name=2.5
  MKDOCS_VERSION: "8.3.4" # https://hub.docker.com/r/squidfunk/mkdocs-material/tags?page=1&ordering=last_updated
  POWERDNS_VERSION: "4.5.0" # https://www.powerdns.com/downloads.html
  # LATEX_BASE: ubuntu:jammy-20220315 # https://hub.docker.com/_/ubuntu?tab=tags&page=1&ordering=last_updated&name=focal
  KEYCLOAK_VERSION: "18.0.0" # https://quay.io/repository/keycloak/keycloak?tag=latest&tab=tags
  POSTGRES_VERSION: "14.3-bullseye" # https://hub.docker.com/_/postgres
  JIRA_VERSION: "8.22.3" # https://hub.docker.com/r/atlassian/jira-software/tags?page=1&ordering=last_updated
  NEXTCLOUD_VERSION: "24.0.1-apache" # https://hub.docker.com/_/nextcloud
  SPEEDTEST_VERSION: "v1.1.4" # https://github.com/librespeed/speedtest-go/releases
  HAPROXY_VERSION: "2.6.0" # https://hub.docker.com/_/haproxy?tab=tags&page=1&ordering=last_updated
  MINIO_VERSION: RELEASE.2022-05-23T18-45-11Z # https://github.com/minio/minio/releases
  ETCD_VERSION: v3.5.4 # https://quay.io/repository/coreos/etcd?tag=latest&tab=tags
  PROMETHEUS_VERSION: v2.36.1 # https://prometheus.io/download/
  ALERTMANAGER_VERSION: v0.24.0
  BLACKBOX_EXPORTER_VERSION: v0.21.0
  CONSUL_EXPORTER_VERSION: v0.8.0
  NODE_EXPORTER_VERSION: v1.3.1
  PUSHGATEWAY_VERSION: v1.4.3
  SNMP_EXPORTER_VERSION: v0.20.0 # https://github.com/prometheus/snmp_exporter/releases
  IPMI_EXPORTER_VERSION: v1.4.0 # https://github.com/soundcloud/ipmi_exporter/releases
  GRAFANA_VERSION: "8.5.5" # https://hub.docker.com/r/grafana/grafana/tags?page=1&ordering=last_updated
  GRIT_VERSION: "v0.0.5" # Put the tag! https://github.com/noroutine/grit/releases
  LOKI_VERSION: "2.5.0" # https://hub.docker.com/r/grafana/loki/tags
  PROMTAIL_VERSION: "2.5.0"
  M3DBNODE_VERSION: v1.5.0 # https://quay.io/repository/m3db/m3dbnode?tag=latest&tab=tags
  M3COORDINATOR_VERSION: v1.5.0
  PROMETHEUS_ES_EXPORTER_VERSION: "0.14.1"  # https://github.com/braedon/prometheus-es-exporter/releases
  SSL_EXPORTER_VERSION: "2.4.1" # https://github.com/ribbybibby/ssl_exporter/releases
  CADVISOR_VERSION: "v0.44.0" # https://github.com/google/cadvisor/releases
  KARMA_VERSION: "v0.103" # https://github.com/prymitive/karma/pkgs/container/karma
  LDAP_EXPORTER_VERSION: 0.0.4-1-dev
  ELASTICSEARCH_VERSION: "8.2.2" # https://www.elastic.co/guide/en/elasticsearch/reference/current/es-release-notes.html
  LOGSTASH_VERSION: "8.2.2"
  KIBANA_VERSION: "8.2.2"
  CORTEX_VERSION: v1.11.1 # https://quay.io/repository/cortexproject/cortex?tab=tags&tag=latest
  ALERTA_VERSION: "8.7.0" # https://hub.docker.com/r/alerta/alerta-web/tags?page=1&ordering=last_updated
  MONGO_VERSION: 5.0.9-focal # https://hub.docker.com/_/mongo
  WORDPRESS_VERSION: "6.0.0-apache"   # https://hub.docker.com/_/wordpress?tab=description&page=1&ordering=last_updated
  PGADMIN_VERSION: "6.10"   # https://hub.docker.com/r/dpage/pgadmin4/tags?page=1&ordering=last_updated
  MYSQL_VERSION: "8.0.29" # https://registry.hub.docker.com/_/mysql/
  MARIADB_VERSION: "10.8.2-focal" # https://hub.docker.com/_/mariadb
  HTTPBIN_VERSION: v2.4.0 # https://hub.docker.com/r/mccutchen/go-httpbin/tags?page=1&ordering=last_updated
  OAUTH2_PROXY_VERSION: v7.3.0-amd64 # https://quay.io/repository/oauth2-proxy/oauth2-proxy?tab=tags
  BUILDPACKSIO_LIFECYCLE_VERSION: "0.14.1" # https://hub.docker.com/r/buildpacksio/lifecycle/tags?page=1&ordering=last_updated&name=0.
  HEROKU_PROCFILE_CNB_VERSION: "1.0.1" # https://github.com/heroku/procfile-cnb
  BINDERHUB_VERSION: 0.2.0-n850.h8bc0157
  BINDERHUB_IMAGE_CLEANER_VERSION: 0.2.0-n768.h13978ab # https://hub.docker.com/r/jupyterhub/k8s-image-cleaner/tags
  PIHOLE_VERSION: "2022.05" # https://hub.docker.com/r/pihole/pihole/tags?page=1&ordering=last_updated
  CLICKHOUSE_VERSION: "22.1.3.7-alpine" # https://hub.docker.com/r/yandex/clickhouse-server/tags?page=1&ordering=last_updated
  TABIX_VERSION: stable
  PLAUSIBLE_VERSION: "v1.4.4" # https://hub.docker.com/r/plausible/analytics/tags?page=1&ordering=last_updated
  VERDACCIO_VERSION: "5.11.0" # https://hub.docker.com/r/verdaccio/verdaccio/tags?page=1&ordering=last_updated
  STRAPI_VERSION: 3.6.8-alpine # https://hub.docker.com/r/strapi/strapi/tags?page=1&ordering=last_updated
  GHOST_VERSION: "5.2.2" # https://hub.docker.com/_/ghost?tab=tags&page=1&ordering=last_updated
  MATOMO_VERSION: "4.10.1-apache" # https://hub.docker.com/_/matomo?tab=tags&page=1&ordering=last_updated
  NOCODB_VERSION: "0.91.7" # https://hub.docker.com/r/nocodb/nocodb/tags?page=1&ordering=last_updated
  METABASE_VERSION: "v0.43.2" # https://hub.docker.com/r/metabase/metabase/tags
  JUPYTERHUB_VERSION: 1.2.0 # https://hub.docker.com/r/jupyterhub/k8s-hub/tags?page=1&ordering=last_updated
  JUPYTERHUB_SECRET_SYNC_VERSION: 1.2.0 # https://hub.docker.com/_/docker?tab=description&page=1&ordering=last_updated
  JUPYTERHUB_NETWORK_TOOLS_VERSION: 1.2.0 # https://hub.docker.com/r/jupyterhub/k8s-network-tools/tags?page=1&ordering=last_updated
  JUPYTERHUB_IMAGE_AWAITER_VERSION: 1.2.0 # https://hub.docker.com/r/jupyterhub/k8s-image-awaiter/tags?page=1&ordering=last_updated
  JUPYTERHUB_SINGLEUSER_SAMPLE_VERSION: 1.2.0 # https://hub.docker.com/r/jupyterhub/k8s-singleuser-sample/tags?page=1&ordering=last_updated
  JUPYTERHUB_HTTP_PROXY_VERSION: 4.5.1 # https://hub.docker.com/r/jupyterhub/configurable-http-proxy/tags?page=1&ordering=last_updated
  REPO2DOCKER_VERSION: "2022.02.0" # https://hub.docker.com/r/jupyter/repo2docker/tags?page=1&ordering=last_updated
  JUPYTER_VERSION: hub-2.3.0 # https://hub.docker.com/r/jupyter/all-spark-notebook/tags?page=1&ordering=last_updated
  RSHINY_VERSION: 4.2.0 # https://hub.docker.com/r/rocker/shiny/tags?page=1&ordering=last_updated
  RSTUDIO_VERSION: 1.4.1717 # https://www.rstudio.com/products/rstudio/download-server/
  CAPROVER_VERSION: 1.10.1 # https://hub.docker.com/r/caprover/caprover/tags?page=1&ordering=last_updated
  UMAMI_VERSION: postgresql-2575cbf # https://github.com/mikecao/umami/pkgs/container/umami
  BITNAMI_GHOST_VERSION: "5.2.2-debian-10-r1" # https://hub.docker.com/r/bitnami/ghost/tags?page=1&ordering=last_updated
  BITNAMI_KEYCLOAK_VERSION: "18.0.0-debian-10-r6" # https://hub.docker.com/r/bitnami/keycloak/tags?page=1&ordering=last_updated&name=18
  BITNAMI_KEYCLOAK16_VERSION: "16.1.1-debian-10-r103" # https://hub.docker.com/r/bitnami/keycloak/tags?page=1&ordering=last_updated&name=16
  BITNAMI_SPARK_VERSION: 3.2.1-debian-10-r111 # https://hub.docker.com/r/bitnami/spark/tags?page=1&ordering=last_updated
  BITNAMI_PROMETHEUS_VERSION: 2.35.0-debian-10-r32 # https://hub.docker.com/r/bitnami/prometheus/tags?page=1&ordering=last_updated
  BITNAMI_PROMETHEUS_OPERATOR_VERSION: "0.56.3-debian-10-r1" # https://hub.docker.com/r/bitnami/prometheus-operator/tags?page=1&ordering=last_updated
  BITNAMI_NODE_EXPORTER_VERSION: 1.3.1-debian-10-r164 # https://hub.docker.com/r/bitnami/node-exporter/tags
  BITNAMI_REDIS_VERSION: 6.2.7-debian-10-r26 # https://hub.docker.com/r/bitnami/redis/tags?page=1&ordering=last_updated&name=6.2
  BITNAMI_POSTGRESQL11_VERSION: 11.16.0-debian-10-r12 # https://hub.docker.com/r/bitnami/postgresql/tags?page=1&ordering=last_updated&name=11.
  BITNAMI_POSTGRESQL12_VERSION: 12.11.0-debian-10-r12 # https://hub.docker.com/r/bitnami/postgresql/tags?page=1&ordering=last_updated&name=12.
  BITNAMI_POSTGRESQL13_VERSION: 13.7.0-debian-10-r12 # https://hub.docker.com/r/bitnami/postgresql/tags?page=1&ordering=last_updated&name=13.
  BITNAMI_POSTGRESQL14_VERSION: 14.3.0-debian-10-r13 # https://hub.docker.com/r/bitnami/postgresql/tags?page=1&ordering=last_updated&name=14.
  BITNAMI_POSTGRES_EXPORTER_VERSION: 0.10.1-debian-10-r131 # https://hub.docker.com/r/bitnami/postgres-exporter/tags
  BITNAMI_MARIADB_VERSION: 10.7.4-debian-10-r4 # https://hub.docker.com/r/bitnami/mariadb/tags?page=1&ordering=last_updated&name=10.6
  BITNAMI_MONGODB_VERSION: 5.0.9-debian-10-r0 # https://hub.docker.com/r/bitnami/mongodb/tags?page=1&ordering=last_updated&name=5.
  BITNAMI_MEMCACHED_VERSION: 1.6.15-debian-10-r54 # https://hub.docker.com/r/bitnami/memcached/tags
  BITNAMI_NGINX_INGRESS_CONTROLLER_VERSION: "1.2.0-debian-10-r8" # https://hub.docker.com/r/bitnami/nginx-ingress-controller/tags?page=1&ordering=last_updated
  BITNAMI_NGINX_VERSION: "1.21.6-debian-10-r118" # https://hub.docker.com/r/bitnami/nginx/tags?page=1&ordering=last_updated&name=1.2
  BITNAMI_MINIO_VERSION: "2022.6.3-debian-10-r2" # https://hub.docker.com/r/bitnami/minio/tags?page=1&ordering=last_updated
  BITNAMI_MINIO_CLIENT_VERSION: "2022.5.9-debian-10-r15" # https://hub.docker.com/r/bitnami/minio-client/tags?page=1&ordering=last_updated
  BITNAMI_SHELL_VERSION: 10-debian-10-r436 # https://hub.docker.com/r/bitnami/bitnami-shell/tags?page=1&ordering=last_updated
  BITNAMI_METALLB_CONTROLLER_VERSION: 0.12.1-debian-10-r93 # https://hub.docker.com/r/bitnami/metallb-controller/tags?page=1&ordering=last_updated
  BITNAMI_METALLB_SPEAKER_VERSION: 0.12.1-debian-10-r95 # https://hub.docker.com/r/bitnami/metallb-speaker/tags?page=1&ordering=last_updated
  BITNAMI_GRAFANA_VERSION: "8.5.4-debian-10-r4" # https://hub.docker.com/r/bitnami/grafana/tags?page=1&ordering=last_updated&name=8
  BITNAMI_GRAFANA_IMAGE_RENDERER_VERSION: "3.4.2-debian-10-r59" # https://hub.docker.com/r/bitnami/grafana-image-renderer/tags
  BITNAMI_CONSUL_VERSION: "1.12.2-debian-10-r0" # https://hub.docker.com/r/bitnami/consul/tags
  BITNAMI_NATS_VERSION: "2.8.4-debian-10-r0" # https://hub.docker.com/r/bitnami/nats/tags
  BITNAMI_KUBE_STATE_METRICS_VERSION: "2.4.2-debian-10-r76" # https://hub.docker.com/r/bitnami/kube-state-metrics/tags?page=1&ordering=last_updated
  BITNAMI_METRICS_SERVER_VERSION: "0.6.1-debian-10-r102" # https://hub.docker.com/r/bitnami/metrics-server/tags?page=1&ordering=last_updated
  BITNAMI_KUBEAPPS_ASSET_SYNCER: "2.4.5-scratch-r0" # https://hub.docker.com/r/bitnami/kubeapps-asset-syncer/tags?page=1&ordering=last_updated
  BITNAMI_KUBEAPPS_APPREPOSITORY_CONTROLLER_VERSION: "2.4.5-scratch-r0" # https://hub.docker.com/r/bitnami/kubeapps-apprepository-controller/tags?page=1&ordering=last_updated
  BITNAMI_KUBEAPPS_DASHBOARD_VERSION: "2.4.5-debian-10-r27" # https://hub.docker.com/r/bitnami/kubeapps-dashboard/tags?page=1&ordering=last_updated
  BITNAMI_KUBEAPPS_KUBEOPS_VERSION: "2.4.5-scratch-r0" # https://hub.docker.com/r/bitnami/kubeapps-kubeops/tags?page=1&ordering=last_updated
  BITNAMI_KUBEAPPS_ASSETSVC_VERSION: "2.4.5-scratch-r0" # https://hub.docker.com/r/bitnami/kubeapps-assetsvc/tags?page=1&ordering=last_updated
  BITNAMI_KUBEAPPS_APIS_VERSION: "2.4.5-debian-10-r26" # https://hub.docker.com/r/bitnami/kubeapps-apis/tags?page=1&ordering=last_updated
  BITNAMI_KUBEAPPS_PINNIPED_PROXY_VERSION: "2.4.5-debian-10-r26"  # https://hub.docker.com/r/bitnami/kubeapps-pinniped-proxy/tags?page=1&ordering=last_updated
  BITNAMI_KUBE_RBAC_PROXY_VERSION: "0.12.0-scratch-r2" # https://hub.docker.com/r/bitnami/kube-rbac-proxy/tags
  BITNAMI_SEALED_SECRETS_CONTROLLER_VERSION: v0.18.0 # https://hub.docker.com/r/bitnami/sealed-secrets-controller/tags
  EXTERNAL_SECRETS_VERSION: v0.5.6 # https://github.com/external-secrets/external-secrets/releases
  MINIO_CONSOLE_VERSION: "v0.18.1" # https://hub.docker.com/r/minio/console/tags?page=1&ordering=last_updated
  HASURA_GRAPHQL_VERSION: v2.7.0 # https://hub.docker.com/r/hasura/graphql-engine/tags?page=1&ordering=last_updated
  KUTT_VERSION: v2.7.4 # https://hub.docker.com/r/kutt/kutt/tags?page=1&ordering=last_updated
  SFTPGO_VERSION: v2.3.1 # https://hub.docker.com/r/drakkan/sftpgo/tags?page=1&ordering=last_updated
  HELLO_VERSION: "1.10.1" # https://hub.docker.com/r/paulbouwer/hello-kubernetes/tags?page=1&ordering=last_updated
  RELOADER_VERSION: "v0.0.114" # https://hub.docker.com/r/stakater/reloader/tags?page=1&ordering=last_updated&name=v0.
  CONFIGMAP_RELOAD_VERSION: v0.7.1
  SQUID_VERSION: 4.6-1+deb10u6 # https://packages.debian.org/buster/squid
  DOCKER_REGISTRY_VERSION: "2.8.1" # https://hub.docker.com/_/registry?tab=tags&page=1&ordering=last_updated
  DEX_VERSION: v2.32.0 # https://hub.docker.com/r/dexidp/dex/tags?page=1&ordering=last_updated
  REDIS_VERSION: 7.0.1-bullseye # https://hub.docker.com/_/redis?tab=tags&page=1&ordering=last_updated
  LISTMONK_VERSION: v2.1.0 # https://hub.docker.com/r/listmonk/listmonk/tags?page=1&ordering=last_updated
  VAULTWARDEN_VERSION: "1.25.0"
  BOKY_POSTFIX_VERSION: v3.5.0
  MEMCACHED_VERSION: "1.6.15-alpine3.15" # https://hub.docker.com/_/memcached?tab=tags&page=1
  CRYPTGEON_VERSION: "1.5.1" # https://hub.docker.com/r/cupcakearmy/cryptgeon/tags
  K8S_PAUSE_VERSION: "3.7"
  K8S_VERSION: "v1.24.1"
  K8S_COREDNS_VERSION: "v1.8.6"
  LIVENESSPROBE_VERSION: v2.7.0
  CSI_NODE_DRIVER_REGISTRAR_VERSION: v2.5.1
  CSI_ATTACHER_VERSION: v3.5.0
  CSI_RESIZER_VERSION: v1.4.0
  CSI_SNAPSHOTTER_VERSION: v5.0.1
  CSI_PROVISIONER_VERSION: v3.1.0
  TIGERA_OPERATOR_VERSION: "v1.27.4" # https://quay.io/repository/tigera/operator?tab=tags
  CALICO_VERSION: "v3.23.1" # https://hub.docker.com/r/calico/node/tags
  CONSUL_VERSION: "1.12.2"  # https://hub.docker.com/r/hashicorp/consul
  CONSUL_K8S_CP_VERSION: "0.44.0" # https://hub.docker.com/r/hashicorp/consul-k8s-control-plane/tags
  ENVOY_VERSION: v1.21.3 # https://hub.docker.com/r/envoyproxy/envoy-alpine/tags
  VAULT_VERSION: "1.10.4" # https://hub.docker.com/r/hashicorp/vault
  VAULT_K8S_VERSION: "0.16.1" # https://hub.docker.com/r/hashicorp/vault-k8s/tags
  VAULT_CSI_PROVIDER_VERSION: "1.1.0"  # https://hub.docker.com/r/hashicorp/vault-csi-provider/tags
  STRIMZI_OPERATOR_VERSION: "0.29.0"  # https://quay.io/repository/strimzi/operator?tab=tags 
  STRIMZI_KAFKA_VERSION: "3.2.0" # https://quay.io/repository/strimzi/kafka?tab=tags
  NATS_OPERATOR_VERSION: "0.8.0" # https://hub.docker.com/r/connecteverything/nats-operator/tags
  NATS_VERSION: "2.8.4-alpine3.15" # https://hub.docker.com/_/nats?tab=tags
  WIREGUARD_VERSION: "0.0.20220316" # https://hub.docker.com/r/masipcat/wireguard-go/tags
  MOSQUITTO_VERSION: "2.0.14-openssl" # https://hub.docker.com/_/eclipse-mosquitto?tab=tags
  MOSQUITTO_EXPORTER_VERSION: "0.8.0" # https://hub.docker.com/r/sapcc/mosquitto-exporter/tags
  CERT_MANAGER_CONTROLLER_VERSION: v1.8.0 # https://quay.io/repository/jetstack/cert-manager-controller?tab=tags
  CERT_MANAGER_CAINJECTOR_VERSION: v1.8.0 # https://quay.io/repository/jetstack/cert-manager-cainjector?tab=tags
  CERT_MANAGER_WEBHOOK_VERSION: v1.8.0 # https://quay.io/repository/jetstack/cert-manager-webhook?tab=tags
  CERT_MANAGER_CTL_VERSION: v1.8.0 # https://quay.io/repository/jetstack/cert-manager-ctl?tab=tags
  CERT_MANAGER_CSI_DRIVER_VERSION: v0.3.0 # https://quay.io/repository/jetstack/cert-manager-csi-driver?tab=tags&tag=latest
  CERT_MANAGER_WEBHOOK_PDNS_VERSION: v2.1.0 # https://hub.docker.com/r/zachomedia/cert-manager-webhook-pdns/tags
  VSPHERE_CPI_MANAGER_VERSION: v1.23.0
  VSPHERE_CSI_DRIVER_VERSION: v2.5.1
  VSPHERE_CSI_SYNCER_VERSION: v2.5.1
  LONGHORN_VERSION: v1.2.4 # https://hub.docker.com/r/longhornio/longhorn-manager/tags
  LONGHORN_INSTANCE_MANAGER_VERSION: v1_20220611
  LONGHORN_SHARE_MANAGER_VERSION: v1_20220531
  CADDY_VERSION: 2.5.1-alpine # https://hub.docker.com/_/caddy?tab=description
  SHADOWBOX_VERSION: server-v1.6.1 # https://quay.io/repository/outline/shadowbox?tab=tags&tag=latest
  BPFTRACE_VERSION: v0.15.0 # https://quay.io/repository/iovisor/bpftrace?tab=tags&tag=latest
  VMWARE_EXPORTER_VERSION: v0.18.3 # https://hub.docker.com/r/pryorda/vmware_exporter/tags

stages:
  - scratch
  - base
  - stacks
  - buildpacks
  - prebuild
  - build

before_script:
  - |
    export INFRA_VERSION=${CI_COMMIT_TAG:-${CI_COMMIT_SHORT_SHA}}
    export KEYCLOAK_THEMES_IMAGE=${DOCKER_HUB}/${DOCKER_NAMESPACE}/keycloak-themes:${INFRA_VERSION}
    export HOST_DOCKER_GID=$(stat -t /var/run/docker.sock | awk '{ print $6 }')
    echo "Infra: ${INFRA_VERSION}"
    source gitlab/env.sh

import-images:
  interruptible: true
  stage: scratch
  script:
    - ./gitlab/${CI_JOB_NAME}.sh

# mirror-homebrew:
#   interruptible: true
#   stage: scratch
#   script:
#     - ./gitlab/${CI_JOB_NAME}.sh

noroutine-ca:
  interruptible: true
  stage: scratch
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION}

keycloak-themes:
  interruptible: true
  stage: prebuild
  script:
    - |
      git clone https://readonly:${INFRA_READONLY_TOKEN}@git.nrtn.dev/infra/keycloak-themes.git
      cd keycloak-themes
      pack build --clear-cache --publish ${KEYCLOAK_THEMES_IMAGE}

grafana-dashboards:
  interruptible: true
  stage: prebuild
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg GRIT_VERSION

ingress-default-backend:
  interruptible: true
  stage: prebuild
  script:
    - |
      git clone https://readonly:${INFRA_READONLY_TOKEN}@git.nrtn.dev/infra/ingress-default-backend.git
      cd ingress-default-backend
      pack build --clear-cache --publish ${DOCKER_HUB}/${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION}

debian:
  interruptible: true
  stage: base
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg DEBIAN_VERSION

ubuntu20:
  interruptible: true
  stage: base
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg UBUNTU_FOCAL_VERSION

ubuntu22:
  interruptible: true
  stage: base
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg UBUNTU_JAMMY_VERSION

alpine:
  interruptible: true
  stage: base
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg ALPINE_VERSION

busybox:
  interruptible: true
  stage: base
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg ALPINE_VERSION \
        --build-arg BUSYBOX_VERSION

distroless:
  interruptible: true
  stage: base
  parallel:
    matrix:
      - FLAVOUR: [ "static", "base", "java11", "java17", "cc", "nodejs"]
        DUMMY: [ "dummy" ]
  script:
    - ./gitlab/build-image.sh distroless ${DOCKER_NAMESPACE}/distroless-${FLAVOUR}-${DISTROLESS_VERSION}:${INFRA_VERSION} \
        --build-arg DISTROLESS_VERSION \
        --build-arg FLAVOUR

heroku-20:
  interruptible: true
  stage: stacks
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION}
      ./gitlab/build-image.sh ${CI_JOB_NAME}-build ${DOCKER_NAMESPACE}/${CI_JOB_NAME}-build:${INFRA_VERSION} \
        --build-arg STACK_IMAGE=${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION}

heroku-22:
  interruptible: true
  stage: stacks
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION}
      ./gitlab/build-image.sh ${CI_JOB_NAME}-build ${DOCKER_NAMESPACE}/${CI_JOB_NAME}-build:${INFRA_VERSION} \
        --build-arg STACK_IMAGE=${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION}

builder:
  interruptible: true
  stage: build
  script:
    - ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg BUILDPACKS_VERSION=${INFRA_VERSION} \
        --build-arg GIT_SERVER_HOST=${CI_SERVER_HOST} \
        --build-arg HOST_DOCKER_GID \
        --build-arg ACTIONS_RUNNER_VERSION

shell:
  interruptible: true
  stage: build
  script:
    - ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg BUILDPACKS_VERSION=${INFRA_VERSION} \
        --build-arg GIT_SERVER_HOST=${CI_SERVER_HOST} \
        --build-arg HOST_DOCKER_GID

ocsp-responder:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION}

openvpn:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION}

wireguard:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg WIREGUARD_VERSION

shadowbox:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg SHADOWBOX_VERSION

gitlab-auto-build:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg GITLAB_AUTO_BUILD_VERSION

gitlab-auto-deploy:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg GITLAB_AUTO_DEPLOY_VERSION

gitlab-agentk:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg GITLAB_AGENTK_VERSION

gitlab-cluster-applications:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg GITLAB_CLUSTER_APPLICATIONS_VERSION

heroku-buildpacks:
  interruptible: true
  stage: buildpacks
  script:
    - |
      sudo apt update -yyq
      sudo apt install -yyq musl-tools
      curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y -t x86_64-unknown-linux-musl
      source $HOME/.cargo/env
      cargo install libcnb-cargo

    - cd ${CI_JOB_NAME}
    - |
      # Fetch upstream buildpack sources
      # curl -sLo- https://github.com/noroutine/buildpacks-nodejs/archive/refs/heads/main.tar.gz | tar zx buildpacks-nodejs-main/{common,buildpacks}
      curl -sLo- https://github.com/heroku/buildpacks-nodejs/archive/refs/heads/main.tar.gz | tar zx buildpacks-nodejs-main/{Cargo.lock,Cargo.toml,common,buildpacks}
      # curl -sLo- https://github.com/heroku/buildpacks-jvm/archive/refs/heads/main.tar.gz | tar zx buildpacks-jvm-main/{common,buildpacks}

    - |
      # Release upstream buildpacks
      for buildpack_id in heroku/nodejs-npm heroku/nodejs-typescript heroku/nodejs-yarn heroku/nodejs-engine heroku/nodejs-function-invoker; do \
        REQUESTED_BUILDPACK_ID=${buildpack_id} ./release-buildpack.sh; \
      done

    - |
      # Release meta-buildpacks
      for buildpack_id in heroku/nodejs heroku/nodejs-function; do \
        REQUESTED_BUILDPACK_ID=${buildpack_id} ./release-buildpack.sh; \
      done
    
    - |
      # Release builder
      make publish20 \
        BUILDPACKS_VERSION=${INFRA_VERSION} \
        BUILDPACKS_BASE=infra/heroku-20 \
        BUILDPACKS_BASE_VERSION=${INFRA_VERSION}

      # make publish22 \
      #   BUILDPACKS_VERSION=${INFRA_VERSION} \
      #   BUILDPACKS_BASE=infra/heroku-22 \
      #   BUILDPACKS_BASE_VERSION=${INFRA_VERSION}

buildpacksio-lifecycle:
  interruptible: true
  stage: buildpacks
  script:
    - ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
      --build-arg BUILDPACKSIO_LIFECYCLE_VERSION

gitlab-runner:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg GITLAB_RUNNER_VERSION

gitlab:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg GITLAB_VERSION

actions-runner-controller:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg ACTIONS_RUNNER_CONTROLLER_VERSION

actions-runner:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg HOST_DOCKER_GID \
        --build-arg ACTIONS_RUNNER_IMAGE_VERSION

actions-runner-dind:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg HOST_DOCKER_GID \
        --build-arg ACTIONS_RUNNER_IMAGE_VERSION

kube-rbac-proxy:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg KUBE_RBAC_PROXY_VERSION

kaniko-executor:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg KANIKO_VERSION

nexus:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg NEXUS_VERSION

vaultwarden:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg VAULTWARDEN_VERSION

radius:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg FREERADIUS_VERSION

mkdocs:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg MKDOCS_VERSION

traefik:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg TRAEFIK_VERSION

# latex:
#   stage: build
#   script:
#     - |
#       ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
#         --build-arg LATEX_BASE

powerdns:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION}

unbound:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION}

keycloak:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg KEYCLOAK_VERSION \
        --build-arg KEYCLOAK_THEMES_IMAGE

postgres:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg POSTGRES_VERSION

jira:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg JIRA_VERSION

nextcloud:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg NEXTCLOUD_VERSION

speedtest:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg SPEEDTEST_VERSION \
        --build-arg GOLANG_ALPINE_IMAGE=${DOCKER_HUB}/golang:${GOLANG_ALPINE_VERSION} \
        --build-arg ALPINE_IMAGE=${DOCKER_HUB}/${DOCKER_NAMESPACE}/alpine:${INFRA_VERSION}

haproxy:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg HAPROXY_VERSION

minio:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg MINIO_VERSION

minio-console:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg MINIO_CONSOLE_VERSION

prometheus:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg PROMETHEUS_VERSION

karma:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg KARMA_VERSION

alertmanager:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg ALERTMANAGER_VERSION

pushgateway:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg PUSHGATEWAY_VERSION

blackbox-exporter:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg BLACKBOX_EXPORTER_VERSION

snmp-exporter:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg SNMP_EXPORTER_VERSION

ipmi-exporter:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg IPMI_EXPORTER_VERSION \
        --build-arg GOLANG_VERSION

cadvisor:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg CADVISOR_VERSION

node-exporter:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg NODE_EXPORTER_VERSION

consul-exporter:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg CONSUL_EXPORTER_VERSION

prometheus-es-exporter:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg PROMETHEUS_ES_EXPORTER_VERSION

ssl-exporter:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg SSL_EXPORTER_VERSION

rsyslog:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION}

squid:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg SQUID_VERSION

ioping-exporter:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg GOLANG_VERSION

ldap-exporter:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg LDAP_EXPORTER_VERSION

grafana:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg GRAFANA_VERSION

promtail:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg PROMTAIL_VERSION

loki:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg LOKI_VERSION

m3dbnode:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg M3DBNODE_VERSION

m3coordinator:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg M3COORDINATOR_VERSION

cortex:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg CORTEX_VERSION

elasticsearch:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg ELASTICSEARCH_VERSION

logstash:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg LOGSTASH_VERSION

kibana:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg KIBANA_VERSION
mongo:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg MONGO_VERSION

alerta:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg ALERTA_VERSION

wordpress:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg WORDPRESS_VERSION

pgadmin:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg PGADMIN_VERSION

mysql:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg MYSQL_VERSION

mariadb:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg MARIADB_VERSION

httpbin:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg HTTPBIN_VERSION

oauth2-proxy:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg OAUTH2_PROXY_VERSION

caprover:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg CAPROVER_VERSION

binderhub:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg BINDERHUB_VERSION

binderhub-image-cleaner:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg BINDERHUB_IMAGE_CLEANER_VERSION

jupyterhub:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg JUPYTERHUB_VERSION

repo2docker:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg REPO2DOCKER_VERSION

dind:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg DIND_VERSION

jupyterhub-http-proxy:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg JUPYTERHUB_HTTP_PROXY_VERSION

jupyterhub-secret-sync:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg JUPYTERHUB_SECRET_SYNC_VERSION

jupyterhub-network-tools:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg JUPYTERHUB_NETWORK_TOOLS_VERSION

jupyterhub-singleuser-sample:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg JUPYTERHUB_SINGLEUSER_SAMPLE_VERSION

jupyterhub-image-awaiter:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg JUPYTERHUB_IMAGE_AWAITER_VERSION

jupyter-notebook:
  interruptible: true
  stage: build
  parallel:
    matrix:
      - FLAVOUR: [ "base", "minimal", "r", "scipy", "tensorflow", "datascience", "pyspark", "all-spark" ]
        NOTEBOOK: [ "notebook" ]
  script:
    - ./gitlab/build-image.sh jupyter-notebook ${DOCKER_NAMESPACE}/jupyter-${FLAVOUR}-${NOTEBOOK}:${INFRA_VERSION} \
        --build-arg JUPYTER_VERSION \
        --build-arg FLAVOUR

rshiny:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg RSHINY_VERSION

# rstudio:
#   stage: build
#   script:
#     - |
#       ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
#         --build-arg RSTUDIO_VERSION \
#         --build-arg JUPYTER_VERSION

bitnami-minio:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg BITNAMI_MINIO_VERSION

bitnami-minio-client:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg BITNAMI_MINIO_CLIENT_VERSION

bitnami-shell:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg BITNAMI_SHELL_VERSION

bitnami-metallb-controller:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg BITNAMI_METALLB_CONTROLLER_VERSION

bitnami-metallb-speaker:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg BITNAMI_METALLB_SPEAKER_VERSION

bitnami-grafana:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg BITNAMI_GRAFANA_VERSION

bitnami-grafana-image-renderer:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg BITNAMI_GRAFANA_IMAGE_RENDERER_VERSION

bitnami-consul:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg BITNAMI_CONSUL_VERSION

bitnami-nats:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg BITNAMI_NATS_VERSION

bitnami-kube-state-metrics:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg BITNAMI_KUBE_STATE_METRICS_VERSION

bitnami-metrics-server:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg BITNAMI_METRICS_SERVER_VERSION

bitnami-nginx:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg BITNAMI_NGINX_VERSION

bitnami-nginx-ingress-controller:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg BITNAMI_NGINX_INGRESS_CONTROLLER_VERSION

bitnami-keycloak:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg BITNAMI_KEYCLOAK_VERSION \
        --build-arg KEYCLOAK_THEMES_IMAGE

bitnami-keycloak16:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg BITNAMI_KEYCLOAK16_VERSION \
        --build-arg KEYCLOAK_THEMES_IMAGE

bitnami-spark:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg BITNAMI_SPARK_VERSION

bitnami-prometheus:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg BITNAMI_PROMETHEUS_VERSION

bitnami-prometheus-operator:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg BITNAMI_PROMETHEUS_OPERATOR_VERSION

bitnami-node-exporter:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg BITNAMI_NODE_EXPORTER_VERSION

bitnami-postgres-exporter:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg BITNAMI_POSTGRES_EXPORTER_VERSION

bitnami-redis:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg BITNAMI_REDIS_VERSION

bitnami-postgresql11:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg BITNAMI_POSTGRESQL11_VERSION

bitnami-postgresql12:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg BITNAMI_POSTGRESQL12_VERSION

bitnami-postgresql13:
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg BITNAMI_POSTGRESQL13_VERSION

bitnami-postgresql14:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg BITNAMI_POSTGRESQL14_VERSION

bitnami-mariadb:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg BITNAMI_MARIADB_VERSION

bitnami-mongodb:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg BITNAMI_MONGODB_VERSION

bitnami-memcached:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg BITNAMI_MEMCACHED_VERSION

bitnami-kubeapps-dashboard:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg BITNAMI_KUBEAPPS_DASHBOARD_VERSION

# Special
bitnami-kubeapps-apprepository-controller:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg BITNAMI_KUBEAPPS_APPREPOSITORY_CONTROLLER_VERSION

# Special
bitnami-kubeapps-asset-syncer:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg BITNAMI_KUBEAPPS_ASSET_SYNCER

# Special
bitnami-kubeapps-kubeops:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg BITNAMI_KUBEAPPS_KUBEOPS_VERSION

bitnami-kubeapps-assetsvc:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg BITNAMI_KUBEAPPS_ASSETSVC_VERSION

bitnami-kubeapps-apis:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg BITNAMI_KUBEAPPS_APIS_VERSION

bitnami-kubeapps-pinniped-proxy:
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg BITNAMI_KUBEAPPS_PINNIPED_PROXY_VERSION

bitnami-kube-rbac-proxy:
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg BITNAMI_KUBE_RBAC_PROXY_VERSION

bitnami-sealed-secrets-controller:
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg BITNAMI_SEALED_SECRETS_CONTROLLER_VERSION

external-secrets:
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg EXTERNAL_SECRETS_VERSION

hasura-graphql-engine:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg HASURA_GRAPHQL_VERSION

kutt:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg KUTT_VERSION

umami:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg UMAMI_VERSION

pihole:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg PIHOLE_VERSION

clickhouse-server:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg CLICKHOUSE_VERSION

clickhouse-tabix-web-client:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg TABIX_VERSION

plausible-analytics:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg PLAUSIBLE_VERSION

verdaccio:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg VERDACCIO_VERSION

strapi:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg STRAPI_VERSION

ghost:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg GHOST_VERSION

bitnami-ghost:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg BITNAMI_GHOST_VERSION

matomo:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg MATOMO_VERSION

nocodb:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg NOCODB_VERSION

metabase:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg METABASE_VERSION

sftpgo:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg SFTPGO_VERSION

hello:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg HELLO_VERSION

reloader:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg RELOADER_VERSION

configmap-reload:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg CONFIGMAP_RELOAD_VERSION

docker-registry:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg DOCKER_REGISTRY_VERSION

argocd:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg ARGOCD_VERSION \
        --build-arg ARGOCD_VAULT_PLUGIN_VERSION \
        --build-arg ARGOCD_VAULT_PLUGIN_HASH \
        --build-arg YTT_VERSION \
        --build-arg YTT_HASH

argocd-applicationset:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg ARGOCD_APPLICATIONSET_VERSION

boky-postfix:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg BOKY_POSTFIX_VERSION

cryptgeon:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg CRYPTGEON_VERSION

memcached:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg MEMCACHED_VERSION

dex:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg DEX_VERSION

redis:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg REDIS_VERSION

listmonk:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg LISTMONK_VERSION

consul:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg CONSUL_VERSION

consul-k8s-control-plane:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg CONSUL_K8S_CP_VERSION

envoy:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg ENVOY_VERSION

vault:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg VAULT_VERSION

vault-k8s:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg VAULT_K8S_VERSION

vault-csi-provider:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg VAULT_CSI_PROVIDER_VERSION

strimzi-operator:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg STRIMZI_OPERATOR_VERSION

strimzi-kafka:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg STRIMZI_OPERATOR_VERSION \
        --build-arg STRIMZI_KAFKA_VERSION

nats-operator:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg NATS_OPERATOR_VERSION

nats:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg NATS_VERSION

mosquitto:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg MOSQUITTO_VERSION

mosquitto-exporter:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg MOSQUITTO_EXPORTER_VERSION

cert-manager-controller:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg CERT_MANAGER_CONTROLLER_VERSION

cert-manager-webhook:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg CERT_MANAGER_WEBHOOK_VERSION

cert-manager-cainjector:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg CERT_MANAGER_CAINJECTOR_VERSION

cert-manager-ctl:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg CERT_MANAGER_CTL_VERSION

cert-manager-csi-driver:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg CERT_MANAGER_CSI_DRIVER_VERSION

cert-manager-webhook-pdns:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg CERT_MANAGER_WEBHOOK_PDNS_VERSION

caddy:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg CADDY_VERSION

bpftrace:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg BPFTRACE_VERSION

k8s-coredns:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg K8S_COREDNS_VERSION

k8s-pause:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg K8S_PAUSE_VERSION

storage-livenessprobe:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg LIVENESSPROBE_VERSION

storage-csi-node-driver-registrar:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg CSI_NODE_DRIVER_REGISTRAR_VERSION

storage-csi-attacher:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg CSI_ATTACHER_VERSION

storage-csi-resizer:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg CSI_RESIZER_VERSION

storage-csi-snapshotter:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg CSI_SNAPSHOTTER_VERSION

storage-csi-provisioner:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg CSI_PROVISIONER_VERSION

vmware-exporter:
  interruptible: true
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg VMWARE_EXPORTER_VERSION
