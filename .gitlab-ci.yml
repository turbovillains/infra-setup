---
variables:
  DOCKER_NAMESPACE: infra
  STACK_BASE: ubuntu:focal-20210713 # https://hub.docker.com/_/ubuntu?tab=tags&page=1&ordering=last_updated&name=focal
  BUILDER_BASE: debian:10.10-slim  # https://hub.docker.com/_/debian?tab=tags&page=1&ordering=last_updated&name=10.10
  DEBIAN_VERSION: 10.10-slim
  ALPINE_VERSION: "3.14.0" # https://hub.docker.com/_/alpine?tab=tags&page=1&ordering=last_updated&name=3.14
  GOLANG_VERSION: 1.16.6-alpine3.14 # https://hub.docker.com/_/golang?tab=tags&page=1&ordering=last_updated&name=1.16
  ACTIONS_RUNNER_VERSION: 2.278.0 # https://github.com/actions/runner/releases
  GITLAB_RUNNER_VERSION: alpine-v14.1.0 # https://hub.docker.com/r/gitlab/gitlab-runner/tags?page=1&ordering=last_updated&name=alpine
  GITLAB_VERSION: 14.1.2-ce.0 # https://hub.docker.com/r/gitlab/gitlab-ce/tags?page=1&ordering=last_updated&name=14.1
  FREERADIUS_VERSION: 3.0.23-alpine # https://hub.docker.com/r/freeradius/freeradius-server/tags?page=1&ordering=last_updated&name=3
  TRAEFIK_VERSION: "v2.4.11" # https://hub.docker.com/_/traefik?tab=tags&page=1&ordering=last_updated&name=2.4
  MKDOCS_VERSION: "7.1.10" # https://hub.docker.com/r/squidfunk/mkdocs-material/tags?page=1&ordering=last_updated
  UNBOUND_BASE: debian:10.10-slim # https://hub.docker.com/_/debian?tab=tags&page=1&ordering=last_updated&name=10.8
  POWERDNS_BASE: debian:10.10-slim # https://hub.docker.com/_/debian?tab=tags&page=1&ordering=last_updated&name=10.8
  POWERDNS_VERSION: "4.5.0" # https://www.powerdns.com/downloads.html
  LATEX_BASE: ubuntu:focal-20210416 # https://hub.docker.com/_/ubuntu?tab=tags&page=1&ordering=last_updated&name=focal
  KEYCLOAK_VERSION: "15.0.1" # https://quay.io/repository/keycloak/keycloak?tag=latest&tab=tags
  POSTGRES_VERSION: "13.3-buster" # https://hub.docker.com/_/postgres
  JIRA_VERSION: "8.18.0" # https://hub.docker.com/r/atlassian/jira-software/tags?page=1&ordering=last_updated&name=8.15
  MAILSERVER_VERSION: "release-v7.2.0" # https://hub.docker.com/r/tvial/docker-mailserver/tags?page=1&ordering=last_updated
  NEXTCLOUD_VERSION: "22.1.0-apache" # https://hub.docker.com/_/nextcloud
  SPEEDTEST_VERSION: v1.1.3 # https://github.com/librespeed/speedtest-go/releases
  HAPROXY_VERSION: "2.4.2" # https://hub.docker.com/_/haproxy?tab=tags&page=1&ordering=last_updated
  MINIO_VERSION: RELEASE.2021-07-12T02-44-53Z # https://github.com/minio/minio/releases
  ETCD_VERSION: v3.5.0 # https://quay.io/repository/coreos/etcd?tag=latest&tab=tags
  PROMETHEUS_VERSION: v2.28.1 # https://prometheus.io/download/
  ALERTMANAGER_VERSION: v0.22.2
  BLACKBOX_EXPORTER_VERSION: v0.19.0
  CONSUL_EXPORTER_VERSION: v0.7.1
  NODE_EXPORTER_VERSION: v1.1.2
  PUSHGATEWAY_VERSION: v1.4.1
  SNMP_EXPORTER_VERSION: v0.20.0 # https://github.com/prometheus/snmp_exporter/releases
  IPMI_EXPORTER_VERSION: v1.4.0 # https://github.com/soundcloud/ipmi_exporter/releases
  GRAFANA_VERSION: "8.1.0" # https://hub.docker.com/r/grafana/grafana/tags?page=1&ordering=last_updated
  M3DBNODE_VERSION: v1.1.0 # https://quay.io/repository/m3db/m3dbnode?tag=latest&tab=tags
  M3COORDINATOR_VERSION: v1.1.0
  PROMETHEUS_ES_EXPORTER_VERSION: "0.14.0"  # https://github.com/braedon/prometheus-es-exporter/releases
  SSL_EXPORTER_VERSION: v2.2.1 # https://github.com/ribbybibby/ssl_exporter/releases
  CADVISOR_VERSION: v0.40.0 # https://github.com/google/cadvisor/releases
  KARMA_VERSION: v0.87 # https://github.com/prymitive/karma/releases
  LDAP_EXPORTER_VERSION: 0.0.4-1-dev
  ELASTICSEARCH_VERSION: "7.13.3" # https://www.elastic.co/guide/en/elasticsearch/reference/current/es-release-notes.html
  LOGSTASH_VERSION: "7.13.3"
  KIBANA_VERSION: "7.13.3"
  CORTEX_VERSION: v1.9.0 # https://github.com/cortexproject/cortex/releases
  ALERTA_VERSION: "8.5.0" # https://hub.docker.com/r/alerta/alerta-web/tags?page=1&ordering=last_updated
  MONGO_VERSION: 4.4.6-bionic # https://hub.docker.com/_/mongo
  WORDPRESS_VERSION: 5.7.2-apache   # https://hub.docker.com/_/wordpress?tab=description&page=1&ordering=last_updated
  PGADMIN_VERSION: "5.5"   # https://hub.docker.com/r/dpage/pgadmin4/tags?page=1&ordering=last_updated
  MYSQL_VERSION: "8.0.25" # https://registry.hub.docker.com/_/mysql/
  MARIADB_VERSION: 10.6.3-focal # https://hub.docker.com/_/mariadb
  HTTPBIN_VERSION: v2.2.0 # https://hub.docker.com/r/mccutchen/go-httpbin/tags?page=1&ordering=last_updated
  OAUTH2_PROXY_VERSION: v7.1.3-amd64 # https://quay.io/repository/oauth2-proxy/oauth2-proxy?tab=tags
  GRAV_VERSION: 1.7.17
  BUILDPACKSIO_LIFECYCLE_VERSION: 0.11.4 # https://hub.docker.com/r/buildpacksio/lifecycle/tags?page=1&ordering=last_updated&name=0.
  HEROKU_PROCFILE_CNB_VERSION: 0.6.2 # https://github.com/heroku/procfile-cnb
  BINDERHUB_VERSION: 0.2.0-n609.h195837f
  BINDERHUB_IMAGE_CLEANER_VERSION: 0.2.0-n496.h988aca0
  PIHOLE_VERSION: v5.8.1 # https://hub.docker.com/r/pihole/pihole/tags?page=1&ordering=last_updated
  CLICKHOUSE_VERSION: 21.7.3.14-alpine # https://hub.docker.com/r/yandex/clickhouse-server/tags?page=1&ordering=last_updated
  TABIX_VERSION: stable
  PLAUSIBLE_VERSION: v1.3.0 # https://hub.docker.com/r/plausible/analytics/tags?page=1&ordering=last_updated
  VERDACCIO_VERSION: "5.1.2" # https://hub.docker.com/r/verdaccio/verdaccio/tags?page=1&ordering=last_updated
  STRAPI_VERSION: 3.6.5-alpine # https://hub.docker.com/r/strapi/strapi/tags?page=1&ordering=last_updated
  GHOST_VERSION: 4.9.4 # https://hub.docker.com/_/ghost?tab=tags&page=1&ordering=last_updated
  BITNAMI_GHOST_VERSION: 4.9.4-debian-10-r2 # https://hub.docker.com/r/bitnami/ghost/tags?page=1&ordering=last_updated
  MATOMO_VERSION: 4.3.1-apache # https://hub.docker.com/_/matomo?tab=tags&page=1&ordering=last_updated
  NOCODB_VERSION: 0.10.4 # https://hub.docker.com/r/nocodb/nocodb/tags?page=1&ordering=last_updated
  JUPYTERHUB_VERSION: 1.0.1 # https://hub.docker.com/r/jupyterhub/k8s-hub/tags?page=1&ordering=last_updated
  JUPYTERHUB_SECRET_SYNC_VERSION: 1.0.1 # https://hub.docker.com/_/docker?tab=description&page=1&ordering=last_updated
  JUPYTERHUB_NETWORK_TOOLS_VERSION: 1.0.1 # https://hub.docker.com/r/jupyterhub/k8s-network-tools/tags?page=1&ordering=last_updated
  JUPYTERHUB_IMAGE_AWAITER_VERSION: 1.0.1 # https://hub.docker.com/r/jupyterhub/k8s-image-awaiter/tags?page=1&ordering=last_updated
  JUPYTERHUB_SINGLEUSER_SAMPLE_VERSION: 1.0.1 # https://hub.docker.com/r/jupyterhub/k8s-singleuser-sample/tags?page=1&ordering=last_updated
  JUPYTERHUB_HTTP_PROXY_VERSION: 4.4.0 # https://hub.docker.com/r/jupyterhub/configurable-http-proxy/tags?page=1&ordering=last_updated
  REPO2DOCKER_VERSION: 2021.03.0-68.gdf65135 # https://hub.docker.com/r/jupyter/repo2docker/tags?page=1&ordering=last_updated
  DIND_VERSION: 20.10.7-dind # https://hub.docker.com/_/docker?tab=description&page=1&ordering=last_updated
  JUPYTER_VERSION: hub-1.4.1 # https://hub.docker.com/r/jupyter/all-spark-notebook/tags?page=1&ordering=last_updated
  RSHINY_VERSION: 4.1.0 # https://hub.docker.com/r/rocker/shiny/tags?page=1&ordering=last_updated
  RSTUDIO_VERSION: 1.4.1717 # https://www.rstudio.com/products/rstudio/download-server/
  # CLOUDIDE_BASE: ubuntu:focal-20210713 # https://hub.docker.com/_/ubuntu?tab=tags&page=1&ordering=last_updated&name=focal
  CAPROVER_VERSION: 1.9.0 # https://hub.docker.com/r/caprover/caprover/tags?page=1&ordering=last_updated
  UMAMI_VERSION: postgresql-0653570 # https://github.com/mikecao/umami/pkgs/container/umami
  BITNAMI_KEYCLOAK_VERSION: 14.0.0-debian-10-r5 # https://hub.docker.com/r/bitnami/keycloak/tags?page=1&ordering=last_updated&name=13
  BITNAMI_SPARK_VERSION: 3.1.2-debian-10-r31 # https://hub.docker.com/r/bitnami/spark/tags?page=1&ordering=last_updated
  BITNAMI_PROMETHEUS_VERSION: 2.28.1-debian-10-r11 # https://hub.docker.com/r/bitnami/prometheus/tags?page=1&ordering=last_updated
  BITNAMI_PROMETHEUS_OPERATOR_VERSION: 0.48.1-debian-10-r25 # https://hub.docker.com/r/bitnami/prometheus-operator/tags?page=1&ordering=last_updated
  BITNAMI_REDIS_VERSION: 6.2.4-debian-10-r32 # https://hub.docker.com/r/bitnami/redis/tags?page=1&ordering=last_updated&name=6.2
  BITNAMI_POSTGRESQL11_VERSION: 11.12.0-debian-10-r52 # https://hub.docker.com/r/bitnami/postgresql/tags?page=1&ordering=last_updated&name=11.
  BITNAMI_POSTGRESQL13_VERSION: 13.3.0-debian-10-r55 # https://hub.docker.com/r/bitnami/postgresql/tags?page=1&ordering=last_updated&name=13.
  BITNAMI_MARIADB_VERSION: 10.5.11-debian-10-r16 # https://hub.docker.com/r/bitnami/mariadb/tags?page=1&ordering=last_updated&name=10.5
  BITNAMI_MONGODB_VERSION: 4.4.6-debian-10-r44 # https://hub.docker.com/r/bitnami/mongodb/tags?page=1&ordering=last_updated&name=4.4
  BITNAMI_NGINX_INGRESS_CONTROLLER_VERSION: 0.48.1-debian-10-r0 # https://hub.docker.com/r/bitnami/nginx-ingress-controller/tags?page=1&ordering=last_updated
  BITNAMI_NGINX_VERSION: 1.21.1-debian-10-r7 # https://hub.docker.com/r/bitnami/nginx/tags?page=1&ordering=last_updated&name=1.2
  BITNAMI_MINIO_VERSION: 2021.6.17-debian-10-r20 # https://hub.docker.com/r/bitnami/minio/tags?page=1&ordering=last_updated
  BITNAMI_MINIO_CLIENT_VERSION: 2021.6.13-debian-10-r29 # https://hub.docker.com/r/bitnami/minio-client/tags?page=1&ordering=last_updated
  BITNAMI_SHELL_VERSION: 10-debian-10-r133 # https://hub.docker.com/r/bitnami/bitnami-shell/tags?page=1&ordering=last_updated
  BITNAMI_METALLB_CONTROLLER_VERSION: 0.10.2-debian-10-r28 # https://hub.docker.com/r/bitnami/metallb-controller/tags?page=1&ordering=last_updated
  BITNAMI_METALLB_SPEAKER_VERSION: 0.10.2-debian-10-r31 # https://hub.docker.com/r/bitnami/metallb-speaker/tags?page=1&ordering=last_updated
  BITNAMI_GRAFANA_VERSION: 8.1.0-debian-10-r1 # https://hub.docker.com/r/bitnami/grafana/tags?page=1&ordering=last_updated&name=8
  MINIO_CONSOLE_VERSION: v0.7.5 # https://hub.docker.com/r/minio/console/tags?page=1&ordering=last_updated
  HASURA_VERSION: v2.0.2 # https://hub.docker.com/r/hasura/graphql-engine/tags?page=1&ordering=last_updated
  KUTT_VERSION: 2.7.2 # https://hub.docker.com/r/kutt/kutt/tags?page=1&ordering=last_updated
  SFTPGO_VERSION: v2.1.0 # https://hub.docker.com/r/drakkan/sftpgo/tags?page=1&ordering=last_updated
  HELLO_VERSION: 1.10.0 # https://hub.docker.com/r/paulbouwer/hello-kubernetes/tags?page=1&ordering=last_updated
  RELOADER_VERSION: v0.0.97 # https://hub.docker.com/r/stakater/reloader/tags?page=1&ordering=last_updated&name=v0.
  SQUID_VERSION: 4.6-1+deb10u6 # https://packages.debian.org/buster/squid
  DOCKER_REGISTRY_VERSION: 2.7.1 # https://hub.docker.com/_/registry?tab=tags&page=1&ordering=last_updated
  DEX_VERSION: v2.30.0 # https://hub.docker.com/r/dexidp/dex/tags?page=1&ordering=last_updated
  ARGOCD_VERSION: v2.1.0-rc2 # https://quay.io/repository/argoproj/argocd?tag=latest&tab=tags
  REDIS_VERSION: 6.2.5-buster # https://hub.docker.com/_/redis?tab=tags&page=1&ordering=last_updated

stages:
  - scratch
  - preflight
  - buildpacks
  - build

before_script:
  - |
    export INFRA_VERSION=${CI_COMMIT_TAG:-${CI_COMMIT_SHORT_SHA}}
    export KEYCLOAK_THEMES_IMAGE=${DOCKER_HUB}/${DOCKER_NAMESPACE}/keycloak-themes:${INFRA_VERSION}
    echo "Infra: ${INFRA_VERSION}"

import-images:
  stage: scratch
  script:
    - ./gitlab/${CI_JOB_NAME}.sh

noroutine-ca:
  stage: scratch
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION}

keycloak-themes:
  stage: scratch
  script:
    - |
      git clone https://readonly:${INFRA_READONLY_TOKEN}@git.nrtn.dev/infra/keycloak-themes.git
      cd keycloak-themes
      pack build --clear-cache --publish ${KEYCLOAK_THEMES_IMAGE}

ingress-default-backend:
  stage: scratch
  script:
    - |
      git clone https://readonly:${INFRA_READONLY_TOKEN}@git.nrtn.dev/infra/ingress-default-backend.git
      cd ingress-default-backend
      pack build --clear-cache --publish ${DOCKER_HUB}/${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION}

heroku-20:
  stage: preflight
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg STACK_BASE \
        --build-arg INFRA_VERSION
      ./gitlab/build-image.sh ${CI_JOB_NAME}-build ${DOCKER_NAMESPACE}/${CI_JOB_NAME}-build:${INFRA_VERSION} \
        --build-arg STACK_IMAGE=${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION}

builder:
  stage: build
  script:
    - ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg BUILDER_BASE \
        --build-arg BUILDPACKS_VERSION=${INFRA_VERSION} \
        --build-arg GIT_SERVER_HOST=${CI_SERVER_HOST} \
        --build-arg SSH_PRIVATE_KEY \
        --build-arg HOST_DOCKER_GID=$(stat -t /var/run/docker.sock | awk '{ print $6 }') \
        --build-arg ACTIONS_RUNNER_VERSION

heroku-buildpacks:
  stage: buildpacks
  script:
    - cd ${CI_JOB_NAME}
    - |
      # Fetch upstream buildpack sources
      # curl -sLo- https://github.com/noroutine/buildpacks-nodejs/archive/refs/heads/main.tar.gz | tar zx buildpacks-nodejs-main/{common,buildpacks}
      curl -sLo- https://github.com/heroku/buildpacks-nodejs/archive/refs/heads/main.tar.gz | tar zx buildpacks-nodejs-main/{common,buildpacks}
      curl -sLo- https://github.com/heroku/buildpacks-jvm/archive/refs/heads/main.tar.gz | tar zx buildpacks-jvm-main/{common,buildpacks}

    - |
      # Release upstream buildpacks
      for buildpack_id in heroku/nodejs-engine heroku/nodejs-function-invoker heroku/nodejs-npm heroku/nodejs-typescript heroku/nodejs-yarn; do \
        REQUESTED_BUILDPACK_ID=${buildpack_id} ./release-buildpack.sh; \
      done

    - |
      # Release meta-buildpacks
      for buildpack_id in heroku/nodejs heroku/nodejs-function; do \
        REQUESTED_BUILDPACK_ID=${buildpack_id} ./release-buildpack.sh; \
      done
    
    - |
      # Release builder
      make publish \
        BUILDPACKS_VERSION=${INFRA_VERSION} \
        STACK=infra/heroku-20 \
        STACK_VERSION=${INFRA_VERSION}

buildpacksio-lifecycle:
  stage: buildpacks
  script:
    - ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
      --build-arg BUILDPACKSIO_LIFECYCLE_VERSION \
      --build-arg INFRA_VERSION

gitlab-runner:
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg GITLAB_RUNNER_VERSION \
        --build-arg INFRA_VERSION

gitlab:
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg GITLAB_VERSION \
        --build-arg INFRA_VERSION

radius:
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg FREERADIUS_VERSION

mkdocs:
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg MKDOCS_VERSION

traefik:
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg TRAEFIK_VERSION

# latex:
#   stage: build
#   script:
#     - |
#       ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
#         --build-arg LATEX_BASE

powerdns:
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg POWERDNS_BASE

unbound:
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg UNBOUND_BASE

keycloak:
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg KEYCLOAK_VERSION \
        --build-arg KEYCLOAK_THEMES_IMAGE

postgres:
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg POSTGRES_VERSION

jira:
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg JIRA_VERSION

mailserver:
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg MAILSERVER_VERSION

nextcloud:
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg NEXTCLOUD_VERSION

speedtest:
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg SPEEDTEST_VERSION

haproxy:
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg HAPROXY_VERSION

minio:
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg MINIO_VERSION

minio-console:
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg MINIO_CONSOLE_VERSION \
        --build-arg INFRA_VERSION

prometheus:
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg PROMETHEUS_VERSION

karma:
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg KARMA_VERSION

alertmanager:
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg ALERTMANAGER_VERSION

pushgateway:
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg PUSHGATEWAY_VERSION

blackbox-exporter:
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg BLACKBOX_EXPORTER_VERSION

snmp-exporter:
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg SNMP_EXPORTER_VERSION

ipmi-exporter:
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg IPMI_EXPORTER_VERSION \
        --build-arg GOLANG_VERSION \
        --build-arg DEBIAN_VERSION

cadvisor:
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg CADVISOR_VERSION

node-exporter:
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg NODE_EXPORTER_VERSION

consul-exporter:
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg CONSUL_EXPORTER_VERSION

prometheus-es-exporter:
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg PROMETHEUS_ES_EXPORTER_VERSION

ssl-exporter:
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg SSL_EXPORTER_VERSION

rsyslog:
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg DEBIAN_VERSION

squid:
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg DEBIAN_VERSION \
        --build-arg INFRA_VERSION \
        --build-arg SQUID_VERSION

ioping-exporter:
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg GOLANG_VERSION \
        --build-arg ALPINE_VERSION

ldap-exporter:
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg LDAP_EXPORTER_VERSION

grafana:
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg GRAFANA_VERSION

m3dbnode:
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg M3DBNODE_VERSION

m3coordinator:
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg M3COORDINATOR_VERSION

cortex:
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg CORTEX_VERSION

elasticsearch:
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg ELASTICSEARCH_VERSION

logstash:
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg LOGSTASH_VERSION

kibana:
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg KIBANA_VERSION
mongo:
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg MONGO_VERSION

alerta:
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg ALERTA_VERSION

wordpress:
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg WORDPRESS_VERSION

pgadmin:
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg PGADMIN_VERSION

mysql:
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg MYSQL_VERSION

mariadb:
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg MARIADB_VERSION

httpbin:
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg HTTPBIN_VERSION

oauth2-proxy:
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg OAUTH2_PROXY_VERSION

grav:
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg GRAV_VERSION

caprover:
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg CAPROVER_VERSION \
        --build-arg INFRA_VERSION

binderhub:
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg BINDERHUB_VERSION \
        --build-arg INFRA_VERSION

binderhub-image-cleaner:
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg BINDERHUB_IMAGE_CLEANER_VERSION \
        --build-arg INFRA_VERSION

jupyterhub:
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg JUPYTERHUB_VERSION \
        --build-arg INFRA_VERSION

repo2docker:
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg REPO2DOCKER_VERSION \
        --build-arg INFRA_VERSION

dind:
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg DIND_VERSION \
        --build-arg INFRA_VERSION

jupyterhub-http-proxy:
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg JUPYTERHUB_HTTP_PROXY_VERSION \
        --build-arg INFRA_VERSION

jupyterhub-secret-sync:
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg JUPYTERHUB_SECRET_SYNC_VERSION \
        --build-arg INFRA_VERSION

jupyterhub-network-tools:
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg JUPYTERHUB_NETWORK_TOOLS_VERSION \
        --build-arg INFRA_VERSION

jupyterhub-singleuser-sample:
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg JUPYTERHUB_SINGLEUSER_SAMPLE_VERSION \
        --build-arg INFRA_VERSION

jupyterhub-image-awaiter:
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg JUPYTERHUB_IMAGE_AWAITER_VERSION \
        --build-arg INFRA_VERSION

jupyter-notebook:
  stage: build
  parallel:
    matrix:
      - FLAVOUR: [ "base", "minimal", "r", "scipy", "tensorflow", "datascience", "pyspark", "all-spark" ]
        NOTEBOOK: [ "notebook" ]
  script:
    - ./gitlab/build-image.sh jupyter-notebook ${DOCKER_NAMESPACE}/jupyter-${FLAVOUR}-${NOTEBOOK}:${INFRA_VERSION} \
        --build-arg JUPYTER_VERSION \
        --build-arg FLAVOUR \
        --build-arg INFRA_VERSION

rshiny:
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg RSHINY_VERSION \
        --build-arg INFRA_VERSION

rstudio:
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg RSTUDIO_VERSION \
        --build-arg JUPYTER_VERSION \
        --build-arg INFRA_VERSION

# cloudide:
#   stage: build
#   script:
#     - |
#       ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
#         --build-arg CLOUDIDE_BASE \
#         --build-arg INFRA_VERSION

bitnami-minio:
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg BITNAMI_MINIO_VERSION \
        --build-arg INFRA_VERSION

bitnami-minio-client:
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg BITNAMI_MINIO_CLIENT_VERSION \
        --build-arg INFRA_VERSION

bitnami-shell:
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg BITNAMI_SHELL_VERSION \
        --build-arg INFRA_VERSION

bitnami-metallb-controller:
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg BITNAMI_METALLB_CONTROLLER_VERSION \
        --build-arg INFRA_VERSION

bitnami-metallb-speaker:
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg BITNAMI_METALLB_SPEAKER_VERSION \
        --build-arg INFRA_VERSION

bitnami-grafana:
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg BITNAMI_GRAFANA_VERSION \
        --build-arg INFRA_VERSION

bitnami-nginx:
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg BITNAMI_NGINX_VERSION \
        --build-arg INFRA_VERSION

bitnami-nginx-ingress-controller:
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg BITNAMI_NGINX_INGRESS_CONTROLLER_VERSION \
        --build-arg INFRA_VERSION

bitnami-keycloak:
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg BITNAMI_KEYCLOAK_VERSION \
        --build-arg KEYCLOAK_THEMES_IMAGE \
        --build-arg INFRA_VERSION

bitnami-spark:
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg BITNAMI_SPARK_VERSION \
        --build-arg INFRA_VERSION

bitnami-prometheus:
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg BITNAMI_PROMETHEUS_VERSION \
        --build-arg INFRA_VERSION

bitnami-prometheus-operator:
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg BITNAMI_PROMETHEUS_OPERATOR_VERSION \
        --build-arg INFRA_VERSION

bitnami-redis:
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg BITNAMI_REDIS_VERSION \
        --build-arg INFRA_VERSION

bitnami-postgresql11:
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg BITNAMI_POSTGRESQL11_VERSION \
        --build-arg INFRA_VERSION

bitnami-postgresql13:
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg BITNAMI_POSTGRESQL13_VERSION \
        --build-arg INFRA_VERSION

bitnami-mariadb:
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg BITNAMI_MARIADB_VERSION \
        --build-arg INFRA_VERSION

bitnami-mongodb:
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg BITNAMI_MONGODB_VERSION \
        --build-arg INFRA_VERSION

hasura-graphql-engine:
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg HASURA_VERSION \
        --build-arg INFRA_VERSION

kutt:
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg KUTT_VERSION \
        --build-arg INFRA_VERSION

umami:
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg UMAMI_VERSION \
        --build-arg INFRA_VERSION

pihole:
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg PIHOLE_VERSION

clickhouse-server:
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg CLICKHOUSE_VERSION

clickhouse-tabix-web-client:
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg TABIX_VERSION

plausible-analytics:
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg PLAUSIBLE_VERSION

verdaccio:
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg VERDACCIO_VERSION

strapi:
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg STRAPI_VERSION \
        --build-arg INFRA_VERSION

ghost:
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg GHOST_VERSION \
        --build-arg INFRA_VERSION

bitnami-ghost:
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg BITNAMI_GHOST_VERSION \
        --build-arg INFRA_VERSION

matomo:
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg MATOMO_VERSION

nocodb:
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg NOCODB_VERSION

sftpgo:
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg SFTPGO_VERSION \
        --build-arg INFRA_VERSION

hello:
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg HELLO_VERSION \
        --build-arg INFRA_VERSION

reloader:
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg RELOADER_VERSION \
        --build-arg INFRA_VERSION

docker-registry:
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg DOCKER_REGISTRY_VERSION \
        --build-arg INFRA_VERSION

argocd:
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg ARGOCD_VERSION \
        --build-arg INFRA_VERSION

dex:
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg DEX_VERSION \
        --build-arg INFRA_VERSION

redis:
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg REDIS_VERSION \
        --build-arg INFRA_VERSION