include: variables.yml

stages:
  - scratch
  - archive
  - base
  - stacks
  - buildpacks
  - prebuild
  - build
  - build2

before_script:
  - |
    export INFRA_VERSION=${CI_COMMIT_TAG:-${CI_COMMIT_SHORT_SHA}}
    export KEYCLOAK_THEMES_IMAGE=${DOCKER_HUB}/${DOCKER_NAMESPACE}/keycloak-themes:${INFRA_VERSION}
    export HOST_DOCKER_GID=$(stat -t /var/run/docker.sock | awk '{ print $6 }')
    echo "Infra: ${INFRA_VERSION}"
    [[ -f gitlab/env.sh ]] && source gitlab/env.sh

import-images:
  interruptible: true
  retry: 2
  stage: scratch
  script:
    - ./gitlab/${CI_JOB_NAME}.sh

.archive-images:
  interruptible: true
  rules:
    - if: $CI_COMMIT_TAG
  script:
    - |
      echo "Archiving ${DOCKER_HUB}/${BASE}:${!VERSION}"
      docker pull ${DOCKER_HUB}/${BASE}:${!VERSION}
      archive_image ${DOCKER_HUB}/${BASE}:${!VERSION} ${INFRA_VERSION}

archive-images1:
  extends: .archive-images
  stage: archive
  parallel:
    matrix:
      - BASE:
          - debian
        VERSION:
          - DEBIAN_VERSION
      - BASE:
          - ubuntu
        VERSION:
          - UBUNTU_JAMMY_VERSION
          - UBUNTU_FOCAL_VERSION
      - BASE:
          - busybox
        VERSION:
          - BUSYBOX_VERSION
      - BASE:
          - alpine
        VERSION:
          - ALPINE_VERSION
      - BASE:
          - buildpack-deps
        VERSION:
          - BUILDPACK_DEPS_FOCAL_VERSION
          - BUILDPACK_DEPS_JAMMY_VERSION
          - BUILDPACK_DEPS_BIONIC_VERSION
      - BASE:
          - python
        VERSION:
          - PYTHON_VERSION
          - PYTHON_SLIM_VERSION
      - BASE:
          - locustio/locust
        VERSION:
          - LOCUST_VERSION
      - BASE:
          - php
        VERSION:
          - PHP_VERSION
      - BASE:
          - golang
        VERSION:
          - GOLANG_VERSION
      - BASE:
          - traefik
        VERSION:
          - TRAEFIK_VERSION
      - BASE:
          - sonatype/nexus3
        VERSION:
          - NEXUS_VERSION
      - BASE:
          - squidfunk/mkdocs-material
        VERSION:
          - MKDOCS_VERSION
      - BASE:
          - freeradius/freeradius-server
        VERSION:
          - FREERADIUS_VERSION
      - REGISTRY:
          - quay.io
        BASE:
          - keycloak/keycloak
        VERSION:
          - KEYCLOAK_VERSION
      - BASE:
          - postgres
        VERSION:
          - POSTGRES_VERSION
      - BASE:
          - atlassian/jira-software
        VERSION:
          - JIRA_VERSION
      - BASE:
          - nextcloud
        VERSION:
          - NEXTCLOUD_VERSION
      - BASE:
          - haproxytech/haproxy-debian
        VERSION:
          - HAPROXY_VERSION
      - BASE:
          - minio/minio
        VERSION:
          - MINIO_VERSION
      - REGISTRY:
          - quay.io
        BASE:
          - coreos/etcd
        VERSION:
          - ETCD_VERSION
      - BASE:
          - prometheus-operator/prometheus-operator
          - prometheus-operator/prometheus-config-reloader
        VERSION:
          - PROMETHEUS_OPERATOR_VERSION
      - BASE:
          - prometheus/prometheus
        VERSION:
          - PROMETHEUS_VERSION
      - BASE:
          - prometheus/alertmanager
        VERSION:
          - ALERTMANAGER_VERSION
      - BASE:
          - prometheus/node-exporter
        VERSION:
          - NODE_EXPORTER_VERSION
      - BASE:
          - prometheus/consul-exporter
        VERSION:
          - CONSUL_EXPORTER_VERSION
      - BASE:
          - prometheus/blackbox-exporter
        VERSION:
          - BLACKBOX_EXPORTER_VERSION
      - BASE:
          - prometheus/snmp-exporter
        VERSION:
          - SNMP_EXPORTER_VERSION
      - BASE:
          - prometheus/pushgateway
        VERSION:
          - PUSHGATEWAY_VERSION
      - BASE:
          - grafana/grafana
        VERSION:
          - GRAFANA_VERSION
      - BASE:
          - grafana/loki
        VERSION:
          - LOKI_VERSION
      - BASE:
          - grafana/loki-canary
        VERSION:
          - LOKI_VERSION
      - BASE:
          - grafana/promtail
        VERSION:
          - PROMTAIL_VERSION
      - BASE:
          - nginxinc/nginx-unprivileged
        VERSION:
          - NGINX_VERSION
          - LOKI_GATEWAY_NGINX_VERSION
      - BASE:
          - httpd
        VERSION:
          - HTTPD_VERSION
      - BASE:
          - tomcat
        VERSION:
          - TOMCAT_VERSION
      - REGISTRY:
          - quay.io
        BASE:
          - m3db/m3coordinator
        VERSION:
          - M3COORDINATOR_VERSION
      - REGISTRY:
          - quay.io
        BASE:
          - m3db/m3dbnode
        VERSION:
          - M3DBNODE_VERSION
      - BASE:
          - braedon/prometheus-es-exporter
        VERSION:
          - PROMETHEUS_ES_EXPORTER_VERSION
      - BASE:
          - ribbybibby/ssl-exporter
        VERSION:
          - SSL_EXPORTER_VERSION
      - REGISTRY:
          - gcr.io
        BASE:
          - cadvisor/cadvisor
        VERSION:
          - CADVISOR_VERSION
      - REGISTRY:
          - ghcr.io
        BASE:
          - prymitive/karma
        VERSION:
          - KARMA_VERSION
      - REGISTRY:
          - quay.io
        BASE:
          - cortexproject/cortex
        VERSION:
          - CORTEX_VERSION
      - REGISTRY:
          - docker.elastic.co
        BASE:
          - elasticsearch/elasticsearch
        VERSION:
          - ELASTICSEARCH_VERSION
      - REGISTRY:
          - docker.elastic.co
        BASE:
          - logstash/logstash
        VERSION:
          - LOGSTASH_VERSION
      - REGISTRY:
          - docker.elastic.co
        BASE:
          - kibana/kibana
        VERSION:
          - KIBANA_VERSION
      - BASE:
          - alerta/alerta-web
        VERSION:
          - ALERTA_VERSION
      - BASE:
          - mongo
        VERSION:
          - MONGO_VERSION
      - BASE:
          - wordpress
        VERSION:
          - WORDPRESS_VERSION
      - BASE:
          - dpage/pgadmin4
        VERSION:
          - PGADMIN_VERSION
      - BASE:
          - mysql
        VERSION:
          - MYSQL_VERSION
      - BASE:
          - mariadb
        VERSION:
          - MARIADB_VERSION
      - BASE:
          - mccutchen/go-httpbin
        VERSION:
          - HTTPBIN_VERSION
      - REGISTRY:
          - quay.io
        BASE:
          - oauth2-proxy/oauth2-proxy
        VERSION:
          - OAUTH2_PROXY_VERSION
      - BASE:
          - buildpacksio/lifecycle
        VERSION:
          - BUILDPACKSIO_LIFECYCLE_VERSION
      - BASE:
          - gitlab/gitlab-runner
        VERSION:
          - GITLAB_RUNNER_VERSION
      - BASE:
          - gitlab/gitlab-ce
        VERSION:
          - GITLAB_VERSION
      - REGISTRY:
          - registry.gitlab.com
        BASE:
          - gitlab-org/cluster-integration/auto-build-image
        VERSION:
          - GITLAB_AUTO_BUILD_VERSION
      - REGISTRY:
          - registry.gitlab.com
        BASE:
          - gitlab-org/cluster-integration/auto-deploy-image
        VERSION:
          - GITLAB_AUTO_DEPLOY_VERSION
      - REGISTRY:
          - registry.gitlab.com
        BASE:
          - gitlab-org/cluster-integration/gitlab-agent/agentk
        VERSION:
          - GITLAB_AGENTK_VERSION
      - REGISTRY:
          - registry.gitlab.com
        BASE:
          - gitlab-org/cluster-integration/cluster-applications
        VERSION:
          - GITLAB_CLUSTER_APPLICATIONS_VERSION
      - BASE:
          - summerwind/actions-runner-controller
        VERSION:
          - ACTIONS_RUNNER_CONTROLLER_VERSION
      - BASE:
          - summerwind/actions-runner
        VERSION:
          - ACTIONS_RUNNER_IMAGE_VERSION
      - BASE:
          - summerwind/actions-runner-dind
        VERSION:
          - ACTIONS_RUNNER_IMAGE_VERSION
      - REGISTRY:
          - quay.io
        BASE:
          - brancz/kube-rbac-proxy
        VERSION:
          - KUBE_RBAC_PROXY_VERSION
      - BASE:
          - jupyterhub/k8s-image-cleaner
        VERSION:
          - BINDERHUB_IMAGE_CLEANER_VERSION
      - BASE:
          - noroutine/k8s-binderhub
        VERSION:
          - BINDERHUB_VERSION
      - BASE:
          - jupyterhub/k8s-hub
        VERSION:
          - JUPYTERHUB_VERSION
      - BASE:
          - jupyterhub/k8s-secret-sync
        VERSION:
          - JUPYTERHUB_SECRET_SYNC_VERSION
      - BASE:
          - jupyterhub/k8s-network-tools
        VERSION:
          - JUPYTERHUB_NETWORK_TOOLS_VERSION
      - BASE:
          - jupyterhub/k8s-image-awaiter
        VERSION:
          - JUPYTERHUB_IMAGE_AWAITER_VERSION
      - BASE:
          - jupyterhub/k8s-singleuser-sample
        VERSION:
          - JUPYTERHUB_SINGLEUSER_SAMPLE_VERSION
      - BASE:
          - jupyterhub/configurable-http-proxy
        VERSION:
          - JUPYTERHUB_HTTP_PROXY_VERSION
      - REGISTRY:
          - registry.k8s.io
        BASE:
          - kube-scheduler
        VERSION:
          - JUPYTERHUB_SCHEDULER_VERSION
      - REGISTRY:
          - registry.k8s.io
        BASE:
          - pause
        VERSION:
          - K8S_PAUSE_VERSION
      - BASE:
          - pause
        VERSION:
          - JUPYTERHUB_PAUSE_VERSION
      - REGISTRY:
          - quay.io
        BASE:
          - noroutine/repo2docker
        VERSION:
          - REPO2DOCKER_VERSION
      - BASE:
          - pihole/pihole
        VERSION:
          - PIHOLE_VERSION
      - BASE:
          - yandex/clickhouse-server
        VERSION:
          - CLICKHOUSE_VERSION
      - BASE:
          - spoonest/clickhouse-tabix-web-client
        VERSION:
          - TABIX_VERSION
      - BASE:
          - plausible/analytics
        VERSION:
          - PLAUSIBLE_VERSION
      - BASE:
          - verdaccio/verdaccio
        VERSION:
          - VERDACCIO_VERSION
      - BASE:
          - strapi/strapi
        VERSION:
          - STRAPI_VERSION
      - BASE:
          - ghost
        VERSION:
          - GHOST_VERSION
      - BASE:
          - bitnami/ghost
        VERSION:
          - BITNAMI_GHOST_VERSION
      - BASE:
          - matomo
        VERSION:
          - MATOMO_VERSION
      - BASE:
          - nocodb/nocodb
        VERSION:
          - NOCODB_VERSION
      - BASE:
          - metabase/metabase
        VERSION:
          - METABASE_VERSION
      - BASE:
          - docker
        VERSION:
          - DIND_VERSION
      - BASE:
          - podman/stable
        VERSION:
          - PINK_VERSION
      - BASE:
          - jupyter/all-spark-notebook
        VERSION:
          - JUPYTER_VERSION
      - BASE:
          - rocker/shiny
        VERSION:
          - RSHINY_VERSION
      - BASE:
          - caprover/caprover
        VERSION:
          - CAPROVER_VERSION
      - REGISTRY:
          - ghcr.io
        BASE:
          - mikecao/umami
        VERSION:
          - UMAMI_VERSION

archive-images2:
  extends: .archive-images
  stage: archive
  parallel:
    matrix:
      - BASE:
          - bitnami/spark
        VERSION:
          - BITNAMI_SPARK_VERSION
      - BASE:
          - bitnami/prometheus
        VERSION:
          - BITNAMI_PROMETHEUS_VERSION
      - BASE:
          - bitnami/prometheus-operator
        VERSION:
          - BITNAMI_PROMETHEUS_OPERATOR_VERSION
      - BASE:
          - bitnami/node-exporter
        VERSION:
          - BITNAMI_NODE_EXPORTER_VERSION
      - BASE:
          - bitnami/blackbox-exporter
        VERSION:
          - BITNAMI_BLACKBOX_EXPORTER_VERSION
      - BASE:
          - bitnami/postgres-exporter
        VERSION:
          - BITNAMI_POSTGRES_EXPORTER_VERSION
      - BASE:
          - bitnami/redis
        VERSION:
          - BITNAMI_REDIS_VERSION
      - BASE:
          - bitnami/redis-exporter
        VERSION:
          - BITNAMI_REDIS_EXPORTER_VERSION
      - BASE:
          - bitnami/postgresql
        VERSION:
          - BITNAMI_POSTGRESQL14_VERSION
      - BASE:
          - bitnami/postgresql
        VERSION:
          - BITNAMI_POSTGRESQL15_VERSION
      - BASE:
          - bitnami/postgresql
        VERSION:
          - BITNAMI_POSTGRESQL12_VERSION
      - BASE:
          - bitnami/postgresql
        VERSION:
          - BITNAMI_POSTGRESQL11_VERSION
      - BASE:
          - bitnami/postgresql
        VERSION:
          - BITNAMI_POSTGRESQL13_VERSION
      - BASE:
          - bitnami/postgresql
        VERSION:
          - BITNAMI_POSTGRESQL10_VERSION
      - BASE:
          - bitnami/tomcat
        VERSION:
          - BITNAMI_TOMCAT_VERSION
      - BASE:
          - bitnami/jmx-exporter
        VERSION:
          - BITNAMI_JMX_EXPORTER_VERSION
      - BASE:
          - bitnami/keycloak
        VERSION:
          - BITNAMI_KEYCLOAK_VERSION
      - BASE:
          - bitnami/keycloak-config-cli
        VERSION:
          - BITNAMI_KEYCLOAK_CONFIG_CLI_VERSION
      - BASE:
          - bitnami/mariadb
        VERSION:
          - BITNAMI_MARIADB_VERSION
      - BASE:
          - bitnami/mongodb
        VERSION:
          - BITNAMI_MONGODB_VERSION
      - BASE:
          - bitnami/memcached
        VERSION:
          - BITNAMI_MEMCACHED_VERSION
      - BASE:
          - bitnami/nginx-ingress-controller
        VERSION:
          - BITNAMI_NGINX_INGRESS_CONTROLLER_VERSION
      - BASE:
          - bitnami/nginx
        VERSION:
          - BITNAMI_NGINX_VERSION
      - BASE:
          - bitnami/minio
        VERSION:
          - BITNAMI_MINIO_VERSION
      - BASE:
          - bitnami/minio-client
        VERSION:
          - BITNAMI_MINIO_CLIENT_VERSION
      - BASE:
          - bitnami/bitnami-shell
        VERSION:
          - BITNAMI_SHELL_VERSION
      - BASE:
          - bitnami/metallb-controller
        VERSION:
          - BITNAMI_METALLB_CONTROLLER_VERSION
      - BASE:
          - bitnami/metallb-speaker
        VERSION:
          - BITNAMI_METALLB_SPEAKER_VERSION
      - BASE:
          - bitnami/grafana
        VERSION:
          - BITNAMI_GRAFANA_VERSION
      - BASE:
          - bitnami/grafana-image-renderer
        VERSION:
          - BITNAMI_GRAFANA_IMAGE_RENDERER_VERSION
      - BASE:
          - bitnami/consul
        VERSION:
          - BITNAMI_CONSUL_VERSION
      - BASE:
          - bitnami/nats
        VERSION:
          - BITNAMI_NATS_VERSION
      - BASE:
          - bitnami/kube-state-metrics
        VERSION:
          - BITNAMI_KUBE_STATE_METRICS_VERSION
      - BASE:
          - bitnami/metrics-server
        VERSION:
          - BITNAMI_METRICS_SERVER_VERSION
      - BASE:
          - bitnami/kubeapps-dashboard
        VERSION:
          - BITNAMI_KUBEAPPS_DASHBOARD_VERSION
      - BASE:
          - bitnami/kubeapps-apprepository-controller
        VERSION:
          - BITNAMI_KUBEAPPS_APPREPOSITORY_CONTROLLER_VERSION
      - BASE:
          - bitnami/kubeapps-asset-syncer
        VERSION:
          - BITNAMI_KUBEAPPS_ASSET_SYNCER
      - BASE:
          - bitnami/kubeapps-apis
        VERSION:
          - BITNAMI_KUBEAPPS_APIS_VERSION
      - BASE:
          - bitnami/kubeapps-pinniped-proxy
        VERSION:
          - BITNAMI_KUBEAPPS_PINNIPED_PROXY_VERSION
      - BASE:
          - bitnami/kube-rbac-proxy
        VERSION:
          - BITNAMI_KUBE_RBAC_PROXY_VERSION
      - BASE:
          - bitnami/openldap
        VERSION:
          - BITNAMI_OPENLDAP_VERSION
      - BASE:
          - bitnami/sealed-secrets-controller
        VERSION:
          - BITNAMI_SEALED_SECRETS_CONTROLLER_VERSION
      - BASE:
          - bitnami/trivy
        VERSION:
          - BITNAMI_TRIVY_VERSION
      - BASE:
          - bitnami/kubectl
        VERSION:
          - BITNAMI_KUBECTL_VERSION
      - BASE:
          - velero/velero
        VERSION:
          - VELERO_VERSION
      - BASE:
          - velero/velero-plugin-for-csi
        VERSION:
          - VELERO_PLUGIN_CSI_VERSION
      - BASE:
          - velero/velero-plugin-for-aws
        VERSION:
          - VELERO_PLUGIN_AWS_VERSION
      - BASE:
          - velero/velero-plugin-for-gcp
        VERSION:
          - VELERO_PLUGIN_GCP_VERSION
      - BASE:
          - velero/velero-plugin-for-microsoft-azure
        VERSION:
          - VELERO_PLUGIN_AZURE_VERSION
      - BASE:
          - vsphereveleroplugin/velero-plugin-for-vsphere
          - vsphereveleroplugin/backup-driver
          - vsphereveleroplugin/data-manager-for-plugin
        VERSION:
          - VELERO_PLUGIN_VSPHERE_VERSION
      - BASE:
          - velero/velero-restic-restore-helper
        VERSION:
          - VELERO_RESTIC_RESTORE_HELPER_VERSION
      - BASE:
          - bitnami/kubectl
        VERSION:
          - VELERO_KUBECTL_VERSION

archive-images3:
  extends: .archive-images
  stage: archive
  parallel:
    matrix:
      - BASE:
          - aquasec/trivy
        VERSION:
          - TRIVY_VERSION
      - REGISTRY:
          - ghcr.io
        BASE:
          - external-secrets/external-secrets
        VERSION:
          - EXTERNAL_SECRETS_VERSION
      - BASE:
          - minio/console
        VERSION:
          - MINIO_CONSOLE_VERSION
      - BASE:
          - kutt/kutt
        VERSION:
          - KUTT_VERSION
      - BASE:
          - drakkan/sftpgo
        VERSION:
          - SFTPGO_VERSION
      - BASE:
          - hasura/graphql-engine
        VERSION:
          - HASURA_GRAPHQL_VERSION
      - BASE:
          - paulbouwer/hello-kubernetes
        VERSION:
          - HELLO_VERSION
      - BASE:
          - stakater/reloader
        VERSION:
          - RELOADER_VERSION
      - BASE:
          - jimmidyson/configmap-reload
        VERSION:
          - CONFIGMAP_RELOAD_VERSION
      - BASE:
          - registry
        VERSION:
          - DOCKER_REGISTRY_VERSION
      - REGISTRY:
          - ghcr.io
        BASE:
          - dexidp/dex
        VERSION:
          - DEX_VERSION
      - REGISTRY:
          - quay.io
        BASE:
          - argoproj/argocd
        VERSION:
          - ARGOCD_VERSION
      - REGISTRY:
          - quay.io
        BASE:
          - argoproj/argocd-applicationset
        VERSION:
          - ARGOCD_APPLICATIONSET_VERSION
      - REGISTRY:
          - quay.io
        BASE:
          - argoproj/argo-events
        VERSION:
          - ARGO_EVENTS_VERSION
      - REGISTRY:
          - quay.io
        BASE:
          - argoproj/argocli
          - argoproj/workflow-controller
          - argoproj/argoexec
        VERSION:
          - ARGO_WORKFLOWS_VERSION
      - BASE:
          - redis
        VERSION:
          - REDIS_VERSION
      - BASE:
          - listmonk/listmonk
        VERSION:
          - LISTMONK_VERSION
      - BASE:
          - vaultwarden/server
        VERSION:
          - VAULTWARDEN_VERSION
      - BASE:
          - boky/postfix
        VERSION:
          - BOKY_POSTFIX_VERSION
      - BASE:
          - cupcakearmy/cryptgeon
        VERSION:
          - CRYPTGEON_VERSION
      - BASE:
          - memcached
        VERSION:
          - MEMCACHED_VERSION
      - BASE:
          - connecteverything/nats-operator
        VERSION:
          - NATS_OPERATOR_VERSION
      - BASE:
          - nats
        VERSION:
          - NATS_VERSION
      - BASE:
          - natsio/prometheus-nats-exporter
        VERSION:
          - NATS_EXPORTER_VERSION
      - BASE:
          - natsio/nats-server-config-reloader
        VERSION:
          - NATS_SERVER_CONFIG_RELOADER
      - BASE:
          - masipcat/wireguard-go
        VERSION:
          - WIREGUARD_VERSION
      - BASE:
          - eclipse-mosquitto
        VERSION:
          - MOSQUITTO_VERSION
      - BASE:
          - sapcc/mosquitto-exporter
        VERSION:
          - MOSQUITTO_EXPORTER_VERSION
      - BASE:
          - caddy
        VERSION:
          - CADDY_VERSION
      - REGISTRY:
          - quay.io
        BASE:
          - outline/shadowbox
        VERSION:
          - SHADOWBOX_VERSION
      - REGISTRY:
          - gcr.io
        BASE:
          - kaniko-project/executor
        VERSION:
          - KANIKO_VERSION
      - REGISTRY:
          - quay.io
        BASE:
          - iovisor/bpftrace
        VERSION:
          - BPFTRACE_VERSION
      - BASE:
          - pryorda/vmware_exporter
        VERSION:
          - VMWARE_EXPORTER_VERSION
      - BASE:
          - azul/zulu-openjdk
        VERSION:
          - JDK_ZULU_VERSION
      - BASE:
          - eclipse-temurin
        VERSION:
          - JDK_TEMURIN_VERSION
      - BASE:
          - elastic/eck-operator
        VERSION:
          - ECK_OPERATOR_VERSION
      - BASE:
          - louislam/uptime-kuma
        VERSION:
          - UPTIME_KUMA_VERSION
      - BASE:
          - hadolint/hadolint
        VERSION:
          - HADOLINT_VERSION
      - BASE:
          - outlinewiki/outline
        VERSION:
          - OUTLINE_VERSION
      - BASE:
          - syncthing/syncthing
        VERSION:
          - SYNCTHING_VERSION
      - BASE:
          - jellyfin/jellyfin
        VERSION:
          - JELLYFIN_VERSION
      - BASE:
          - gravitl/netmaker
        VERSION:
          - NETMAKER_VERSION
      - BASE:
          - gravitl/netmaker-ui
        VERSION:
          - NETMAKER_UI_VERSION
      - BASE:
          - kmb32123/youtube-dl-server
        VERSION:
          - YOUTUBE_DL_SERVER_VERSION
      - BASE:
          - puppet/puppetserver
        VERSION:
          - PUPPETSERVER_VERSION
      - BASE:
          - puppet/puppetdb
        VERSION:
          - PUPPETDB_VERSION
      - REGISTRY:
          - ghcr.io
        BASE:
          - voxpupuli/puppetboard
        VERSION:
          - PUPPETBOARD_VERSION
      - BASE:
          - puppet/r10k
        VERSION:
          - R10K_VERSION
      - BASE:
          - restic/restic
        VERSION:
          - RESTIC_VERSION
      - REGISTRY:
          - registry.k8s.io
        BASE:
          - coredns/coredns
        VERSION:
          - COREDNS_VERSION
      - BASE:
          - yugabytedb/yugabyte
        VERSION:
          - YUGABYTE_VERSION
      - BASE:
          - antelle/keeweb
        VERSION:
          - KEEWEB_VERSION
      - BASE:
          - wiretrustee/dashboard
        VERSION:
          - NETBIRD_DASHBOARD_VERSION
      - BASE:
          - netbirdio/signal
        VERSION:
          - NETBIRD_SIGNAL_VERSION
      - BASE:
          - netbirdio/management
        VERSION:
          - NETBIRD_MANAGEMENT_VERSION
      - BASE:
          - coturn/coturn
        VERSION:
          - COTURN_VERSION

archive-images4:
  extends: .archive-images
  stage: archive
  parallel:
    matrix:
      - BASE:
          - firezone/firezone
        VERSION:
          - FIREZONE_VERSION
      - BASE:
          - netboxcommunity/netbox
        VERSION:
          - NETBOX_VERSION
      - BASE:
          - jenkins/jenkins
        VERSION:
          - JENKINS_VERSION
      - BASE:
          - jenkins/agent
        VERSION:
          - JENKINS_AGENT_VERSION
      - BASE:
          - apache/airflow
        VERSION:
          - AIRFLOW_VERSION
      - REGISTRY:
          - registry.k8s.io
        BASE:
          - git-sync/git-sync
        VERSION:
          - GIT_SYNC_VERSION
      - REGISTRY:
          - ghcr.io
        BASE:
          - kedacore/keda
          - kedacore/keda-metrics-apiserver
        VERSION:
          - KEDA_VERSION
      - REGISTRY:
          - quay.io
        BASE:
          - jetstack/cert-manager-controller
          - jetstack/cert-manager-cainjector
          - jetstack/cert-manager-webhook
          - jetstack/cert-manager-ctl
        VERSION:
          - CERT_MANAGER_VERSION
      - REGISTRY:
          - quay.io
        BASE:
          - jetstack/cert-manager-csi-driver
        VERSION:
          - CERT_MANAGER_CSI_DRIVER_VERSION
      - BASE:
          - zachomedia/cert-manager-webhook-pdns
        VERSION:
          - CERT_MANAGER_WEBHOOK_PDNS_VERSION
      - BASE:
          - vstadtmueller/cert-manager-webhook-powerdns
        VERSION:
          - CERT_MANAGER_WEBHOOK_POWERDNS_VERSION
      - BASE:
          - hashicorp/consul
        VERSION:
          - CONSUL_VERSION
      - BASE:
          - hashicorp/consul-k8s-control-plane
        VERSION:
          - CONSUL_K8S_CP_VERSION
      - BASE:
          - envoyproxy/envoy-alpine
        VERSION:
          - ENVOY_VERSION
      - BASE:
          - hashicorp/vault
        VERSION:
          - VAULT_VERSION
      - BASE:
          - hashicorp/vault-k8s
        VERSION:
          - VAULT_K8S_VERSION
      - BASE:
          - hashicorp/vault-csi-provider
        VERSION:
          - VAULT_CSI_PROVIDER_VERSION
      - REGISTRY:
          - quay.io
        BASE:
          - strimzi/operator
        VERSION:
          - STRIMZI_OPERATOR_VERSION
      - REGISTRY:
          - quay.io
        BASE:
          - tigera/operator
        VERSION:
          - TIGERA_OPERATOR_VERSION
      - REGISTRY:
          - gcr.io
        BASE:
          - cloud-provider-vsphere/cpi/release/manager
        VERSION:
          - VSPHERE_CPI_MANAGER_VERSION
      - REGISTRY:
          - gcr.io
        BASE:
          - cloud-provider-vsphere/csi/release/driver
        VERSION:
          - VSPHERE_CSI_DRIVER_VERSION
      - REGISTRY:
          - gcr.io
        BASE:
          - cloud-provider-vsphere/csi/release/syncer
        VERSION:
          - VSPHERE_CSI_SYNCER_VERSION
      - REGISTRY:
          - registry.k8s.io
        BASE:
          - sig-storage/livenessprobe
        VERSION:
          - LIVENESSPROBE_VERSION
      - REGISTRY:
          - registry.k8s.io
        BASE:
          - sig-storage/csi-node-driver-registrar
        VERSION:
          - CSI_NODE_DRIVER_REGISTRAR_VERSION
      - REGISTRY:
          - registry.k8s.io
        BASE:
          - sig-storage/csi-attacher
        VERSION:
          - CSI_ATTACHER_VERSION
      - REGISTRY:
          - registry.k8s.io
        BASE:
          - sig-storage/csi-resizer
        VERSION:
          - CSI_RESIZER_VERSION
      - REGISTRY:
          - registry.k8s.io
        BASE:
          - sig-storage/csi-provisioner
        VERSION:
          - CSI_PROVISIONER_VERSION
      - REGISTRY:
          - registry.k8s.io
        BASE:
          - sig-storage/csi-snapshotter
          - sig-storage/snapshot-controller
          - sig-storage/snapshot-validation-webhook
        VERSION:
          - CSI_SNAPSHOTTER_VERSION
      - BASE:
          - obsidiandynamics/kafdrop
        VERSION:
          - KAFDROP_VERSION
      - BASE:
          - tchiotludo/akhq
        VERSION:
          - AKHQ_VERSION
      - BASE:
          - kubernetesui/dashboard
        VERSION:
          - K8S_DASHBOARD_VERSION
      - BASE:
          - kubernetesui/dashboard-api
        VERSION:
          - K8S_DASHBOARD_API_VERSION
      - BASE:
          - kubernetesui/dashboard-web
        VERSION:
          - K8S_DASHBOARD_WEB_VERSION
      - BASE:
          - kubernetesui/metrics-scraper
        VERSION:
          - K8S_DASHBOARD_METRICS_SCRAPER_VERSION
      - BASE:
          - postgrest/postgrest
        VERSION:
          - POSTGREST_VERSION
      - BASE:
          - oss/azure/workload-identity/webhook
        VERSION:
          - AZURE_WORKLOAD_IDENTITY_VERSION

archive-special:
  extends: .archive-images
  stage: archive
  script:
    - |
      declare -a special_images=(
        "${DOCKER_HUB}/distroless/static-${DISTROLESS_VERSION:-debian11}"
        "${DOCKER_HUB}/distroless/base-${DISTROLESS_VERSION:-debian11}"
        "${DOCKER_HUB}/distroless/java11-${DISTROLESS_VERSION:-debian11}"
        "${DOCKER_HUB}/distroless/java17-${DISTROLESS_VERSION:-debian11}"
        "${DOCKER_HUB}/distroless/cc-${DISTROLESS_VERSION:-debian11}"
        "${DOCKER_HUB}/distroless/nodejs-${DISTROLESS_VERSION:-debian11}"

        "${DOCKER_HUB}/strimzi/kafka:${STRIMZI_OPERATOR_VERSION}-kafka-${STRIMZI_KAFKA_VERSION}"

        "${DOCKER_HUB}/longhornio/longhorn-manager:${LONGHORN_VERSION:-v1.5.1}"
        "${DOCKER_HUB}/longhornio/longhorn-ui:${LONGHORN_VERSION:-v1.5.1}"
        "${DOCKER_HUB}/longhornio/longhorn-engine:${LONGHORN_VERSION:-v1.5.1}"
        "${DOCKER_HUB}/longhornio/longhorn-instance-manager:${LONGHORN_VERSION:-v1.5.1}"
        "${DOCKER_HUB}/longhornio/longhorn-share-manager:${LONGHORN_VERSION:-v1.5.1}"
        "${DOCKER_HUB}/longhornio/backing-image-manager:${LONGHORN_VERSION:-v1.5.1}"
        "${DOCKER_HUB}/longhornio/csi-node-driver-registrar:${LONGHORN_CSI_NODE_DRIVER_REGISTRAR_VERSION:-v2.7.0}"
        "${DOCKER_HUB}/longhornio/csi-snapshotter:${LONGHORN_CSI_SNAPSHOTTER_VERSION:-v6.2.1}"
        "${DOCKER_HUB}/longhornio/csi-resizer:${LONGHORN_CSI_RESIZER_VERSION:-v1.7.0}"
        "${DOCKER_HUB}/longhornio/csi-provisioner:${LONGHORN_CSI_PROVISIONER_VERSION:-v3.4.1}"
        "${DOCKER_HUB}/longhornio/csi-attacher:${LONGHORN_CSI_ATTACHER_VERSION:-v4.2.0}"
        "${DOCKER_HUB}/longhornio/livenessprobe:${LONGHORN_LIVENESSPROBE_VERSION:-v2.9.0}"
        "${DOCKER_HUB}/longhornio/support-bundle-kit:${LONGHORN_SUPPORT_BUNDLE_KIT_VERSION:-v0.0.25}"
      )

      for image in "${special_images[@]}"; do
        echo "Archiving ${image}"
        docker pull ${image}
        archive_image ${image} ${INFRA_VERSION}
      done

archive-extra:
  extends: .archive-images
  stage: archive
  parallel:
    matrix:
      - REGISTRY:
          - registry.k8s.io
        BASE:
          - kube-apiserver
          - kube-proxy
          - kube-scheduler
          - kube-controller-manager
        VERSION:
          - K8S_VERSION
          - K8S_125_VERSION
          - K8S_124_VERSION
          - K8S_123_VERSION
      - REGISTRY:
          - registry.k8s.io
        BASE:
          - coredns/coredns
        VERSION:
          - K8S_COREDNS_VERSION
      - REGISTRY:
          - registry.k8s.io
        BASE:
          - pause
        VERSION:
          - K8S_PAUSE_VERSION
      - BASE:
          - calico/typha
          - calico/ctl
          - calico/node
          - calico/cni
          - calico/apiserver
          - calico/kube-controllers
          - calico/dikastes
          - calico/pod2daemon-flexvol
          - calico/node-driver-registrar
          - calico/csi
        VERSION:
          - CALICO_VERSION
      - BASE:
          - confluentinc/cp-enterprise-control-center
          - confluentinc/cp-enterprise-replicator
          - confluentinc/cp-kafka-rest
          - confluentinc/cp-ksqldb-server
          - confluentinc/cp-ksqldb-cli
          - confluentinc/cp-schema-registry
          - confluentinc/cp-server
          - confluentinc/cp-server-connect
          - confluentinc/cp-zookeeper
        VERSION:
          - CONFLUENTINC_CP_VERSION
      - BASE:
          - confluentinc/confluent-init-container
        VERSION:
          - CONFLUENTINC_INIT_CONTAINER_VERSION
      - BASE:
          - confluentinc/confluent-operator
        VERSION:
          - CONFLUENTINC_OPERATOR_VERSION

turbovillains-mirror:
  interruptible: true
  retry: 2
  stage: scratch
  script:
    - |
      git clone ${CI_REPOSITORY_URL} .${CI_JOB_NAME}
      cd .${CI_JOB_NAME}
      git push --mirror --force git@github.com:turbovillains/infra-setup.git

      git clone git@git.nrtn.dev:infra/keycloak-themes.git .keycloak-themes
      cd .keycloak-themes
      git push --mirror --force git@github.com:turbovillains/keycloak-themes.git

# mirror-homebrew:
#   interruptible: true
#   retry: 2
#   stage: scratch
#   script:
#     - ./gitlab/${CI_JOB_NAME}.sh

noroutine-ca:
  interruptible: true
  retry: 2
  stage: scratch
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION}

keycloak-themes:
  interruptible: true
  retry: 2
  stage: prebuild
  script:
    - |
      git clone https://readonly:${INFRA_READONLY_TOKEN}@git.nrtn.dev/infra/keycloak-themes.git
      cd keycloak-themes
      pack build --clear-cache --publish ${KEYCLOAK_THEMES_IMAGE}
      if [[ ! -z "${CI_COMMIT_TAG:-}" ]]; then
        archive_image ${KEYCLOAK_THEMES_IMAGE}
      fi

grafana-dashboards:
  interruptible: true
  retry: 2
  stage: prebuild
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg GRIT_VERSION

ingress-default-backend:
  interruptible: true
  retry: 2
  stage: prebuild
  script:
    - |
      git clone --depth 1 https://readonly:${INFRA_READONLY_TOKEN}@git.nrtn.dev/infra/ingress-default-backend.git
      cd ingress-default-backend
      pack build --clear-cache --publish ${DOCKER_HUB}/${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION}
      if [[ ! -z "${CI_COMMIT_TAG:-}" ]]; then
        archive_image ${DOCKER_HUB}/${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION}
      fi

website:
  interruptible: true
  retry: 2
  stage: prebuild
  script:
    - |
      rm -rf ~/.npmrc ~/.yarnrc
      git clone --depth 1 --branch ${WEBSITE_VERSION} https://readonly:${INFRA_READONLY_TOKEN}@git.nrtn.dev/infra/noroutine-website.git
      cd noroutine-website
      pack build --clear-cache --publish ${DOCKER_HUB}/${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION}
      if [[ ! -z "${CI_COMMIT_TAG:-}" ]]; then
        archive_image ${DOCKER_HUB}/${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION}
      fi

connect-landing:
  interruptible: true
  retry: 2
  stage: prebuild
  script:
    - |
      git clone --depth 1 --branch ${CONNECT_LANDING_VERSION} https://readonly:${SANDBOX_READONLY_TOKEN}@git.nrtn.dev/sandbox/noroutine-connect-landing.git
      cd noroutine-connect-landing
      pack build --clear-cache --publish ${DOCKER_HUB}/${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION}
      if [[ ! -z "${CI_COMMIT_TAG:-}" ]]; then
        archive_image ${DOCKER_HUB}/${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION}
      fi

tripwire:
  interruptible: true
  retry: 2
  stage: prebuild
  script:
    - |
      git clone --depth 1 --branch ${TRIPWIRE_VERSION} https://readonly:${SANDBOX_READONLY_TOKEN}@git.nrtn.dev/sandbox/tripwire.git
      cd tripwire
      docker build --build-arg FROM=${DOCKER_HUB}/infra/debian:${INFRA_VERSION} -t ${DOCKER_HUB}/${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} .
      docker push ${DOCKER_HUB}/${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION}
      if [[ ! -z "${CI_COMMIT_TAG:-}" ]]; then
        archive_image ${DOCKER_HUB}/${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION}
      fi

tripwire-kafka-mqtt-bridge:
  interruptible: true
  retry: 2
  stage: prebuild
  script:
    - |
      git clone --depth 1 --branch ${TRIPWIRE_KAFKA_MQTT_BRIDGE_VERSION} https://readonly:${SANDBOX_READONLY_TOKEN}@git.nrtn.dev/sandbox/tripwire-kafka-mqtt-bridge.git
      cd tripwire-kafka-mqtt-bridge
      pack build --clear-cache --publish ${DOCKER_HUB}/${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION}
      if [[ ! -z "${CI_COMMIT_TAG:-}" ]]; then
        archive_image ${DOCKER_HUB}/${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION}
      fi

debian:
  interruptible: true
  retry: 2
  stage: base
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg DEBIAN_VERSION
  variables:
    BASE: debian
    VERSION: DEBIAN_VERSION

buildpack-deps-bionic:
  interruptible: true
  retry: 2
  stage: base
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg BUILDPACK_DEPS_BIONIC_VERSION
  variables:
    BASE: buildpack-deps
    VERSION: BUILDPACK_DEPS_BIONIC_VERSION

buildpack-deps-focal:
  interruptible: true
  retry: 2
  stage: base
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg BUILDPACK_DEPS_FOCAL_VERSION
  variables:
    BASE: buildpack-deps
    VERSION: BUILDPACK_DEPS_FOCAL_VERSION

buildpack-deps-jammy:
  interruptible: true
  retry: 2
  stage: base
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg BUILDPACK_DEPS_JAMMY_VERSION
  variables:
    BASE: buildpack-deps
    VERSION: BUILDPACK_DEPS_JAMMY_VERSION

ubuntu20:
  interruptible: true
  retry: 2
  stage: base
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg UBUNTU_FOCAL_VERSION
  variables:
    BASE: ubuntu
    VERSION: UBUNTU_FOCAL_VERSION

ubuntu22:
  interruptible: true
  retry: 2
  stage: base
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg UBUNTU_JAMMY_VERSION
  variables:
    BASE: ubuntu
    VERSION: UBUNTU_JAMMY_VERSION

alpine:
  interruptible: true
  retry: 2
  stage: base
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg ALPINE_VERSION
  variables:
    BASE: alpine
    VERSION: ALPINE_VERSION

busybox:
  interruptible: true
  retry: 2
  stage: base
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg ALPINE_VERSION \
        --build-arg BUSYBOX_VERSION
  variables:
    BASE: busybox
    VERSION: BUSYBOX_VERSION

jdk-zulu:
  interruptible: true
  retry: 2
  stage: base
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg JDK_ZULU_VERSION
  variables:
    BASE: azul/zulu-openjdk
    VERSION: JDK_ZULU_VERSION

jdk-temurin:
  interruptible: true
  retry: 2
  stage: base
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg JDK_TEMURIN_VERSION
  variables:
    BASE: eclipse-temurin
    VERSION: JDK_TEMURIN_VERSION

golang:
  interruptible: true
  retry: 2
  stage: base
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg GOLANG_VERSION
  variables:
    BASE: golang
    VERSION: GOLANG_VERSION

python:
  interruptible: true
  retry: 2
  stage: base
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg PYTHON_VERSION
  variables:
    BASE: python
    VERSION: PYTHON_VERSION

python-slim:
  interruptible: true
  retry: 2
  stage: base
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg PYTHON_SLIM_VERSION
  variables:
    BASE: python
    VERSION: PYTHON_SLIM_VERSION

locust:
  interruptible: true
  retry: 2
  stage: base
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg LOCUST_VERSION
  variables:
    BASE: locustio/locust
    VERSION: LOCUST_VERSION

php:
  interruptible: true
  retry: 2
  stage: base
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg PHP_VERSION
  variables:
    BASE: php
    VERSION: PHP_VERSION

heroku-20:
  interruptible: true
  retry: 2
  stage: stacks
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION}
      ./gitlab/build-image.sh ${CI_JOB_NAME}-build ${DOCKER_NAMESPACE}/${CI_JOB_NAME}-build:${INFRA_VERSION} \
        --build-arg STACK_IMAGE=${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION}

heroku-22:
  interruptible: true
  retry: 2
  stage: stacks
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION}
      ./gitlab/build-image.sh ${CI_JOB_NAME}-build ${DOCKER_NAMESPACE}/${CI_JOB_NAME}-build:${INFRA_VERSION} \
        --build-arg STACK_IMAGE=${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION}

builder:
  interruptible: true
  stage: build2
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg BUILDPACKS_VERSION=${INFRA_VERSION} \
        --build-arg GIT_SERVER_HOST=${CI_SERVER_HOST} \
        --build-arg HOST_DOCKER_GID \
        --build-arg ACTIONS_RUNNER_VERSION

shell:
  interruptible: true
  stage: build2
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg BUILDPACKS_VERSION=${INFRA_VERSION} \
        --build-arg GIT_SERVER_HOST=${CI_SERVER_HOST} \
        --build-arg HOST_DOCKER_GID

ocsp-responder:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION}

openvpn:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION}

wireguard:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg WIREGUARD_VERSION
  variables:
    BASE: masipcat/wireguard-go
    VERSION: WIREGUARD_VERSION

shadowbox:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg SHADOWBOX_VERSION
  variables:
    BASE: outline/shadowbox
    VERSION: SHADOWBOX_VERSION

gitlab-auto-build:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg GITLAB_AUTO_BUILD_VERSION
  variables:
    BASE: gitlab-org/cluster-integration/auto-build-image
    VERSION: GITLAB_AUTO_BUILD_VERSION

gitlab-auto-deploy:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg GITLAB_AUTO_DEPLOY_VERSION
  variables:
    BASE: gitlab-org/cluster-integration/auto-deploy-image
    VERSION: GITLAB_AUTO_DEPLOY_VERSION

gitlab-agentk:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg GITLAB_AGENTK_VERSION
  variables:
    BASE: gitlab-org/cluster-integration/gitlab-agent/agentk
    VERSION: GITLAB_AGENTK_VERSION

gitlab-cluster-applications:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg GITLAB_CLUSTER_APPLICATIONS_VERSION
  variables:
    BASE: gitlab-org/cluster-integration/cluster-applications
    VERSION: GITLAB_CLUSTER_APPLICATIONS_VERSION

heroku-buildpacks:
  interruptible: true
  stage: buildpacks
  script:
    - |
      set -x

      export ALL_PROXY=
      export all_proxy=
      export HTTP_PROXY=
      export http_proxy=
      export HTTPS_PROXY=
      export https_proxy=
      export FTP_PROXY=
      export ftp_proxy=

      git config --global --unset http.proxy || true
      git config --unset http.proxy || true

      sudo apt update -yyq
      sudo apt install -yyq musl-tools
      curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y -t x86_64-unknown-linux-musl

      source $HOME/.cargo/env

      cat $HOME/.cargo/env

      env | grep -i proxy

      cargo install libcnb-cargo
    - cd ${CI_JOB_NAME}
    - |
      # Fetch upstream buildpack sources
      curl -sLo- https://github.com/heroku/buildpacks-nodejs/archive/refs/heads/main.tar.gz | tar zxv buildpacks-nodejs-main/{Cargo.lock,Cargo.toml,common,buildpacks,test_support}
      # curl -sLo- https://github.com/heroku/buildpacks-jvm/archive/refs/heads/main.tar.gz | tar zxv buildpacks-jvm-main/{common,buildpacks}
    - |

      export -f archive_image

      # Available buildpacks
      find . -name buildpack.toml
      # Release upstream buildpacks
      for buildpack_id in heroku/nodejs-npm heroku/nodejs-corepack heroku/nodejs-pnpm-install heroku/nodejs-yarn heroku/nodejs-engine heroku/nodejs-function-invoker; do
        REQUESTED_BUILDPACK_ID=${buildpack_id} ./release-buildpack.sh
      done
    - |
      # Release meta-buildpacks
      for buildpack_id in heroku/nodejs heroku/nodejs-function; do
        REQUESTED_BUILDPACK_ID=${buildpack_id} ./release-buildpack.sh
      done
    - |
      # Release builder
      make publish20 \
        BUILDPACKS_VERSION=${INFRA_VERSION} \
        BUILDPACKS_BASE=infra/heroku-20 \
        BUILDPACKS_BASE_VERSION=${INFRA_VERSION}

      if [[ ! -z "${CI_COMMIT_TAG:-}" ]]; then
          archive_image ${DOCKER_HUB}/infra/pack-build:20
          archive_image ${DOCKER_HUB}/infra/pack:20
          archive_image ${DOCKER_HUB}/infra/buildpacks:${INFRA_VERSION}
      fi

      # make publish22 \
      #   BUILDPACKS_VERSION=${INFRA_VERSION} \
      #   BUILDPACKS_BASE=infra/heroku-22 \
      #   BUILDPACKS_BASE_VERSION=${INFRA_VERSION}
buildpacksio-lifecycle:
  interruptible: true
  retry: 2
  stage: buildpacks
  script:
    - ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \ --build-arg BUILDPACKSIO_LIFECYCLE_VERSION
  variables:
    BASE: buildpacksio/lifecycle
    VERSION: BUILDPACKSIO_LIFECYCLE_VERSION

gitlab-runner:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg GITLAB_RUNNER_VERSION
  variables:
    BASE: gitlab/gitlab-runner
    VERSION: GITLAB_RUNNER_VERSION

gitlab:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg GITLAB_VERSION
  variables:
    BASE: gitlab/gitlab-ce
    VERSION: GITLAB_VERSION

actions-runner-controller:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg ACTIONS_RUNNER_CONTROLLER_VERSION
  variables:
    BASE: summerwind/actions-runner-controller
    VERSION: ACTIONS_RUNNER_CONTROLLER_VERSION

actions-runner:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg HOST_DOCKER_GID \
        --build-arg ACTIONS_RUNNER_IMAGE_VERSION
  variables:
    BASE: summerwind/actions-runner
    VERSION: ACTIONS_RUNNER_IMAGE_VERSION

actions-runner-dind:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg HOST_DOCKER_GID \
        --build-arg ACTIONS_RUNNER_IMAGE_VERSION
  variables:
    BASE: summerwind/actions-runner-dind
    VERSION: ACTIONS_RUNNER_IMAGE_VERSION

kube-rbac-proxy:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg KUBE_RBAC_PROXY_VERSION
  variables:
    BASE: brancz/kube-rbac-proxy
    VERSION: KUBE_RBAC_PROXY_VERSION

kaniko-executor:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg KANIKO_VERSION
  variables:
    BASE: kaniko-project/executor
    VERSION: KANIKO_VERSION

nexus:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg NEXUS_VERSION
  variables:
    BASE: sonatype/nexus3
    VERSION: NEXUS_VERSION

vaultwarden:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg VAULTWARDEN_VERSION
  variables:
    BASE: vaultwarden/server
    VERSION: VAULTWARDEN_VERSION

radius:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg FREERADIUS_VERSION
  variables:
    BASE: freeradius/freeradius-server
    VERSION: FREERADIUS_VERSION

mkdocs:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg MKDOCS_VERSION
  variables:
    BASE: squidfunk/mkdocs-material
    VERSION: MKDOCS_VERSION

traefik:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg TRAEFIK_VERSION
  variables:
    BASE: traefik
    VERSION: TRAEFIK_VERSION

# latex:
#   stage: build
#   script:
#     - |
#       ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
#         --build-arg LATEX_BASE

powerdns:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION}

powerdns-recursor:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION}

unbound:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION}

keycloak:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg KEYCLOAK_VERSION \
        --build-arg KEYCLOAK_THEMES_IMAGE
  variables:
    BASE: keycloak/keycloak
    VERSION: KEYCLOAK_VERSION

postgres:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg POSTGRES_VERSION
  variables:
    BASE: postgres
    VERSION: POSTGRES_VERSION

jira:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg JIRA_VERSION
  variables:
    BASE: atlassian/jira-software
    VERSION: JIRA_VERSION

nextcloud:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg NEXTCLOUD_VERSION
  variables:
    BASE: nextcloud
    VERSION: NEXTCLOUD_VERSION

speedtest:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg SPEEDTEST_VERSION \
        --build-arg GOLANG_ALPINE_IMAGE=${DOCKER_HUB}/golang:${GOLANG_ALPINE_VERSION} \
        --build-arg ALPINE_IMAGE=${DOCKER_HUB}/${DOCKER_NAMESPACE}/alpine:${INFRA_VERSION}

haproxy:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg HAPROXY_VERSION
  variables:
    BASE: haproxytech/haproxy-debian
    VERSION: HAPROXY_VERSION

minio:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg MINIO_VERSION
  variables:
    BASE: minio/minio
    VERSION: MINIO_VERSION

minio-console:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg MINIO_CONSOLE_VERSION
  variables:
    BASE: minio/console
    VERSION: MINIO_CONSOLE_VERSION

prometheus:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg PROMETHEUS_VERSION
  variables:
    BASE: prometheus/prometheus
    VERSION: PROMETHEUS_VERSION

prometheus-operator:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg PROMETHEUS_OPERATOR_VERSION
  variables:
    BASE: prometheus-operator/prometheus-operator
    VERSION: PROMETHEUS_OPERATOR_VERSION

prometheus-config-reloader:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg PROMETHEUS_OPERATOR_VERSION
  variables:
    BASE: prometheus-operator/prometheus-config-reloader
    VERSION: PROMETHEUS_OPERATOR_VERSION

karma:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg KARMA_VERSION
  variables:
    BASE: prymitive/karma
    VERSION: KARMA_VERSION

alertmanager:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg ALERTMANAGER_VERSION
  variables:
    BASE: prometheus/alertmanager
    VERSION: ALERTMANAGER_VERSION

pushgateway:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg PUSHGATEWAY_VERSION
  variables:
    BASE: prometheus/pushgateway
    VERSION: PUSHGATEWAY_VERSION

blackbox-exporter:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg BLACKBOX_EXPORTER_VERSION
  variables:
    BASE: prometheus/blackbox-exporter
    VERSION: BLACKBOX_EXPORTER_VERSION

snmp-exporter:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg SNMP_EXPORTER_VERSION
  variables:
    BASE: prometheus/snmp-exporter
    VERSION: SNMP_EXPORTER_VERSION

ipmi-exporter:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg IPMI_EXPORTER_VERSION \
        --build-arg GOLANG_VERSION
  variables:
    BASE: golang
    VERSION: GOLANG_VERSION as builder

cadvisor:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg CADVISOR_VERSION
  variables:
    BASE: cadvisor/cadvisor
    VERSION: CADVISOR_VERSION

node-exporter:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg NODE_EXPORTER_VERSION
  variables:
    BASE: prometheus/node-exporter
    VERSION: NODE_EXPORTER_VERSION

consul-exporter:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg CONSUL_EXPORTER_VERSION
  variables:
    BASE: prometheus/consul-exporter
    VERSION: CONSUL_EXPORTER_VERSION

prometheus-es-exporter:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg PROMETHEUS_ES_EXPORTER_VERSION
  variables:
    BASE: braedon/prometheus-es-exporter
    VERSION: PROMETHEUS_ES_EXPORTER_VERSION

ssl-exporter:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg SSL_EXPORTER_VERSION
  variables:
    BASE: ribbybibby/ssl-exporter
    VERSION: SSL_EXPORTER_VERSION

rsyslog:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION}

squid:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg SQUID_VERSION

ioping-exporter:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg GOLANG_VERSION
  variables:
    BASE: golang
    VERSION: GOLANG_VERSION

ldap-exporter:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg LDAP_EXPORTER_VERSION

grafana:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg GRAFANA_VERSION
  variables:
    BASE: grafana/grafana
    VERSION: GRAFANA_VERSION

promtail:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg PROMTAIL_VERSION
  variables:
    BASE: grafana/promtail
    VERSION: PROMTAIL_VERSION

loki:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg LOKI_VERSION
  variables:
    BASE: grafana/loki
    VERSION: LOKI_VERSION

loki-canary:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg LOKI_VERSION
  variables:
    BASE: grafana/loki-canary
    VERSION: LOKI_VERSION

loki-gateway:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg LOKI_GATEWAY_NGINX_VERSION
  variables:
    BASE: nginxinc/nginx-unprivileged
    VERSION: LOKI_GATEWAY_NGINX_VERSION

nginx-unprivileged:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg NGINX_VERSION
  variables:
    BASE: nginxinc/nginx-unprivileged
    VERSION: NGINX_VERSION

httpd:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg HTTPD_VERSION
  variables:
    BASE: httpd
    VERSION: HTTPD_VERSION

tomcat:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg TOMCAT_VERSION
  variables:
    BASE: tomcat
    VERSION: TOMCAT_VERSION

m3dbnode:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg M3DBNODE_VERSION
  variables:
    BASE: m3db/m3dbnode
    VERSION: M3DBNODE_VERSION

m3coordinator:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg M3COORDINATOR_VERSION
  variables:
    BASE: m3db/m3coordinator
    VERSION: M3COORDINATOR_VERSION

cortex:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg CORTEX_VERSION
  variables:
    BASE: cortexproject/cortex
    VERSION: CORTEX_VERSION

elasticsearch:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg ELASTICSEARCH_VERSION
  variables:
    BASE: elasticsearch/elasticsearch
    VERSION: ELASTICSEARCH_VERSION

logstash:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg LOGSTASH_VERSION
  variables:
    BASE: logstash/logstash
    VERSION: LOGSTASH_VERSION

kibana:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg KIBANA_VERSION
  variables:
    BASE: kibana/kibana
    VERSION: KIBANA_VERSION

mongo:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg MONGO_VERSION
  variables:
    BASE: mongo
    VERSION: MONGO_VERSION

alerta:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg ALERTA_VERSION
  variables:
    BASE: alerta/alerta-web
    VERSION: ALERTA_VERSION

wordpress:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg WORDPRESS_VERSION
  variables:
    BASE: wordpress
    VERSION: WORDPRESS_VERSION

pgadmin:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg PGADMIN_VERSION
  variables:
    BASE: dpage/pgadmin4
    VERSION: PGADMIN_VERSION

mysql:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg MYSQL_VERSION
  variables:
    BASE: mysql
    VERSION: MYSQL_VERSION

mariadb:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg MARIADB_VERSION
  variables:
    BASE: mariadb
    VERSION: MARIADB_VERSION

httpbin:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg HTTPBIN_VERSION
  variables:
    BASE: mccutchen/go-httpbin
    VERSION: HTTPBIN_VERSION

oauth2-proxy:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg OAUTH2_PROXY_VERSION
  variables:
    BASE: oauth2-proxy/oauth2-proxy
    VERSION: OAUTH2_PROXY_VERSION

caprover:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg CAPROVER_VERSION
  variables:
    BASE: caprover/caprover
    VERSION: CAPROVER_VERSION

binderhub:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg BINDERHUB_VERSION
  variables:
    BASE: noroutine/k8s-binderhub
    VERSION: BINDERHUB_VERSION

binderhub-image-cleaner:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg BINDERHUB_IMAGE_CLEANER_VERSION
  variables:
    BASE: jupyterhub/k8s-image-cleaner
    VERSION: BINDERHUB_IMAGE_CLEANER_VERSION

jupyterhub:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg JUPYTERHUB_VERSION
  variables:
    BASE: jupyterhub/k8s-hub
    VERSION: JUPYTERHUB_VERSION

repo2docker:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg REPO2DOCKER_VERSION
  variables:
    BASE: noroutine/repo2docker
    VERSION: REPO2DOCKER_VERSION

dind:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg DIND_VERSION
  variables:
    BASE: docker
    VERSION: DIND_VERSION

pink:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg PINK_VERSION
  variables:
    BASE: podman/stable
    VERSION: PINK_VERSION

jupyterhub-http-proxy:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg JUPYTERHUB_HTTP_PROXY_VERSION
  variables:
    BASE: jupyterhub/configurable-http-proxy
    VERSION: JUPYTERHUB_HTTP_PROXY_VERSION

jupyterhub-secret-sync:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg JUPYTERHUB_SECRET_SYNC_VERSION
  variables:
    BASE: jupyterhub/k8s-secret-sync
    VERSION: JUPYTERHUB_SECRET_SYNC_VERSION

jupyterhub-network-tools:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg JUPYTERHUB_NETWORK_TOOLS_VERSION
  variables:
    BASE: jupyterhub/k8s-network-tools
    VERSION: JUPYTERHUB_NETWORK_TOOLS_VERSION

jupyterhub-singleuser-sample:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg JUPYTERHUB_SINGLEUSER_SAMPLE_VERSION
  variables:
    BASE: jupyterhub/k8s-singleuser-sample
    VERSION: JUPYTERHUB_SINGLEUSER_SAMPLE_VERSION

jupyterhub-image-awaiter:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg JUPYTERHUB_IMAGE_AWAITER_VERSION
  variables:
    BASE: jupyterhub/k8s-image-awaiter
    VERSION: JUPYTERHUB_IMAGE_AWAITER_VERSION

jupyterhub-scheduler:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg JUPYTERHUB_SCHEDULER_VERSION
  variables:
    BASE: kube-scheduler
    VERSION: JUPYTERHUB_SCHEDULER_VERSION

jupyterhub-pause:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg JUPYTERHUB_PAUSE_VERSION
  variables:
    BASE: pause
    VERSION: JUPYTERHUB_PAUSE_VERSION

jupyter-notebook:
  interruptible: true
  retry: 2
  stage: build
  parallel:
    matrix:
      - FLAVOUR:
          - base
          - minimal
          - r
          - scipy
          - tensorflow
          - datascience
          - pyspark
          - all-spark
        NOTEBOOK:
          - notebook
  script:
    - |
      ./gitlab/build-image.sh jupyter-notebook ${DOCKER_NAMESPACE}/jupyter-${FLAVOUR}-${NOTEBOOK}:${INFRA_VERSION} \
        --build-arg JUPYTER_VERSION \
        --build-arg FLAVOUR

rshiny:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg RSHINY_VERSION
  variables:
    BASE: rocker/shiny
    VERSION: RSHINY_VERSION

# rstudio:
#   stage: build
#   script:
#     - |
#       ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
#         --build-arg RSTUDIO_VERSION \
#         --build-arg JUPYTER_VERSION

bitnami-minio:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg BITNAMI_MINIO_VERSION
  variables:
    BASE: bitnami/minio
    VERSION: BITNAMI_MINIO_VERSION

bitnami-minio-client:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg BITNAMI_MINIO_CLIENT_VERSION
  variables:
    BASE: bitnami/minio-client
    VERSION: BITNAMI_MINIO_CLIENT_VERSION

bitnami-shell:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg BITNAMI_SHELL_VERSION
  variables:
    BASE: bitnami/bitnami-shell
    VERSION: BITNAMI_SHELL_VERSION

bitnami-metallb-controller:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg BITNAMI_METALLB_CONTROLLER_VERSION
  variables:
    BASE: bitnami/metallb-controller
    VERSION: BITNAMI_METALLB_CONTROLLER_VERSION

bitnami-metallb-speaker:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg BITNAMI_METALLB_SPEAKER_VERSION
  variables:
    BASE: bitnami/metallb-speaker
    VERSION: BITNAMI_METALLB_SPEAKER_VERSION

bitnami-grafana:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg BITNAMI_GRAFANA_VERSION
  variables:
    BASE: bitnami/grafana
    VERSION: BITNAMI_GRAFANA_VERSION

bitnami-grafana-image-renderer:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg BITNAMI_GRAFANA_IMAGE_RENDERER_VERSION
  variables:
    BASE: bitnami/grafana-image-renderer
    VERSION: BITNAMI_GRAFANA_IMAGE_RENDERER_VERSION

bitnami-consul:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg BITNAMI_CONSUL_VERSION
  variables:
    BASE: bitnami/consul
    VERSION: BITNAMI_CONSUL_VERSION

bitnami-nats:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg BITNAMI_NATS_VERSION
  variables:
    BASE: bitnami/nats
    VERSION: BITNAMI_NATS_VERSION

bitnami-kube-state-metrics:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg BITNAMI_KUBE_STATE_METRICS_VERSION
  variables:
    BASE: bitnami/kube-state-metrics
    VERSION: BITNAMI_KUBE_STATE_METRICS_VERSION

bitnami-metrics-server:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg BITNAMI_METRICS_SERVER_VERSION
  variables:
    BASE: bitnami/metrics-server
    VERSION: BITNAMI_METRICS_SERVER_VERSION

bitnami-nginx:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg BITNAMI_NGINX_VERSION
  variables:
    BASE: bitnami/nginx
    VERSION: BITNAMI_NGINX_VERSION

bitnami-nginx-ingress-controller:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg BITNAMI_NGINX_INGRESS_CONTROLLER_VERSION
  variables:
    BASE: bitnami/nginx-ingress-controller
    VERSION: BITNAMI_NGINX_INGRESS_CONTROLLER_VERSION

bitnami-keycloak:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg BITNAMI_KEYCLOAK_VERSION \
        --build-arg KEYCLOAK_THEMES_IMAGE
  variables:
    BASE: bitnami/keycloak
    VERSION: BITNAMI_KEYCLOAK_VERSION

bitnami-keycloak-config-cli:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg BITNAMI_KEYCLOAK_CONFIG_CLI_VERSION
  variables:
    BASE: bitnami/keycloak-config-cli
    VERSION: BITNAMI_KEYCLOAK_CONFIG_CLI_VERSION

bitnami-spark:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg BITNAMI_SPARK_VERSION
  variables:
    BASE: bitnami/spark
    VERSION: BITNAMI_SPARK_VERSION

bitnami-prometheus:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg BITNAMI_PROMETHEUS_VERSION
  variables:
    BASE: bitnami/prometheus
    VERSION: BITNAMI_PROMETHEUS_VERSION

bitnami-prometheus-operator:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg BITNAMI_PROMETHEUS_OPERATOR_VERSION
  variables:
    BASE: bitnami/prometheus-operator
    VERSION: BITNAMI_PROMETHEUS_OPERATOR_VERSION

bitnami-node-exporter:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg BITNAMI_NODE_EXPORTER_VERSION
  variables:
    BASE: bitnami/node-exporter
    VERSION: BITNAMI_NODE_EXPORTER_VERSION

bitnami-blackbox-exporter:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg BITNAMI_BLACKBOX_EXPORTER_VERSION
  variables:
    BASE: bitnami/blackbox-exporter
    VERSION: BITNAMI_BLACKBOX_EXPORTER_VERSION

bitnami-postgres-exporter:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg BITNAMI_POSTGRES_EXPORTER_VERSION
  variables:
    BASE: bitnami/postgres-exporter
    VERSION: BITNAMI_POSTGRES_EXPORTER_VERSION

bitnami-redis:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg BITNAMI_REDIS_VERSION
  variables:
    BASE: bitnami/redis
    VERSION: BITNAMI_REDIS_VERSION

bitnami-redis-exporter:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg BITNAMI_REDIS_EXPORTER_VERSION
  variables:
    BASE: bitnami/redis-exporter
    VERSION: BITNAMI_REDIS_EXPORTER_VERSION

bitnami-postgresql10:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg BITNAMI_POSTGRESQL10_VERSION
  variables:
    BASE: bitnami/postgresql
    VERSION: BITNAMI_POSTGRESQL10_VERSION

bitnami-postgresql11:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg BITNAMI_POSTGRESQL11_VERSION
  variables:
    BASE: bitnami/postgresql
    VERSION: BITNAMI_POSTGRESQL11_VERSION

bitnami-postgresql12:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg BITNAMI_POSTGRESQL12_VERSION
  variables:
    BASE: bitnami/postgresql
    VERSION: BITNAMI_POSTGRESQL12_VERSION

bitnami-postgresql13:
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg BITNAMI_POSTGRESQL13_VERSION
  variables:
    BASE: bitnami/postgresql
    VERSION: BITNAMI_POSTGRESQL13_VERSION

bitnami-postgresql14:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg BITNAMI_POSTGRESQL14_VERSION
  variables:
    BASE: bitnami/postgresql
    VERSION: BITNAMI_POSTGRESQL14_VERSION

bitnami-postgresql15:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg BITNAMI_POSTGRESQL15_VERSION
  variables:
    BASE: bitnami/postgresql
    VERSION: BITNAMI_POSTGRESQL15_VERSION

bitnami-tomcat:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg BITNAMI_TOMCAT_VERSION
  variables:
    BASE: bitnami/tomcat
    VERSION: BITNAMI_TOMCAT_VERSION

bitnami-jmx-exporter:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg BITNAMI_JMX_EXPORTER_VERSION
  variables:
    BASE: bitnami/jmx-exporter
    VERSION: BITNAMI_JMX_EXPORTER_VERSION

bitnami-mariadb:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg BITNAMI_MARIADB_VERSION
  variables:
    BASE: bitnami/mariadb
    VERSION: BITNAMI_MARIADB_VERSION

bitnami-mongodb:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg BITNAMI_MONGODB_VERSION
  variables:
    BASE: bitnami/mongodb
    VERSION: BITNAMI_MONGODB_VERSION

bitnami-memcached:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg BITNAMI_MEMCACHED_VERSION
  variables:
    BASE: bitnami/memcached
    VERSION: BITNAMI_MEMCACHED_VERSION

bitnami-kubeapps-dashboard:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg BITNAMI_KUBEAPPS_DASHBOARD_VERSION
  variables:
    BASE: bitnami/kubeapps-dashboard
    VERSION: BITNAMI_KUBEAPPS_DASHBOARD_VERSION

bitnami-kubeapps-apprepository-controller:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg BITNAMI_KUBEAPPS_APPREPOSITORY_CONTROLLER_VERSION
  variables:
    BASE: bitnami/kubeapps-apprepository-controller
    VERSION: BITNAMI_KUBEAPPS_APPREPOSITORY_CONTROLLER_VERSION

bitnami-kubeapps-asset-syncer:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg BITNAMI_KUBEAPPS_ASSET_SYNCER
  variables:
    BASE: bitnami/kubeapps-asset-syncer
    VERSION: BITNAMI_KUBEAPPS_ASSET_SYNCER

bitnami-kubeapps-apis:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg BITNAMI_KUBEAPPS_APIS_VERSION
  variables:
    BASE: bitnami/kubeapps-apis
    VERSION: BITNAMI_KUBEAPPS_APIS_VERSION

bitnami-kubeapps-pinniped-proxy:
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg BITNAMI_KUBEAPPS_PINNIPED_PROXY_VERSION
  variables:
    BASE: bitnami/kubeapps-pinniped-proxy
    VERSION: BITNAMI_KUBEAPPS_PINNIPED_PROXY_VERSION

bitnami-kube-rbac-proxy:
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg BITNAMI_KUBE_RBAC_PROXY_VERSION
  variables:
    BASE: bitnami/kube-rbac-proxy
    VERSION: BITNAMI_KUBE_RBAC_PROXY_VERSION

bitnami-openldap:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg BITNAMI_OPENLDAP_VERSION
  variables:
    BASE: bitnami/openldap
    VERSION: BITNAMI_OPENLDAP_VERSION

bitnami-sealed-secrets-controller:
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg BITNAMI_SEALED_SECRETS_CONTROLLER_VERSION
  variables:
    BASE: bitnami/sealed-secrets-controller
    VERSION: BITNAMI_SEALED_SECRETS_CONTROLLER_VERSION

bitnami-trivy:
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg BITNAMI_TRIVY_VERSION
  variables:
    BASE: bitnami/trivy
    VERSION: BITNAMI_TRIVY_VERSION

trivy:
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg TRIVY_VERSION
  variables:
    BASE: aquasec/trivy
    VERSION: TRIVY_VERSION

external-secrets:
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg EXTERNAL_SECRETS_VERSION
  variables:
    BASE: external-secrets/external-secrets
    VERSION: EXTERNAL_SECRETS_VERSION as binary

hasura-graphql-engine:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg HASURA_GRAPHQL_VERSION
  variables:
    BASE: hasura/graphql-engine
    VERSION: HASURA_GRAPHQL_VERSION

kutt:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg KUTT_VERSION
  variables:
    BASE: kutt/kutt
    VERSION: KUTT_VERSION

umami:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg UMAMI_VERSION
  variables:
    BASE: mikecao/umami
    VERSION: UMAMI_VERSION

pihole:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg PIHOLE_VERSION
  variables:
    BASE: pihole/pihole
    VERSION: PIHOLE_VERSION

clickhouse-server:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg CLICKHOUSE_VERSION
  variables:
    BASE: yandex/clickhouse-server
    VERSION: CLICKHOUSE_VERSION

clickhouse-tabix-web-client:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg TABIX_VERSION
  variables:
    BASE: spoonest/clickhouse-tabix-web-client
    VERSION: TABIX_VERSION

plausible-analytics:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg PLAUSIBLE_VERSION
  variables:
    BASE: plausible/analytics
    VERSION: PLAUSIBLE_VERSION

verdaccio:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg VERDACCIO_VERSION
  variables:
    BASE: verdaccio/verdaccio
    VERSION: VERDACCIO_VERSION

strapi:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg STRAPI_VERSION
  variables:
    BASE: strapi/strapi
    VERSION: STRAPI_VERSION

ghost:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg GHOST_VERSION
  variables:
    BASE: ghost
    VERSION: GHOST_VERSION

bitnami-ghost:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg BITNAMI_GHOST_VERSION
  variables:
    BASE: bitnami/ghost
    VERSION: BITNAMI_GHOST_VERSION

matomo:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg MATOMO_VERSION
  variables:
    BASE: matomo
    VERSION: MATOMO_VERSION

nocodb:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg NOCODB_VERSION
  variables:
    BASE: nocodb/nocodb
    VERSION: NOCODB_VERSION

metabase:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg METABASE_VERSION
  variables:
    BASE: metabase/metabase
    VERSION: METABASE_VERSION

sftpgo:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg SFTPGO_VERSION
  variables:
    BASE: drakkan/sftpgo
    VERSION: SFTPGO_VERSION

hello:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg HELLO_VERSION
  variables:
    BASE: paulbouwer/hello-kubernetes
    VERSION: HELLO_VERSION

reloader:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg RELOADER_VERSION
  variables:
    BASE: stakater/reloader
    VERSION: RELOADER_VERSION

configmap-reload:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg CONFIGMAP_RELOAD_VERSION
  variables:
    BASE: jimmidyson/configmap-reload
    VERSION: CONFIGMAP_RELOAD_VERSION

docker-registry:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg DOCKER_REGISTRY_VERSION
  variables:
    BASE: registry
    VERSION: DOCKER_REGISTRY_VERSION

argocd:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg ARGOCD_VERSION \
        --build-arg ARGOCD_VAULT_PLUGIN_VERSION \
        --build-arg ARGOCD_VAULT_PLUGIN_HASH \
        --build-arg YTT_VERSION \
        --build-arg YTT_HASH
  variables:
    BASE: argoproj/argocd
    VERSION: ARGOCD_VERSION

argocd-applicationset:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg ARGOCD_APPLICATIONSET_VERSION
  variables:
    BASE: argoproj/argocd-applicationset
    VERSION: ARGOCD_APPLICATIONSET_VERSION

argo-events:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg ARGO_EVENTS_VERSION \
  variables:
    BASE: argoproj/argo-events
    VERSION: ARGO_EVENTS_VERSION

argo-workflows-server:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg ARGO_WORKFLOWS_VERSION \
  variables:
    BASE: argoproj/argocli
    VERSION: ARGO_WORKFLOWS_VERSION

argo-workflows-controller:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg ARGO_WORKFLOWS_VERSION \
  variables:
    BASE: argoproj/workflow-controller
    VERSION: ARGO_WORKFLOWS_VERSION

argo-workflows-executor:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg ARGO_WORKFLOWS_VERSION \
  variables:
    BASE: argoproj/workflow-controller
    VERSION: ARGO_WORKFLOWS_VERSION

boky-postfix:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg BOKY_POSTFIX_VERSION
  variables:
    BASE: boky/postfix
    VERSION: BOKY_POSTFIX_VERSION

cryptgeon:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg CRYPTGEON_VERSION
  variables:
    BASE: cupcakearmy/cryptgeon
    VERSION: CRYPTGEON_VERSION

memcached:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg MEMCACHED_VERSION
  variables:
    BASE: memcached
    VERSION: MEMCACHED_VERSION

dex:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg DEX_VERSION
  variables:
    BASE: dexidp/dex
    VERSION: DEX_VERSION

redis:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg REDIS_VERSION
  variables:
    BASE: redis
    VERSION: REDIS_VERSION

listmonk:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg LISTMONK_VERSION
  variables:
    BASE: listmonk/listmonk
    VERSION: LISTMONK_VERSION

consul:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg CONSUL_VERSION
  variables:
    BASE: hashicorp/consul
    VERSION: CONSUL_VERSION

consul-k8s-control-plane:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg CONSUL_K8S_CP_VERSION
  variables:
    BASE: hashicorp/consul-k8s-control-plane
    VERSION: CONSUL_K8S_CP_VERSION

envoy:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg ENVOY_VERSION
  variables:
    BASE: envoyproxy/envoy-alpine
    VERSION: ENVOY_VERSION

vault:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg VAULT_VERSION
  variables:
    BASE: hashicorp/vault
    VERSION: VAULT_VERSION

vault-k8s:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg VAULT_K8S_VERSION
  variables:
    BASE: hashicorp/vault-k8s
    VERSION: VAULT_K8S_VERSION

vault-csi-provider:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg VAULT_CSI_PROVIDER_VERSION
  variables:
    BASE: hashicorp/vault-csi-provider
    VERSION: VAULT_CSI_PROVIDER_VERSION

strimzi-operator:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg STRIMZI_OPERATOR_VERSION
  variables:
    BASE: strimzi/operator
    VERSION: STRIMZI_OPERATOR_VERSION

strimzi-kafka:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg STRIMZI_OPERATOR_VERSION \
        --build-arg STRIMZI_KAFKA_VERSION
  variables:
    BASE: strimzi/kafka

nats-operator:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg NATS_OPERATOR_VERSION
  variables:
    BASE: connecteverything/nats-operator
    VERSION: NATS_OPERATOR_VERSION

nats:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg NATS_VERSION
  variables:
    BASE: nats
    VERSION: NATS_VERSION

nats-exporter:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg NATS_EXPORTER_VERSION
  variables:
    BASE: natsio/prometheus-nats-exporter
    VERSION: NATS_EXPORTER_VERSION

nats-server-config-reloader:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg NATS_SERVER_CONFIG_RELOADER
  variables:
    BASE: natsio/nats-server-config-reloader
    VERSION: NATS_SERVER_CONFIG_RELOADER

mosquitto:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg MOSQUITTO_VERSION
  variables:
    BASE: eclipse-mosquitto
    VERSION: MOSQUITTO_VERSION

mosquitto-exporter:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg MOSQUITTO_EXPORTER_VERSION
  variables:
    BASE: sapcc/mosquitto-exporter
    VERSION: MOSQUITTO_EXPORTER_VERSION

cert-manager-controller:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg CERT_MANAGER_VERSION
  variables:
    BASE: jetstack/cert-manager-controller
    VERSION: CERT_MANAGER_VERSION

cert-manager-webhook:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg CERT_MANAGER_VERSION
  variables:
    BASE: jetstack/cert-manager-webhook
    VERSION: CERT_MANAGER_VERSION

cert-manager-cainjector:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg CERT_MANAGER_VERSION
  variables:
    BASE: jetstack/cert-manager-cainjector
    VERSION: CERT_MANAGER_VERSION

cert-manager-ctl:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg CERT_MANAGER_VERSION
  variables:
    BASE: jetstack/cert-manager-ctl
    VERSION: CERT_MANAGER_VERSION

cert-manager-csi-driver:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg CERT_MANAGER_CSI_DRIVER_VERSION
  variables:
    BASE: jetstack/cert-manager-csi-driver
    VERSION: CERT_MANAGER_CSI_DRIVER_VERSION

cert-manager-webhook-pdns:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg CERT_MANAGER_WEBHOOK_PDNS_VERSION
  variables:
    BASE: zachomedia/cert-manager-webhook-pdns
    VERSION: CERT_MANAGER_WEBHOOK_PDNS_VERSION

cert-manager-webhook-powerdns:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg CERT_MANAGER_WEBHOOK_POWERDNS_VERSION
  variables:
    BASE: vstadtmueller/cert-manager-webhook-powerdns
    VERSION: CERT_MANAGER_WEBHOOK_POWERDNS_VERSION

caddy:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg CADDY_VERSION
  variables:
    BASE: caddy
    VERSION: CADDY_VERSION

bpftrace:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg BPFTRACE_VERSION
  variables:
    BASE: iovisor/bpftrace
    VERSION: BPFTRACE_VERSION

coredns:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg COREDNS_VERSION
  variables:
    BASE: coredns/coredns
    VERSION: COREDNS_VERSION

k8s-coredns:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg K8S_COREDNS_VERSION
  variables:
    BASE: coredns/coredns
    VERSION: K8S_COREDNS_VERSION

k8s-pause:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg K8S_PAUSE_VERSION
  variables:
    BASE: pause
    VERSION: K8S_PAUSE_VERSION

storage-livenessprobe:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg LIVENESSPROBE_VERSION
  variables:
    BASE: sig-storage/livenessprobe
    VERSION: LIVENESSPROBE_VERSION

storage-csi-node-driver-registrar:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg CSI_NODE_DRIVER_REGISTRAR_VERSION
  variables:
    BASE: sig-storage/csi-node-driver-registrar
    VERSION: CSI_NODE_DRIVER_REGISTRAR_VERSION

storage-csi-attacher:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg CSI_ATTACHER_VERSION
  variables:
    BASE: sig-storage/csi-attacher
    VERSION: CSI_ATTACHER_VERSION

storage-csi-resizer:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg CSI_RESIZER_VERSION
  variables:
    BASE: sig-storage/csi-resizer
    VERSION: CSI_RESIZER_VERSION

storage-csi-snapshotter:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg CSI_SNAPSHOTTER_VERSION
  variables:
    BASE: sig-storage/csi-snapshotter
    VERSION: CSI_SNAPSHOTTER_VERSION

storage-snapshot-controller:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg CSI_SNAPSHOTTER_VERSION
  variables:
    BASE: sig-storage/snapshot-controller
    VERSION: CSI_SNAPSHOTTER_VERSION

storage-snapshot-validation-webhook:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg CSI_SNAPSHOTTER_VERSION
  variables:
    BASE: sig-storage/snapshot-validation-webhook
    VERSION: CSI_SNAPSHOTTER_VERSION

storage-csi-provisioner:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg CSI_PROVISIONER_VERSION
  variables:
    BASE: sig-storage/csi-provisioner
    VERSION: CSI_PROVISIONER_VERSION

vmware-exporter:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg VMWARE_EXPORTER_VERSION
  variables:
    BASE: pryorda/vmware_exporter
    VERSION: VMWARE_EXPORTER_VERSION

vsphere-csi-driver:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg VSPHERE_CSI_DRIVER_VERSION
  variables:
    BASE: cloud-provider-vsphere/csi/release/driver
    VERSION: VSPHERE_CSI_DRIVER_VERSION

vsphere-csi-syncer:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg VSPHERE_CSI_SYNCER_VERSION
  variables:
    BASE: cloud-provider-vsphere/csi/release/syncer
    VERSION: VSPHERE_CSI_SYNCER_VERSION

vsphere-cpi-manager:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg VSPHERE_CPI_MANAGER_VERSION
  variables:
    BASE: cloud-provider-vsphere/cpi/release/manager
    VERSION: VSPHERE_CPI_MANAGER_VERSION

kafdrop:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg KAFDROP_VERSION
  variables:
    BASE: obsidiandynamics/kafdrop
    VERSION: KAFDROP_VERSION

akhq:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg AKHQ_VERSION
  variables:
    BASE: tchiotludo/akhq
    VERSION: AKHQ_VERSION

tigera-operator:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg TIGERA_OPERATOR_VERSION
  variables:
    BASE: tigera/operator
    VERSION: TIGERA_OPERATOR_VERSION

eck-operator:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg ECK_OPERATOR_VERSION
  variables:
    BASE: elastic/eck-operator
    VERSION: ECK_OPERATOR_VERSION

confluent-operator:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg CONFLUENTINC_OPERATOR_VERSION
  variables:
    BASE: confluentinc/confluent-operator
    VERSION: CONFLUENTINC_OPERATOR_VERSION

confluent-init-container:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg CONFLUENTINC_INIT_CONTAINER_VERSION
  variables:
    BASE: confluentinc/confluent-init-container
    VERSION: CONFLUENTINC_INIT_CONTAINER_VERSION

confluent-platform:
  interruptible: true
  retry: 2
  stage: build
  parallel:
    matrix:
      - CONFLUENTINC_CP_COMPONENT:
          - enterprise-control-center
          - enterprise-replicator
          - kafka-rest
          - ksqldb-server
          - ksqldb-cli
          - schema-registry
          - server
          - server-connect
          - zookeeper
        DUMMY:
          - dummy
  script:
    - |
      ./gitlab/build-image.sh confluent-platform ${DOCKER_NAMESPACE}/confluentinc-cp-${CONFLUENTINC_CP_COMPONENT}:${INFRA_VERSION} \
        --build-arg CONFLUENTINC_CP_VERSION \
        --build-arg CONFLUENTINC_CP_COMPONENT

uptime-kuma:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg UPTIME_KUMA_VERSION
  variables:
    BASE: louislam/uptime-kuma
    VERSION: UPTIME_KUMA_VERSION

airflow:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg AIRFLOW_VERSION
  variables:
    BASE: apache/airflow
    VERSION: AIRFLOW_VERSION

git-sync:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg GIT_SYNC_VERSION
  variables:
    BASE: git-sync/git-sync
    VERSION: GIT_SYNC_VERSION

keda:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg KEDA_VERSION
  variables:
    BASE: kedacore/keda
    VERSION: KEDA_VERSION

keda-metrics-apiserver:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg KEDA_VERSION
  variables:
    BASE: kedacore/keda-metrics-apiserver
    VERSION: KEDA_VERSION

hadolint:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg HADOLINT_VERSION
  variables:
    BASE: hadolint/hadolint
    VERSION: HADOLINT_VERSION

outline:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg OUTLINE_VERSION
  variables:
    BASE: outlinewiki/outline
    VERSION: OUTLINE_VERSION

syncthing:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg SYNCTHING_VERSION
  variables:
    BASE: syncthing/syncthing
    VERSION: SYNCTHING_VERSION

jellyfin:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg JELLYFIN_VERSION
  variables:
    BASE: jellyfin/jellyfin
    VERSION: JELLYFIN_VERSION

netmaker:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg NETMAKER_VERSION
  variables:
    BASE: gravitl/netmaker
    VERSION: NETMAKER_VERSION

netmaker-ui:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg NETMAKER_UI_VERSION
  variables:
    BASE: gravitl/netmaker-ui
    VERSION: NETMAKER_UI_VERSION

youtube-dl-server:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg YOUTUBE_DL_SERVER_VERSION
  variables:
    BASE: kmb32123/youtube-dl-server
    VERSION: YOUTUBE_DL_SERVER_VERSION

puppetserver:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg PUPPETSERVER_VERSION
  variables:
    BASE: puppet/puppetserver
    VERSION: PUPPETSERVER_VERSION

puppetdb:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg PUPPETDB_VERSION
  variables:
    BASE: puppet/puppetdb
    VERSION: PUPPETDB_VERSION

r10k:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg R10K_VERSION
  variables:
    BASE: puppet/r10k
    VERSION: R10K_VERSION

puppetboard:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg PUPPETBOARD_VERSION
  variables:
    BASE: voxpupuli/puppetboard
    VERSION: PUPPETBOARD_VERSION

restic:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg RESTIC_VERSION
  variables:
    BASE: restic/restic
    VERSION: RESTIC_VERSION

yugabyte:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg YUGABYTE_VERSION
  variables:
    BASE: yugabytedb/yugabyte
    VERSION: YUGABYTE_VERSION

keeweb:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg KEEWEB_VERSION
  variables:
    BASE: antelle/keeweb
    VERSION: KEEWEB_VERSION

netbird-dashboard:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg NETBIRD_DASHBOARD_VERSION
  variables:
    BASE: wiretrustee/dashboard
    VERSION: NETBIRD_DASHBOARD_VERSION

netbird-management:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg NETBIRD_MANAGEMENT_VERSION
  variables:
    BASE: netbirdio/management
    VERSION: NETBIRD_MANAGEMENT_VERSION

netbird-signal:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg NETBIRD_SIGNAL_VERSION
  variables:
    BASE: netbirdio/signal
    VERSION: NETBIRD_SIGNAL_VERSION

coturn:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg COTURN_VERSION
  variables:
    BASE: coturn/coturn
    VERSION: COTURN_VERSION

firezone:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg FIREZONE_VERSION
  variables:
    BASE: firezone/firezone
    VERSION: FIREZONE_VERSION

jenkins:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg JENKINS_VERSION
  variables:
    BASE: jenkins/jenkins
    VERSION: JENKINS_VERSION

jenkins-agent:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg JENKINS_AGENT_VERSION
  variables:
    BASE: jenkins/agent
    VERSION: JENKINS_AGENT_VERSION

netbox:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg NETBOX_VERSION
  variables:
    BASE: netboxcommunity/netbox
    VERSION: NETBOX_VERSION

velero:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg VELERO_VERSION
  variables:
    BASE: velero/velero
    VERSION: VELERO_VERSION

velero-plugin-for-csi:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg VELERO_PLUGIN_CSI_VERSION
  variables:
    BASE: velero/velero-plugin-for-csi
    VERSION: VELERO_PLUGIN_CSI_VERSION

velero-plugin-for-aws:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg VELERO_PLUGIN_AWS_VERSION
  variables:
    BASE: velero/velero-plugin-for-aws
    VERSION: VELERO_PLUGIN_AWS_VERSION

velero-plugin-for-gcp:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg VELERO_PLUGIN_GCP_VERSION
  variables:
    BASE: velero/velero-plugin-for-gcp
    VERSION: VELERO_PLUGIN_GCP_VERSION

velero-plugin-for-azure:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg VELERO_PLUGIN_AZURE_VERSION
  variables:
    BASE: velero/velero-plugin-for-microsoft-azure
    VERSION: VELERO_PLUGIN_AZURE_VERSION

velero-plugin-for-vsphere:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg VELERO_PLUGIN_VSPHERE_VERSION
  variables:
    BASE: vsphereveleroplugin/velero-plugin-for-vsphere
    VERSION: VELERO_PLUGIN_VSPHERE_VERSION

backup-driver:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg VELERO_PLUGIN_VSPHERE_VERSION
  variables:
    BASE: vsphereveleroplugin/backup-driver
    VERSION: VELERO_PLUGIN_VSPHERE_VERSION

data-manager-for-plugin:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg VELERO_PLUGIN_VSPHERE_VERSION
  variables:
    BASE: vsphereveleroplugin/data-manager-for-plugin
    VERSION: VELERO_PLUGIN_VSPHERE_VERSION

velero-restic-restore-helper:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg VELERO_RESTIC_RESTORE_HELPER_VERSION
  variables:
    BASE: velero/velero-plugin-for-csi
    VERSION: VELERO_RESTIC_RESTORE_HELPER_VERSION

velero-kubectl:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg VELERO_KUBECTL_VERSION
  variables:
    BASE: bitnami/kubectl
    VERSION: VELERO_KUBECTL_VERSION

kubernetes-dashboard:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg K8S_DASHBOARD_VERSION
  variables:
    BASE: kubernetesui/dashboard
    VERSION: K8S_DASHBOARD_VERSION

kubernetes-dashboard-api:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg K8S_DASHBOARD_API_VERSION
  variables:
    BASE: kubernetesui/dashboard-api
    VERSION: K8S_DASHBOARD_API_VERSION

kubernetes-dashboard-web:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg K8S_DASHBOARD_WEB_VERSION
  variables:
    BASE: kubernetesui/dashboard
    VERSION: K8S_DASHBOARD_WEB_VERSION

kubernetes-dashboard-metrics-scraper:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg K8S_DASHBOARD_METRICS_SCRAPER_VERSION
  variables:
    BASE: kubernetesui/metrics-scraper
    VERSION: K8S_DASHBOARD_METRICS_SCRAPER_VERSION

postgrest:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg POSTGREST_VERSION
  variables:
    BASE: postgrest/postgrest
    VERSION: POSTGREST_VERSION

azure-workload-identity-webhook:
  interruptible: true
  retry: 2
  stage: build
  script:
    - |
      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION} \
        --build-arg AZURE_WORKLOAD_IDENTITY_VERSION
  variables:
    BASE: oss/azure/workload-identity/webhook
    VERSION: AZURE_WORKLOAD_IDENTITY_VERSION

infra-docs:
  interruptible: true
  retry: 2
  stage: build2
  script:
    - |
      git clone https://readonly:${INFRA_READONLY_TOKEN}@git.nrtn.dev/infra/infra-docs.git

      ( cd infra-docs && git archive --format=tar HEAD ) | ( cd docker/infra-docs/docs && tar xf - )

      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION}

infra-charts:
  interruptible: true
  retry: 2
  stage: build2
  script:
    - |
      ./import-charts.sh import-charts.yml docker/infra-charts/charts

      ./gitlab/build-image.sh ${CI_JOB_NAME} ${DOCKER_NAMESPACE}/${CI_JOB_NAME}:${INFRA_VERSION}

      if [[ ! -z "${CI_COMMIT_TAG:-}" ]]; then
          archive_folder docker/infra-charts/charts charts ${INFRA_VERSION}
      fi

run-hadolint:
  interruptible: true
  retry: 2
  stage: build2
  script:
    - |
      (
        shopt -u -o errexit
        for dockerfile in docker/*/Dockerfile; do
          echo ${dockerfile}
          docker run --rm cr.nrtn.dev/infra/hadolint:${INFRA_VERSION} < ${dockerfile};
        done
      )
